+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
210
2021-05-24 18:05:35
0
**line number: 4
s X h -> S X H S X H
M r O -> M R O M R O
n V z Y -> N V Z Y N V Z Y
F S v v -> F S V V F S V V
H r s o w ->
The right answer is: H R S O W H R S O W
The model return: H R S O W H R S O W
right
y M U h s -> Y M U H S Y M U H S
b o t Y s -> B O T Y S B O T Y S
G d z -> G D Z G D Z
G X u -> G X U G X U
d q V h ->
The right answer is: D Q V H D Q V H
The model return: D Q V H D Q V H
right
f m T G -> F M T G F M T G
R L x -> R L X R L X
b w I l -> B W I L B W I L
h x T c -> H X T C H X T C
D r C K ->
The right answer is: D R C K D R C K
The model return: D R C K D R C K
right
p G L L g -> P G L L G P G L L G
m g W -> M G W M G W
k U t -> K U T K U T
E M i L -> E M I L E M I L
d Y i n ->
The right answer is: D Y I N D Y I N
The model return: D Y I N D Y I N
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 4]
==========================================================================
1
**line number: 4
F g W -> f g w f g w
z o P x -> z o p x z o p x
K m N -> k m n k m n
Z O T a -> z o t a z o t a
y I x s ->
The right answer is: y i x s y i x s
The model return: y i x s y i x s
right
z f W F -> z f w f z f w f
L R t e -> l r t e l r t e
S N D s l -> s n d s l s n d s l
E e V L -> e e v l e e v l
M X m ->
The right answer is: m x m m x m
The model return: m x m x m
false
l Y s -> l y s l y s
x V V i -> x v v i x v v i
S f z -> s f z s f z
t W p E -> t w p e t w p e
R I C Y u ->
The right answer is: r i c y u r i c y u
The model return: r i c y u r i c y u
right
F r E -> f r e f r e
X O n k W -> x o n k w x o n k w
A G A m I -> a g a m i a g a m i
C A K Z f -> c a k z f c a k z f
K N r R ->
The right answer is: k n r r k n r r
The model return: k n r r k n r r
right
x Y N B -> x y n b x y n b
c B V Z I -> c b v z i c b v z i
e e T -> e e t e e t
Q o q p d -> q o q p d q o q p d
G F q b ->
The right answer is: g f q b g f q b
The model return: g f q b g f q b
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 4]
==========================================================================
2
**line number: 4
G K y W -> g K y W G K y W
a a g O g -> a a g o g a a g O g
F b M -> f b M F b M
o A w w -> o a w w o A w w
K u S c G ->
The right answer is: k u S c G K u S c G
The model return: k u S c G K u S c G
right
T l M -> t l M T l M
U C T e -> u C T e U C T e
Q Q W d e -> q Q W d e Q Q W d e
l B c o -> l b c o l B c o
A c G ->
The right answer is: a c G A c G
The model return: a c G A c G
right
K L E U f -> k L E U f K L E U f
e B X s -> e b X s e B X s
G z d -> g z d G z d
g a S a B -> g a s a B g a S a B
w W g a Y ->
The right answer is: w w g a Y w W g a Y
The model return: w W g a Y w W g a Y
false
k L c -> k l c k L c
h P S v E -> h p S v E h P S v E
Z L g U -> z L g U Z L g U
D k N q Z -> d k N q Z D k N q Z
C W a m ->
The right answer is: c W a m C W a m
The model return: c W a m C W a m
right
E I W E c -> e I W E c E I W E c
A G h f A -> a G h f A A G h f A
z e C D -> z e c D z e C D
F T u -> f T u F T u
N E e s A ->
The right answer is: n E e s A N E e s A
The model return: n E e s A N E e s A
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], 4]
==========================================================================
3
**line number: 4
g y n -> g g y n g y n
o t z w z -> o o t z w z o t z w z
f f v n -> f f f v n f f v n
s c g w u -> s s c g w u s c g w u
v x r m ->
The right answer is: v v x r m v x r m
The model return: v v x r m v x r m
right
9 6 7 7 -> 9 9 6 7 7 9 6 7 7
8 4 5 8 8 -> 8 8 4 5 8 8 8 4 5 8 8
3 5 3 1 7 -> 3 3 5 3 1 7 3 5 3 1 7
9 0 4 -> 9 9 0 4 9 0 4
5 6 1 ->
The right answer is: 5 5 6 1 5 6 1
The model return: 5 5 6 1 5 5 6 1
false
F Q L B -> F F Q L B F Q L B
C B F -> C C B F C B F
B S S -> B B S S B S S
R L L W L -> R R L L W L R L L W L
S S N V P ->
The right answer is: S S S N V P S S N V P
The model return: S S N V P S S N V P
false
**line number: 8
g y n -> g g y n g y n
o t z w z -> o o t z w z o t z w z
f f v n -> f f f v n f f v n
s c g w u -> s s c g w u s c g w u
g k m g m -> g g k m g m g k m g m
g f n l -> g g f n l g f n l
h x r -> h h x r h x r
q b g -> q q b g q b g
v x r m ->
The right answer is: v v x r m v x r m
The model return: v v x r m v x r m
right
9 6 7 7 -> 9 9 6 7 7 9 6 7 7
8 4 5 8 8 -> 8 8 4 5 8 8 8 4 5 8 8
3 5 3 1 7 -> 3 3 5 3 1 7 3 5 3 1 7
9 0 4 -> 9 9 0 4 9 0 4
2 8 6 1 -> 2 2 8 6 1 2 8 6 1
4 8 6 8 -> 4 4 8 6 8 4 8 6 8
8 8 6 -> 8 8 8 6 8 8 6
7 5 0 7 6 -> 7 7 5 0 7 6 7 5 0 7 6
5 6 1 ->
The right answer is: 5 5 6 1 5 6 1
The model return: 5 5 6 1 5 6 1
right
F Q L B -> F F Q L B F Q L B
C B F -> C C B F C B F
B S S -> B B S S B S S
R L L W L -> R R L L W L R L L W L
G P P H W -> G G P P H W G P P H W
T Z T L -> T T Z T L T Z T L
H B O M I -> H H B O M I H B O M I
A G W B -> A A G W B A G W B
S S N V P ->
The right answer is: S S S N V P S S N V P
The model return: S S S N V P S S N V
false
6 6 5 3 8 -> 6 6 6 5 3 8 6 6 5 3 8
6 1 0 2 9 -> 6 6 1 0 2 9 6 1 0 2 9
6 1 7 8 5 -> 6 6 1 7 8 5 6 1 7 8 5
6 6 7 1 -> 6 6 6 7 1 6 6 7 1
6 3 8 0 5 -> 6 6 3 8 0 5 6 3 8 0 5
7 5 2 8 -> 7 7 5 2 8 7 5 2 8
2 7 2 0 6 -> 2 2 7 2 0 6 2 7 2 0 6
0 8 5 2 -> 0 0 8 5 2 0 8 5 2
3 1 5 ->
The right answer is: 3 3 1 5 3 1 5
The model return: 3 3 1 5 3 1 5
right
t y z -> t t y z t y z
l m g -> l l m g l m g
y l m m g -> y y l m m g y l m m g
o l r r -> o o l r r o l r r
z v u p -> z z v u p z v u p
x m c z -> x x m c z x m c z
z p k u -> z z p k u z p k u
g g g h l -> g g g g h l g g g h l
u m h ->
The right answer is: u u m h u m h
The model return: u u m h u m h
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], 8]
==========================================================================
4
**line number: 4
2 4 9 -> 2
0 6 0 -> 0
5 2 3 -> 5
8 3 8 -> 8
0 5 2 ->
The right answer is: 0
The model return: 0
right
1 8 7 -> 1
6 2 3 9 -> 6
4 7 9 -> 4
4 1 4 -> 4
1 2 1 7 ->
The right answer is: 1
The model return: 1
right
g x i c d -> g
d f k w -> d
g d l g -> g
c l i -> c
x y e ->
The right answer is: x
The model return: x
right
y n x p l -> y
g m b -> g
l e l c u -> l
w e t r g -> w
w q t ->
The right answer is: w
The model return: w
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 4]
==========================================================================
5
**line number: 4
8 3 4 1 7 -> 3 4 1 7 8 3 4 1 7
4 4 4 8 2 -> 4 4 8 2 4 4 4 8 2
0 0 7 5 -> 0 7 5 0 0 7 5
4 5 1 0 -> 5 1 0 4 5 1 0
8 4 9 0 1 ->
The right answer is: 4 9 0 1 8 4 9 0 1
The model return: 8 4 9 0 1 8 4 9 0 1
false
0 4 2 4 7 -> 4 2 4 7 0 4 2 4 7
9 5 0 -> 5 0 9 5 0
4 2 1 -> 2 1 4 2 1
4 0 1 -> 0 1 4 0 1
6 9 2 6 3 ->
The right answer is: 9 2 6 3 6 9 2 6 3
The model return: 6 2 6 3
false
**line number: 8
8 3 4 1 7 -> 3 4 1 7 8 3 4 1 7
4 4 4 8 2 -> 4 4 8 2 4 4 4 8 2
0 0 7 5 -> 0 7 5 0 0 7 5
4 5 1 0 -> 5 1 0 4 5 1 0
4 0 4 0 -> 0 4 0 4 0 4 0
8 2 8 9 -> 2 8 9 8 2 8 9
1 5 0 3 9 -> 5 0 3 9 1 5 0 3 9
9 6 1 -> 6 1 9 6 1
8 4 9 0 1 ->
The right answer is: 4 9 0 1 8 4 9 0 1
The model return: 4 9 0 1 8 4 9 0 1
right
0 4 2 4 7 -> 4 2 4 7 0 4 2 4 7
9 5 0 -> 5 0 9 5 0
4 2 1 -> 2 1 4 2 1
4 0 1 -> 0 1 4 0 1
9 5 6 0 2 -> 5 6 0 2 9 5 6 0 2
5 3 6 4 -> 3 6 4 5 3 6 4
2 6 1 0 -> 6 1 0 2 6 1 0
8 3 1 7 -> 3 1 7 8 3 1 7
6 9 2 6 3 ->
The right answer is: 9 2 6 3 6 9 2 6 3
The model return: 2 6 3 6 9 2 6 3
false
0 4 4 9 4 -> 4 4 9 4 0 4 4 9 4
3 6 8 3 4 -> 6 8 3 4 3 6 8 3 4
4 2 6 2 -> 2 6 2 4 2 6 2
6 8 8 9 -> 8 8 9 6 8 8 9
5 6 7 4 -> 6 7 4 5 6 7 4
2 6 8 4 -> 6 8 4 2 6 8 4
7 9 5 -> 9 5 7 9 5
4 9 1 1 9 -> 9 1 1 9 4 9 1 1 9
1 4 8 3 8 ->
The right answer is: 4 8 3 8 1 4 8 3 8
The model return: 4 8 3 8 1 4 8 3 8
right
C T G -> T G C T G
D E V -> E V D E V
D Y D X -> Y D X D Y D X
I M T R N -> M T R N I M T R N
L V G E Q -> V G E Q L V G E Q
Z G M -> G M Z G M
E A S T E -> A S T E E A S T E
T U F -> U F T U F
M R F O ->
The right answer is: R F O M R F O
The model return: R F O M R F O
right
6 0 8 5 5 -> 0 8 5 5 6 0 8 5 5
0 9 0 1 -> 9 0 1 0 9 0 1
9 4 2 -> 4 2 9 4 2
4 8 8 -> 8 8 4 8 8
6 0 5 8 -> 0 5 8 6 0 5 8
9 4 1 2 4 -> 4 1 2 4 9 4 1 2 4
9 1 6 -> 1 6 9 1 6
4 5 0 6 -> 5 0 6 4 5 0 6
5 0 7 ->
The right answer is: 0 7 5 0 7
The model return: 0 7 5 0 7
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 8]
==========================================================================
6
**line number: 4
T X G G K -> T X G G K T X G G L
N G M G S -> N G M G S N G M G T
Q K U R Y -> Q K U R Y Q K U R Z
L D V -> L D V L D W
D O L A ->
The right answer is: D O L A D O L B
The model return: D O L A D O L B
right
1 6 0 -> 1 6 0 1 6 1
3 3 0 7 6 -> 3 3 0 7 6 3 3 0 7 7
9 1 5 -> 9 1 5 9 1 6
4 6 7 -> 4 6 7 4 6 8
1 4 2 ->
The right answer is: 1 4 2 1 4 3
The model return: 1 4 2 1 4 3
right
Z Y R -> Z Y R Z Y S
H Y L -> H Y L H Y M
D W Q O -> D W Q O D W Q P
P B W -> P B W P B X
E N K E H ->
The right answer is: E N K E H E N K E I
The model return: E N K E H E N K E I
right
R T P V F -> R T P V F R T P V G
A A P L R -> A A P L R A A P L S
E I D B -> E I D B E I D C
K E Z Q -> K E Z Q K E Z R
H W O X ->
The right answer is: H W O X H W O Y
The model return: H W O X H W O Y
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], 4]
==========================================================================
7
**line number: 4
e m u n -> e m u n e m u n n
a l v -> a l v a l v v
x f s w -> x f s w x f s w w
n b p c -> n b p c n b p c c
f b c s ->
The right answer is: f b c s f b c s s
The model return: f b c s f b c s s
right
C H I V -> C H I V C H I V V
N L R -> N L R N L R R
F L V -> F L V F L V V
D D T L -> D D T L D D T L L
Q P Z W ->
The right answer is: Q P Z W Q P Z W W
The model return: Q P Z W Q P Z W W
right
e z t u f -> e z t u f e z t u f f
p e l -> p e l p e l l
l p u -> l p u l p u u
q i q v -> q i q v q i q v v
i g g p q ->
The right answer is: i g g p q i g g p q q
The model return: i g g p q i g g p q
false
3 7 4 5 0 -> 3 7 4 5 0 3 7 4 5 0 0
6 8 1 3 -> 6 8 1 3 6 8 1 3 3
6 9 3 -> 6 9 3 6 9 3 3
9 6 9 2 -> 9 6 9 2 9 6 9 2 2
2 1 3 7 7 ->
The right answer is: 2 1 3 7 7 2 1 3 7 7 7
The model return: 2 1 3 7 7 2 1 3 7 7
false
**line number: 8
e m u n -> e m u n e m u n n
a l v -> a l v a l v v
x f s w -> x f s w x f s w w
n b p c -> n b p c n b p c c
z q a c -> z q a c z q a c c
z f m i a -> z f m i a z f m i a a
k g i c -> k g i c k g i c c
q r d c -> q r d c q r d c c
f b c s ->
The right answer is: f b c s f b c s s
The model return: f b c s f b c s c
false
C H I V -> C H I V C H I V V
N L R -> N L R N L R R
F L V -> F L V F L V V
D D T L -> D D T L D D T L L
I Q T T Q -> I Q T T Q I Q T T Q Q
I E B Y -> I E B Y I E B Y Y
B Z V E E -> B Z V E E B Z V E E E
L M F -> L M F L M F F
Q P Z W ->
The right answer is: Q P Z W Q P Z W W
The model return: Q P Z W Q P Z W W
right
e z t u f -> e z t u f e z t u f f
p e l -> p e l p e l l
l p u -> l p u l p u u
q i q v -> q i q v q i q v v
o h c c h -> o h c c h o h c c h h
t d i f -> t d i f t d i f f
g c y s -> g c y s g c y s s
r b p o -> r b p o r b p o o
i g g p q ->
The right answer is: i g g p q i g g p q q
The model return: i g g p q i g g p q
false
**line number: 16
e m u n -> e m u n e m u n n
a l v -> a l v a l v v
x f s w -> x f s w x f s w w
n b p c -> n b p c n b p c c
z q a c -> z q a c z q a c c
z f m i a -> z f m i a z f m i a a
k g i c -> k g i c k g i c c
q r d c -> q r d c q r d c c
z g t c z -> z g t c z z g t c z z
s f m c -> s f m c s f m c c
h k c w -> h k c w h k c w w
i f g r -> i f g r i f g r r
f t p b -> f t p b f t p b b
s u d p f -> s u d p f s u d p f f
p t r h n -> p t r h n p t r h n n
g d t y -> g d t y g d t y y
f b c s ->
The right answer is: f b c s f b c s s
The model return: f b c s f b c s s
right
C H I V -> C H I V C H I V V
N L R -> N L R N L R R
F L V -> F L V F L V V
D D T L -> D D T L D D T L L
I Q T T Q -> I Q T T Q I Q T T Q Q
I E B Y -> I E B Y I E B Y Y
B Z V E E -> B Z V E E B Z V E E E
L M F -> L M F L M F F
G Z X V Q -> G Z X V Q G Z X V Q Q
R K K K -> R K K K R K K K K
Q C V H -> Q C V H Q C V H H
L N R -> L N R L N R R
T G E K F -> T G E K F T G E K F F
K V H G -> K V H G K V H G G
Y B V -> Y B V Y B V V
A D I -> A D I A D I I
Q P Z W ->
The right answer is: Q P Z W Q P Z W W
The model return: Q P Z W Q P Z W W
right
e z t u f -> e z t u f e z t u f f
p e l -> p e l p e l l
l p u -> l p u l p u u
q i q v -> q i q v q i q v v
o h c c h -> o h c c h o h c c h h
t d i f -> t d i f t d i f f
g c y s -> g c y s g c y s s
r b p o -> r b p o r b p o o
k o g l -> k o g l k o g l l
v h r -> v h r v h r r
z r g l -> z r g l z r g l l
h v n k -> h v n k h v n k k
i b q o -> i b q o i b q o o
a g i -> a g i a g i i
d r e c m -> d r e c m d r e c m m
z m q -> z m q z m q q
i g g p q ->
The right answer is: i g g p q i g g p q q
The model return: i g g p q i g g p q
false
3 7 4 5 0 -> 3 7 4 5 0 3 7 4 5 0 0
6 8 1 3 -> 6 8 1 3 6 8 1 3 3
6 9 3 -> 6 9 3 6 9 3 3
9 6 9 2 -> 9 6 9 2 9 6 9 2 2
6 9 6 4 5 -> 6 9 6 4 5 6 9 6 4 5 5
4 0 0 8 -> 4 0 0 8 4 0 0 8 8
0 9 1 4 6 -> 0 9 1 4 6 0 9 1 4 6 6
4 9 7 3 1 -> 4 9 7 3 1 4 9 7 3 1 1
8 3 2 -> 8 3 2 8 3 2 2
5 2 8 -> 5 2 8 5 2 8 8
2 1 3 -> 2 1 3 2 1 3 3
8 8 6 0 -> 8 8 6 0 8 8 6 0 0
5 9 7 -> 5 9 7 5 9 7 7
0 2 1 2 0 -> 0 2 1 2 0 0 2 1 2 0 0
1 2 1 -> 1 2 1 1 2 1 1
4 7 1 -> 4 7 1 4 7 1 1
2 1 3 7 7 ->
The right answer is: 2 1 3 7 7 2 1 3 7 7 7
The model return: 2 1 3 7 7 2 1 3 7 7
false
**line number: 32
e m u n -> e m u n e m u n n
a l v -> a l v a l v v
x f s w -> x f s w x f s w w
n b p c -> n b p c n b p c c
z q a c -> z q a c z q a c c
z f m i a -> z f m i a z f m i a a
k g i c -> k g i c k g i c c
q r d c -> q r d c q r d c c
z g t c z -> z g t c z z g t c z z
s f m c -> s f m c s f m c c
h k c w -> h k c w h k c w w
i f g r -> i f g r i f g r r
f t p b -> f t p b f t p b b
s u d p f -> s u d p f s u d p f f
p t r h n -> p t r h n p t r h n n
g d t y -> g d t y g d t y y
l d n -> l d n l d n n
g f q -> g f q g f q q
k g q k x -> k g q k x k g q k x x
m v u -> m v u m v u u
m m v o -> m m v o m m v o o
g k r o -> g k r o g k r o o
g l g n -> g l g n g l g n n
l k g -> l k g l k g g
g z z -> g z z g z z z
k p r n -> k p r n k p r n n
m s s w -> m s s w m s s w w
e t z b o -> e t z b o e t z b o o
q v k g -> q v k g q v k g g
t y c x -> t y c x t y c x x
f g k e t -> f g k e t f g k e t t
l n n k a -> l n n k a l n n k a a
f b c s ->
The right answer is: f b c s f b c s s
The model return: f b c s f b c s s
right
C H I V -> C H I V C H I V V
N L R -> N L R N L R R
F L V -> F L V F L V V
D D T L -> D D T L D D T L L
I Q T T Q -> I Q T T Q I Q T T Q Q
I E B Y -> I E B Y I E B Y Y
B Z V E E -> B Z V E E B Z V E E E
L M F -> L M F L M F F
G Z X V Q -> G Z X V Q G Z X V Q Q
R K K K -> R K K K R K K K K
Q C V H -> Q C V H Q C V H H
L N R -> L N R L N R R
T G E K F -> T G E K F T G E K F F
K V H G -> K V H G K V H G G
Y B V -> Y B V Y B V V
A D I -> A D I A D I I
P P W X -> P P W X P P W X X
V F I -> V F I V F I I
W G A F L -> W G A F L W G A F L L
R E M -> R E M R E M M
X F T A I -> X F T A I X F T A I I
G I U -> G I U G I U U
K S K G R -> K S K G R K S K G R R
Z H K I Y -> Z H K I Y Z H K I Y Y
T T P C -> T T P C T T P C C
E D H -> E D H E D H H
T R G G G -> T R G G G T R G G G G
B X D W -> B X D W B X D W W
S K V W C -> S K V W C S K V W C C
G B U F H -> G B U F H G B U F H H
C B Q -> C B Q C B Q Q
X M E B V -> X M E B V X M E B V V
Q P Z W ->
The right answer is: Q P Z W Q P Z W W
The model return: Q P Z W Q P Z W W
right
e z t u f -> e z t u f e z t u f f
p e l -> p e l p e l l
l p u -> l p u l p u u
q i q v -> q i q v q i q v v
o h c c h -> o h c c h o h c c h h
t d i f -> t d i f t d i f f
g c y s -> g c y s g c y s s
r b p o -> r b p o r b p o o
k o g l -> k o g l k o g l l
v h r -> v h r v h r r
z r g l -> z r g l z r g l l
h v n k -> h v n k h v n k k
i b q o -> i b q o i b q o o
a g i -> a g i a g i i
d r e c m -> d r e c m d r e c m m
z m q -> z m q z m q q
k d k f -> k d k f k d k f f
p g k -> p g k p g k k
n a u -> n a u n a u u
q a m c -> q a m c q a m c c
d v t v -> d v t v d v t v v
n n k t k -> n n k t k n n k t k k
c i g z -> c i g z c i g z z
t g h z -> t g h z t g h z z
c b l o -> c b l o c b l o o
e a d q w -> e a d q w e a d q w w
o q m -> o q m o q m m
e n b u -> e n b u e n b u u
q s w -> q s w q s w w
e t m m -> e t m m e t m m m
w w x -> w w x w w x x
w b v v -> w b v v w b v v v
i g g p q ->
The right answer is: i g g p q i g g p q q
The model return: i g g p q i g g p q
false
3 7 4 5 0 -> 3 7 4 5 0 3 7 4 5 0 0
6 8 1 3 -> 6 8 1 3 6 8 1 3 3
6 9 3 -> 6 9 3 6 9 3 3
9 6 9 2 -> 9 6 9 2 9 6 9 2 2
6 9 6 4 5 -> 6 9 6 4 5 6 9 6 4 5 5
4 0 0 8 -> 4 0 0 8 4 0 0 8 8
0 9 1 4 6 -> 0 9 1 4 6 0 9 1 4 6 6
4 9 7 3 1 -> 4 9 7 3 1 4 9 7 3 1 1
8 3 2 -> 8 3 2 8 3 2 2
5 2 8 -> 5 2 8 5 2 8 8
2 1 3 -> 2 1 3 2 1 3 3
8 8 6 0 -> 8 8 6 0 8 8 6 0 0
5 9 7 -> 5 9 7 5 9 7 7
0 2 1 2 0 -> 0 2 1 2 0 0 2 1 2 0 0
1 2 1 -> 1 2 1 1 2 1 1
4 7 1 -> 4 7 1 4 7 1 1
4 1 0 -> 4 1 0 4 1 0 0
5 5 6 0 -> 5 5 6 0 5 5 6 0 0
2 2 3 2 -> 2 2 3 2 2 2 3 2 2
5 5 2 0 0 -> 5 5 2 0 0 5 5 2 0 0 0
4 3 6 6 0 -> 4 3 6 6 0 4 3 6 6 0 0
2 8 8 3 -> 2 8 8 3 2 8 8 3 3
7 3 9 -> 7 3 9 7 3 9 9
4 3 9 9 -> 4 3 9 9 4 3 9 9 9
3 1 3 0 -> 3 1 3 0 3 1 3 0 0
6 3 0 5 -> 6 3 0 5 6 3 0 5 5
2 8 5 -> 2 8 5 2 8 5 5
2 9 3 -> 2 9 3 2 9 3 3
4 8 4 5 5 -> 4 8 4 5 5 4 8 4 5 5 5
9 1 6 4 -> 9 1 6 4 9 1 6 4 4
9 7 8 -> 9 7 8 9 7 8 8
7 2 3 -> 7 2 3 7 2 3 3
2 1 3 7 7 ->
The right answer is: 2 1 3 7 7 2 1 3 7 7 7
The model return: 2 1 3 7 7 2 1 3 7 7
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
==========================================================================
8
**line number: 4
S H V -> V
Y N T P -> P
U O F D -> D
W X C W W -> W
D K D P ->
The right answer is: P
The model return: D
false
U M M X X -> X
C M D -> D
S T L S -> S
X R K K -> K
F Q M V ->
The right answer is: V
The model return: Q
false
**line number: 8
S H V -> V
Y N T P -> P
U O F D -> D
W X C W W -> W
N B A D P -> P
A E C A A -> A
G Z S E -> E
K E V W O -> O
D K D P ->
The right answer is: P
The model return: P
right
U M M X X -> X
C M D -> D
S T L S -> S
X R K K -> K
L T Q Z G -> G
L E H I -> I
K X A -> A
Z N G I S -> S
F Q M V ->
The right answer is: V
The model return: V
right
v m w a -> a
g x t p -> p
s c e -> e
q v m x -> x
g g l b -> b
r d i g -> g
d f z p u -> u
r r g -> g
e e m c ->
The right answer is: c
The model return: c
right
2 4 8 -> 8
8 0 3 2 -> 2
4 6 9 -> 9
3 8 2 5 6 -> 6
2 9 3 2 -> 2
9 5 5 -> 5
3 6 0 -> 0
7 5 9 -> 9
6 8 0 9 ->
The right answer is: 9
The model return: 9
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], 8]
==========================================================================
9
**line number: 4
4 w i -> 4 w i 4 w i
6 k p 6 -> 6 k p 6 6 k p 6
9 b r f -> 9 b r f 9 b r f
9 9 a 4 -> 4 9 a 9 4 9 a 9
2 3 9 p 9 ->
The right answer is: 9 9 3 p 2 9 9 3 p 2
The model return: 9 3 9 p 2 9 3 9 p 2
false
a 1 g -> a 1 g a 1 g
k e 8 y -> k e 8 y k e 8 y
9 p q i -> 9 p q i 9 p q i
f w 8 -> f w 8 f w 8
6 c t y a ->
The right answer is: 6 c t y a 6 c t y a
The model return: 6 c t y a 6 c t y a
right
t 0 5 v -> t 5 0 v t 5 0 v
8 q l -> 8 q l 8 q l
y 2 b p h -> y 2 b p h y 2 b p h
0 r w 7 -> 7 r w 0 7 r w 0
2 b s ->
The right answer is: 2 b s 2 b s
The model return: 2 b s 2 b s
right
9 6 d -> 6 9 d 6 9 d
9 7 1 1 i -> 1 1 7 9 i 1 1 7 9 i
1 5 6 t 3 -> 3 6 5 t 1 3 6 5 t 1
8 5 8 k 2 -> 2 8 5 k 8 2 8 5 k 8
1 q 8 ->
The right answer is: 8 q 1 8 q 1
The model return: 8 1 q 8 1 q 8
false
**line number: 8
4 w i -> 4 w i 4 w i
6 k p 6 -> 6 k p 6 6 k p 6
9 b r f -> 9 b r f 9 b r f
9 9 a 4 -> 4 9 a 9 4 9 a 9
2 f v 5 -> 5 f v 2 5 f v 2
c 4 4 -> c 4 4 c 4 4
l b 2 2 4 -> l b 4 2 2 l b 4 2 2
2 g 1 6 q -> 6 g 1 2 q 6 g 1 2 q
2 3 9 p 9 ->
The right answer is: 9 9 3 p 2 9 9 3 p 2
The model return: 9 3 9 p 2 9 3 9 p 2
false
a 1 g -> a 1 g a 1 g
k e 8 y -> k e 8 y k e 8 y
9 p q i -> 9 p q i 9 p q i
f w 8 -> f w 8 f w 8
0 n 2 -> 2 n 0 2 n 0
p 7 f y u -> p 7 f y u p 7 f y u
8 x 7 6 7 -> 7 x 6 7 8 7 x 6 7 8
l q 7 v 9 -> l q 9 v 7 l q 9 v 7
6 c t y a ->
The right answer is: 6 c t y a 6 c t y a
The model return: 6 c t y a 6 c t y a
right
t 0 5 v -> t 5 0 v t 5 0 v
8 q l -> 8 q l 8 q l
y 2 b p h -> y 2 b p h y 2 b p h
0 r w 7 -> 7 r w 0 7 r w 0
g 9 0 -> g 0 9 g 0 9
y 3 f -> y 3 f y 3 f
o 9 2 -> o 2 9 o 2 9
k y p 1 9 -> k y p 9 1 k y p 9 1
2 b s ->
The right answer is: 2 b s 2 b s
The model return: 2 b s 2 b s
right
9 6 d -> 6 9 d 6 9 d
9 7 1 1 i -> 1 1 7 9 i 1 1 7 9 i
1 5 6 t 3 -> 3 6 5 t 1 3 6 5 t 1
8 5 8 k 2 -> 2 8 5 k 8 2 8 5 k 8
2 0 g t -> 0 2 g t 0 2 g t
c 4 d -> c 4 d c 4 d
f g g 3 -> f g g 3 f g g 3
k h 5 r -> k h 5 r k h 5 r
1 q 8 ->
The right answer is: 8 q 1 8 q 1
The model return: 1 q 8 1 q 8
false
**line number: 16
4 w i -> 4 w i 4 w i
6 k p 6 -> 6 k p 6 6 k p 6
9 b r f -> 9 b r f 9 b r f
9 9 a 4 -> 4 9 a 9 4 9 a 9
2 f v 5 -> 5 f v 2 5 f v 2
c 4 4 -> c 4 4 c 4 4
l b 2 2 4 -> l b 4 2 2 l b 4 2 2
2 g 1 6 q -> 6 g 1 2 q 6 g 1 2 q
l 3 n -> l 3 n l 3 n
5 s o -> 5 s o 5 s o
6 d b 2 -> 2 d b 6 2 d b 6
v z v u 2 -> v z v u 2 v z v u 2
c 7 s 2 -> c 2 s 7 c 2 s 7
r v 5 4 c -> r v 4 5 c r v 4 5 c
k 9 q c 0 -> k 0 q c 9 k 0 q c 9
i 6 0 -> i 0 6 i 0 6
2 3 9 p 9 ->
The right answer is: 9 9 3 p 2 9 9 3 p 2
The model return: 9 3 9 p 2 9 3 9 p 2
false
a 1 g -> a 1 g a 1 g
k e 8 y -> k e 8 y k e 8 y
9 p q i -> 9 p q i 9 p q i
f w 8 -> f w 8 f w 8
0 n 2 -> 2 n 0 2 n 0
p 7 f y u -> p 7 f y u p 7 f y u
8 x 7 6 7 -> 7 x 6 7 8 7 x 6 7 8
l q 7 v 9 -> l q 9 v 7 l q 9 v 7
v 1 3 5 -> v 5 3 1 v 5 3 1
1 7 e -> 7 1 e 7 1 e
1 g 3 -> 3 g 1 3 g 1
3 x c m -> 3 x c m 3 x c m
n 6 e -> n 6 e n 6 e
d 5 5 5 -> d 5 5 5 d 5 5 5
4 9 o 2 3 -> 3 2 o 9 4 3 2 o 9 4
v 4 6 -> v 6 4 v 6 4
6 c t y a ->
The right answer is: 6 c t y a 6 c t y a
The model return: 6 c t y a 6 c t y a
right
t 0 5 v -> t 5 0 v t 5 0 v
8 q l -> 8 q l 8 q l
y 2 b p h -> y 2 b p h y 2 b p h
0 r w 7 -> 7 r w 0 7 r w 0
g 9 0 -> g 0 9 g 0 9
y 3 f -> y 3 f y 3 f
o 9 2 -> o 2 9 o 2 9
k y p 1 9 -> k y p 9 1 k y p 9 1
7 l z 5 -> 5 l z 7 5 l z 7
5 4 f o z -> 4 5 f o z 4 5 f o z
p 2 5 -> p 5 2 p 5 2
i 0 e a -> i 0 e a i 0 e a
0 3 3 0 c -> 0 3 3 0 c 0 3 3 0 c
3 8 m 4 r -> 4 8 m 3 r 4 8 m 3 r
7 l 1 t 8 -> 8 l 1 t 7 8 l 1 t 7
3 3 p -> 3 3 p 3 3 p
2 b s ->
The right answer is: 2 b s 2 b s
The model return: 2 b s 2 b s
right
9 6 d -> 6 9 d 6 9 d
9 7 1 1 i -> 1 1 7 9 i 1 1 7 9 i
1 5 6 t 3 -> 3 6 5 t 1 3 6 5 t 1
8 5 8 k 2 -> 2 8 5 k 8 2 8 5 k 8
2 0 g t -> 0 2 g t 0 2 g t
c 4 d -> c 4 d c 4 d
f g g 3 -> f g g 3 f g g 3
k h 5 r -> k h 5 r k h 5 r
p 8 v 0 -> p 0 v 8 p 0 v 8
k 2 0 o -> k 0 2 o k 0 2 o
9 v 7 5 -> 5 v 7 9 5 v 7 9
6 9 8 o -> 8 9 6 o 8 9 6 o
9 c n 7 3 -> 3 c n 7 9 3 c n 7 9
l c 3 h -> l c 3 h l c 3 h
c z c h 6 -> c z c h 6 c z c h 6
t 8 g -> t 8 g t 8 g
1 q 8 ->
The right answer is: 8 q 1 8 q 1
The model return: 1 q 8 1 q 8
false
**line number: 32
4 w i -> 4 w i 4 w i
6 k p 6 -> 6 k p 6 6 k p 6
9 b r f -> 9 b r f 9 b r f
9 9 a 4 -> 4 9 a 9 4 9 a 9
2 f v 5 -> 5 f v 2 5 f v 2
c 4 4 -> c 4 4 c 4 4
l b 2 2 4 -> l b 4 2 2 l b 4 2 2
2 g 1 6 q -> 6 g 1 2 q 6 g 1 2 q
l 3 n -> l 3 n l 3 n
5 s o -> 5 s o 5 s o
6 d b 2 -> 2 d b 6 2 d b 6
v z v u 2 -> v z v u 2 v z v u 2
c 7 s 2 -> c 2 s 7 c 2 s 7
r v 5 4 c -> r v 4 5 c r v 4 5 c
k 9 q c 0 -> k 0 q c 9 k 0 q c 9
i 6 0 -> i 0 6 i 0 6
a c 4 8 9 -> a c 9 8 4 a c 9 8 4
p 8 3 -> p 3 8 p 3 8
2 9 b -> 9 2 b 9 2 b
5 5 2 i y -> 2 5 5 i y 2 5 5 i y
k 7 9 w -> k 9 7 w k 9 7 w
3 s 7 6 5 -> 5 s 6 7 3 5 s 6 7 3
5 m 8 -> 8 m 5 8 m 5
1 b b -> 1 b b 1 b b
0 4 7 c 7 -> 7 7 4 c 0 7 7 4 c 0
i g 0 -> i g 0 i g 0
o r 4 -> o r 4 o r 4
7 8 5 f -> 5 8 7 f 5 8 7 f
r s 1 u -> r s 1 u r s 1 u
w 5 n 1 -> w 1 n 5 w 1 n 5
9 q e p 8 -> 8 q e p 9 8 q e p 9
2 l g -> 2 l g 2 l g
2 3 9 p 9 ->
The right answer is: 9 9 3 p 2 9 9 3 p 2
The model return: 9 3 9 p 2 9 3 9 p 2
false
a 1 g -> a 1 g a 1 g
k e 8 y -> k e 8 y k e 8 y
9 p q i -> 9 p q i 9 p q i
f w 8 -> f w 8 f w 8
0 n 2 -> 2 n 0 2 n 0
p 7 f y u -> p 7 f y u p 7 f y u
8 x 7 6 7 -> 7 x 6 7 8 7 x 6 7 8
l q 7 v 9 -> l q 9 v 7 l q 9 v 7
v 1 3 5 -> v 5 3 1 v 5 3 1
1 7 e -> 7 1 e 7 1 e
1 g 3 -> 3 g 1 3 g 1
3 x c m -> 3 x c m 3 x c m
n 6 e -> n 6 e n 6 e
d 5 5 5 -> d 5 5 5 d 5 5 5
4 9 o 2 3 -> 3 2 o 9 4 3 2 o 9 4
v 4 6 -> v 6 4 v 6 4
t 9 n n z -> t 9 n n z t 9 n n z
c 1 m g -> c 1 m g c 1 m g
k 1 5 6 0 -> k 0 6 5 1 k 0 6 5 1
b 7 0 -> b 0 7 b 0 7
g c 5 -> g c 5 g c 5
c k c s 7 -> c k c s 7 c k c s 7
2 z 7 -> 7 z 2 7 z 2
k 3 8 6 6 -> k 6 6 8 3 k 6 6 8 3
2 l q -> 2 l q 2 l q
y 3 q 8 -> y 8 q 3 y 8 q 3
x 4 5 4 a -> x 4 5 4 a x 4 5 4 a
q u 2 7 p -> q u 7 2 p q u 7 2 p
2 a y 4 -> 4 a y 2 4 a y 2
8 o 0 -> 0 o 8 0 o 8
5 6 6 g 1 -> 1 6 6 g 5 1 6 6 g 5
3 0 w -> 0 3 w 0 3 w
6 c t y a ->
The right answer is: 6 c t y a 6 c t y a
The model return: 6 c t y a 6 c t y a
right
t 0 5 v -> t 5 0 v t 5 0 v
8 q l -> 8 q l 8 q l
y 2 b p h -> y 2 b p h y 2 b p h
0 r w 7 -> 7 r w 0 7 r w 0
g 9 0 -> g 0 9 g 0 9
y 3 f -> y 3 f y 3 f
o 9 2 -> o 2 9 o 2 9
k y p 1 9 -> k y p 9 1 k y p 9 1
7 l z 5 -> 5 l z 7 5 l z 7
5 4 f o z -> 4 5 f o z 4 5 f o z
p 2 5 -> p 5 2 p 5 2
i 0 e a -> i 0 e a i 0 e a
0 3 3 0 c -> 0 3 3 0 c 0 3 3 0 c
3 8 m 4 r -> 4 8 m 3 r 4 8 m 3 r
7 l 1 t 8 -> 8 l 1 t 7 8 l 1 t 7
3 3 p -> 3 3 p 3 3 p
4 3 3 q 1 -> 1 3 3 q 4 1 3 3 q 4
9 0 e -> 0 9 e 0 9 e
y g f 4 -> y g f 4 y g f 4
e n 9 n z -> e n 9 n z e n 9 n z
d 8 y w -> d 8 y w d 8 y w
5 3 5 e -> 5 3 5 e 5 3 5 e
o 2 3 m -> o 3 2 m o 3 2 m
d l c 9 q -> d l c 9 q d l c 9 q
w l 7 g 4 -> w l 4 g 7 w l 4 g 7
w d f 9 -> w d f 9 w d f 9
8 l h g c -> 8 l h g c 8 l h g c
8 e 1 r 6 -> 6 e 1 r 8 6 e 1 r 8
r 9 o y i -> r 9 o y i r 9 o y i
y b d 5 5 -> y b d 5 5 y b d 5 5
l 5 e y w -> l 5 e y w l 5 e y w
5 6 0 x -> 0 6 5 x 0 6 5 x
2 b s ->
The right answer is: 2 b s 2 b s
The model return: 2 b s 2 b s
right
9 6 d -> 6 9 d 6 9 d
9 7 1 1 i -> 1 1 7 9 i 1 1 7 9 i
1 5 6 t 3 -> 3 6 5 t 1 3 6 5 t 1
8 5 8 k 2 -> 2 8 5 k 8 2 8 5 k 8
2 0 g t -> 0 2 g t 0 2 g t
c 4 d -> c 4 d c 4 d
f g g 3 -> f g g 3 f g g 3
k h 5 r -> k h 5 r k h 5 r
p 8 v 0 -> p 0 v 8 p 0 v 8
k 2 0 o -> k 0 2 o k 0 2 o
9 v 7 5 -> 5 v 7 9 5 v 7 9
6 9 8 o -> 8 9 6 o 8 9 6 o
9 c n 7 3 -> 3 c n 7 9 3 c n 7 9
l c 3 h -> l c 3 h l c 3 h
c z c h 6 -> c z c h 6 c z c h 6
t 8 g -> t 8 g t 8 g
1 h q f -> 1 h q f 1 h q f
m 5 8 -> m 8 5 m 8 5
v 1 f -> v 1 f v 1 f
7 3 8 c -> 8 3 7 c 8 3 7 c
2 2 w -> 2 2 w 2 2 w
l 8 3 5 n -> l 5 3 8 n l 5 3 8 n
5 8 0 f -> 0 8 5 f 0 8 5 f
8 5 1 i -> 1 5 8 i 1 5 8 i
6 6 5 0 b -> 0 5 6 6 b 0 5 6 6 b
l 2 e 1 -> l 1 e 2 l 1 e 2
4 v a u -> 4 v a u 4 v a u
9 c 7 5 -> 5 c 7 9 5 c 7 9
5 m o 1 c -> 1 m o 5 c 1 m o 5 c
n 4 0 h -> n 0 4 h n 0 4 h
8 s u d i -> 8 s u d i 8 s u d i
6 t n 8 o -> 8 t n 6 o 8 t n 6 o
1 q 8 ->
The right answer is: 8 q 1 8 q 1
The model return: 1 q 8 1 q 8
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], -1]
==========================================================================
10
**line number: 4
B 1 0 9 1 -> 1 0 9 1 1 0 9 1
6 9 O -> 6 9 6 9
L 7 9 -> 7 9 7 9
L E B 8 K -> 8 8
9 I S 2 ->
The right answer is: 9 2 9 2
The model return: 2 2
false
3 6 9 N -> 3 6 9 3 6 9
E 8 9 I -> 8 9 8 9
F R V 5 4 -> 5 4 5 4
4 0 F S -> 4 0 4 0
9 Y K E ->
The right answer is: 9 9
The model return: 9 9 9 9
false
**line number: 8
B 1 0 9 1 -> 1 0 9 1 1 0 9 1
6 9 O -> 6 9 6 9
L 7 9 -> 7 9 7 9
L E B 8 K -> 8 8
3 7 H 0 -> 3 7 0 3 7 0
5 8 W L H -> 5 8 5 8
R V W 1 T -> 1 1
6 G 0 -> 6 0 6 0
9 I S 2 ->
The right answer is: 9 2 9 2
The model return: 9 2
false
3 6 9 N -> 3 6 9 3 6 9
E 8 9 I -> 8 9 8 9
F R V 5 4 -> 5 4 5 4
4 0 F S -> 4 0 4 0
8 D 9 8 -> 8 9 8 8 9 8
9 K L -> 9 9
0 G F 0 W -> 0 0 0 0
G W 5 -> 5 5
9 Y K E ->
The right answer is: 9 9
The model return: 9 9 9 9
false
**line number: 16
B 1 0 9 1 -> 1 0 9 1 1 0 9 1
6 9 O -> 6 9 6 9
L 7 9 -> 7 9 7 9
L E B 8 K -> 8 8
3 7 H 0 -> 3 7 0 3 7 0
5 8 W L H -> 5 8 5 8
R V W 1 T -> 1 1
6 G 0 -> 6 0 6 0
4 3 4 2 I -> 4 3 4 2 4 3 4 2
Z 1 2 -> 1 2 1 2
O Q 4 6 Z -> 4 6 4 6
S 4 3 -> 4 3 4 3
0 3 3 Q -> 0 3 3 0 3 3
C 6 S 0 7 -> 6 0 7 6 0 7
B 4 0 -> 4 0 4 0
5 H N -> 5 5
9 I S 2 ->
The right answer is: 9 2 9 2
The model return: 9 2 9 2
right
3 6 9 N -> 3 6 9 3 6 9
E 8 9 I -> 8 9 8 9
F R V 5 4 -> 5 4 5 4
4 0 F S -> 4 0 4 0
8 D 9 8 -> 8 9 8 8 9 8
9 K L -> 9 9
0 G F 0 W -> 0 0 0 0
G W 5 -> 5 5
X 4 B -> 4 4
S R Z G 8 -> 8 8
A 5 K W 7 -> 5 7 5 7
W G 2 -> 2 2
3 E K M 6 -> 3 6 3 6
A 2 4 -> 2 4 2 4
F S 7 -> 7 7
Z O 1 N E -> 1 1
9 Y K E ->
The right answer is: 9 9
The model return: 9 9
right
8 s 2 2 -> 8 2 2 8 2 2
q 7 9 1 -> 7 9 1 7 9 1
e 0 3 -> 0 3 0 3
w 6 t 3 -> 6 3 6 3
4 v 4 -> 4 4 4 4
9 9 4 m -> 9 9 4 9 9 4
4 1 l 5 i -> 4 1 5 4 1 5
k a 9 1 -> 9 1 9 1
s p 6 -> 6 6
4 6 p 2 -> 4 6 2 4 6 2
7 9 8 d -> 7 9 8 7 9 8
2 8 x -> 2 8 2 8
4 g d i -> 4 4
x 2 4 a h -> 2 4 2 4
8 c r 4 5 -> 8 4 5 8 4 5
y 9 n y -> 9 9
6 v 2 ->
The right answer is: 6 2 6 2
The model return: 6 2 6 2
right
y 8 9 8 m -> 8 9 8 8 9 8
5 1 p -> 5 1 5 1
8 w y 2 -> 8 2 8 2
m 2 9 9 a -> 2 9 9 2 9 9
8 f n -> 8 8
5 1 1 7 r -> 5 1 1 7 5 1 1 7
2 v 6 4 3 -> 2 6 4 3 2 6 4 3
0 3 r 3 1 -> 0 3 3 1 0 3 3 1
5 9 6 g -> 5 9 6 5 9 6
m u 0 c -> 0 0
b 4 4 7 -> 4 4 7 4 4 7
i g 0 -> 0 0
5 6 a -> 5 6 5 6
0 v 0 -> 0 0 0 0
6 l c 2 -> 6 2 6 2
1 f 6 x 7 -> 1 6 7 1 6 7
f 0 s n 3 ->
The right answer is: 0 3 0 3
The model return: 0 3 0 3
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 16]
==========================================================================
11
**line number: 4
0 O 8 2 g -> 4
9 9 L i -> 4
2 6 W v -> 4
2 O D e -> 6
1 q 8 E ->
The right answer is: 4
The model return: 4
right
s 2 o -> 4
9 5 g 7 r -> 4
x 1 t -> 4
o m 7 t -> 6
a l 1 ->
The right answer is: 4
The model return: 6
false
3 T P u T -> 8
m N H U 0 -> 8
b 8 5 d O -> 6
p Y F 1 Y -> 8
3 l G T ->
The right answer is: 6
The model return: 8
false
**line number: 8
0 O 8 2 g -> 4
9 9 L i -> 4
2 6 W v -> 4
2 O D e -> 6
5 v K k E -> 8
T f 6 3 Q -> 6
U o 1 -> 4
Z 3 a -> 4
1 q 8 E ->
The right answer is: 4
The model return: 8
false
s 2 o -> 4
9 5 g 7 r -> 4
x 1 t -> 4
o m 7 t -> 6
v 4 4 7 -> 2
9 d 4 w 6 -> 4
7 d 5 -> 2
5 g 3 -> 2
a l 1 ->
The right answer is: 4
The model return: 2
false
**line number: 16
0 O 8 2 g -> 4
9 9 L i -> 4
2 6 W v -> 4
2 O D e -> 6
5 v K k E -> 8
T f 6 3 Q -> 6
U o 1 -> 4
Z 3 a -> 4
l Q e 9 h -> 8
L I 9 x 2 -> 6
d F s v 9 -> 8
k 6 D b -> 6
7 6 L w C -> 6
B 7 a m -> 6
i g 1 5 C -> 6
t D 5 -> 4
1 q 8 E ->
The right answer is: 4
The model return: 6
false
s 2 o -> 4
9 5 g 7 r -> 4
x 1 t -> 4
o m 7 t -> 6
v 4 4 7 -> 2
9 d 4 w 6 -> 4
7 d 5 -> 2
5 g 3 -> 2
w 3 1 -> 2
i c 3 -> 4
o 2 1 -> 2
5 r v 6 1 -> 4
u 2 k z n -> 8
m 1 x -> 4
m 8 m 9 -> 4
4 t 6 h i -> 6
a l 1 ->
The right answer is: 4
The model return: 4
right
3 T P u T -> 8
m N H U 0 -> 8
b 8 5 d O -> 6
p Y F 1 Y -> 8
9 Q l 9 T -> 6
H b 7 -> 4
9 0 s G -> 4
3 V y -> 4
4 U P h -> 6
5 w L -> 4
B y e 7 l -> 8
5 o E W -> 6
e I 2 -> 4
7 H m -> 4
4 z E l 9 -> 6
B 3 f -> 4
3 l G T ->
The right answer is: 6
The model return: 6
right
x 5 g S -> 6
g C 9 c r -> 8
d K 0 Y -> 6
4 0 r o U -> 6
5 M 2 Z r -> 6
Y G 8 n -> 6
U i 7 u -> 6
7 8 l i K -> 6
L x 5 -> 4
2 R Z c -> 6
6 3 M g 7 -> 4
2 8 I o 6 -> 4
0 Z o 5 -> 4
L 7 I 0 g -> 6
7 Y i -> 4
1 I q w 4 -> 6
w 6 V 8 ->
The right answer is: 4
The model return: 4
right
B Z 6 -> 4
0 K 1 6 9 -> 2
G 2 5 1 -> 2
5 2 3 B 4 -> 2
F 5 8 L 4 -> 4
G 9 2 -> 2
8 L M 6 6 -> 4
W H 6 -> 4
2 4 1 9 O -> 2
E 6 0 5 -> 2
C G 2 0 -> 4
G Y 1 D Q -> 8
Q 3 9 -> 2
6 E D 4 -> 4
H 4 7 5 8 -> 2
T 1 G -> 4
3 8 R 6 ->
The right answer is: 2
The model return: 4
false
**line number: 32
0 O 8 2 g -> 4
9 9 L i -> 4
2 6 W v -> 4
2 O D e -> 6
5 v K k E -> 8
T f 6 3 Q -> 6
U o 1 -> 4
Z 3 a -> 4
l Q e 9 h -> 8
L I 9 x 2 -> 6
d F s v 9 -> 8
k 6 D b -> 6
7 6 L w C -> 6
B 7 a m -> 6
i g 1 5 C -> 6
t D 5 -> 4
2 R g -> 4
9 T y -> 4
w 5 4 X -> 4
X 2 h -> 4
X 9 c -> 4
E r 2 u -> 6
6 w 9 G i -> 6
7 i Z Q 5 -> 6
5 0 v u E -> 6
0 O l -> 4
L X d n 8 -> 8
Y N f 1 -> 6
3 E b -> 4
g 8 U -> 4
9 N q -> 4
u o 1 6 P -> 6
1 q 8 E ->
The right answer is: 4
The model return: 6
false
s 2 o -> 4
9 5 g 7 r -> 4
x 1 t -> 4
o m 7 t -> 6
v 4 4 7 -> 2
9 d 4 w 6 -> 4
7 d 5 -> 2
5 g 3 -> 2
w 3 1 -> 2
i c 3 -> 4
o 2 1 -> 2
5 r v 6 1 -> 4
u 2 k z n -> 8
m 1 x -> 4
m 8 m 9 -> 4
4 t 6 h i -> 6
v 2 d 2 5 -> 4
7 3 4 f -> 2
8 4 f -> 2
f 7 o -> 4
k 8 7 2 -> 2
3 m 7 s 3 -> 4
7 3 9 n -> 2
w 1 0 -> 2
k 3 6 -> 2
0 t 7 w 5 -> 4
q k 6 w 5 -> 6
z i 2 0 -> 4
8 5 u 6 -> 2
r o 1 o -> 6
h 0 7 -> 2
3 4 9 2 w -> 2
a l 1 ->
The right answer is: 4
The model return: 2
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
==========================================================================
12
**line number: 4
y 0 Q -> 0 0
M c E N 7 -> 7 7
r W 0 -> 0 0
9 4 t C 2 -> 9 4 2 9 4 2
E v 2 ->
The right answer is: 2 2
The model return: 2 2 2 2 2 2 2 2 2 2
false
8 r C o v -> 8 8
m h O Y 5 -> 5 5
9 5 V r -> 9 5 9 5
y 1 C Y 5 -> 1 5 1 5
4 O m ->
The right answer is: 4 4
The model return: 4 4
right
K f u 3 -> 3 3
t C 0 m w -> 0 0
3 L 0 c -> 3 0 3 0
B h h 7 -> 7 7
5 L x ->
The right answer is: 5 5
The model return: 5 5
right
N I O 7 f -> 7 7
Z 0 c -> 0 0
7 n 8 C 4 -> 7 8 4 7 8 4
N W o 1 -> 1 1
C 4 b 1 E ->
The right answer is: 4 1 4 1
The model return: 4 1 1
false
**line number: 8
y 0 Q -> 0 0
M c E N 7 -> 7 7
r W 0 -> 0 0
9 4 t C 2 -> 9 4 2 9 4 2
q M 3 -> 3 3
7 b Y -> 7 7
U f d 8 c -> 8 8
k 6 b n M -> 6 6
E v 2 ->
The right answer is: 2 2
The model return: 2 2
right
8 r C o v -> 8 8
m h O Y 5 -> 5 5
9 5 V r -> 9 5 9 5
y 1 C Y 5 -> 1 5 1 5
9 n O I w -> 9 9
2 T i -> 2 2
k G 4 u M -> 4 4
v r C x 7 -> 7 7
4 O m ->
The right answer is: 4 4
The model return: 4 4
right
K f u 3 -> 3 3
t C 0 m w -> 0 0
3 L 0 c -> 3 0 3 0
B h h 7 -> 7 7
q 6 G h -> 6 6
G b n 1 -> 1 1
L i c 9 -> 9 9
n 1 S -> 1 1
5 L x ->
The right answer is: 5 5
The model return: 5 5
right
N I O 7 f -> 7 7
Z 0 c -> 0 0
7 n 8 C 4 -> 7 8 4 7 8 4
N W o 1 -> 1 1
6 i 8 W -> 6 8 6 8
E i 1 -> 1 1
3 O f t 6 -> 3 6 3 6
C 0 u -> 0 0
C 4 b 1 E ->
The right answer is: 4 1 4 1
The model return: 4 1 1 4
false
1 p 7 -> 1 7 1 7
c e 8 4 1 -> 8 4 1 8 4 1
a 0 1 -> 0 1 0 1
3 1 x h -> 3 1 3 1
w l p u 4 -> 4 4
n y v u 3 -> 3 3
t r 3 5 o -> 3 5 3 5
8 z 9 -> 8 9 8 9
q f a d 5 ->
The right answer is: 5 5
The model return: 5 5 5 5
false
**line number: 16
y 0 Q -> 0 0
M c E N 7 -> 7 7
r W 0 -> 0 0
9 4 t C 2 -> 9 4 2 9 4 2
q M 3 -> 3 3
7 b Y -> 7 7
U f d 8 c -> 8 8
k 6 b n M -> 6 6
R y f W 9 -> 9 9
r 8 X G -> 8 8
5 t X -> 5 5
U v t 1 I -> 1 1
I 3 m k 6 -> 3 6 3 6
9 f Z -> 9 9
3 X t H -> 3 3
a U 1 -> 1 1
E v 2 ->
The right answer is: 2 2
The model return: 2 2
right
8 r C o v -> 8 8
m h O Y 5 -> 5 5
9 5 V r -> 9 5 9 5
y 1 C Y 5 -> 1 5 1 5
9 n O I w -> 9 9
2 T i -> 2 2
k G 4 u M -> 4 4
v r C x 7 -> 7 7
h N 6 -> 6 6
H 3 g a -> 3 3
9 V h -> 9 9
S m 5 -> 5 5
i 6 G -> 6 6
W k 6 3 6 -> 6 3 6 6 3 6
E d 0 -> 0 0
2 D v -> 2 2
4 O m ->
The right answer is: 4 4
The model return: 4 4
right
K f u 3 -> 3 3
t C 0 m w -> 0 0
3 L 0 c -> 3 0 3 0
B h h 7 -> 7 7
q 6 G h -> 6 6
G b n 1 -> 1 1
L i c 9 -> 9 9
n 1 S -> 1 1
h 4 v M -> 4 4
2 v S c -> 2 2
H S g B 1 -> 1 1
8 U 4 8 m -> 8 4 8 8 4 8
9 4 Y c -> 9 4 9 4
M 4 G F e -> 4 4
G 0 N f -> 0 0
k B 6 -> 6 6
5 L x ->
The right answer is: 5 5
The model return: 5 5
right
N I O 7 f -> 7 7
Z 0 c -> 0 0
7 n 8 C 4 -> 7 8 4 7 8 4
N W o 1 -> 1 1
6 i 8 W -> 6 8 6 8
E i 1 -> 1 1
3 O f t 6 -> 3 6 3 6
C 0 u -> 0 0
C k G 3 -> 3 3
7 b 9 O 7 -> 7 9 7 7 9 7
O W i 3 -> 3 3
d 1 o I -> 1 1
I g o 0 2 -> 0 2 0 2
w 8 C -> 8 8
S g 8 -> 8 8
i 7 D -> 7 7
C 4 b 1 E ->
The right answer is: 4 1 4 1
The model return: 4 1 1 4 1
false
1 p 7 -> 1 7 1 7
c e 8 4 1 -> 8 4 1 8 4 1
a 0 1 -> 0 1 0 1
3 1 x h -> 3 1 3 1
w l p u 4 -> 4 4
n y v u 3 -> 3 3
t r 3 5 o -> 3 5 3 5
8 z 9 -> 8 9 8 9
2 i 4 -> 2 4 2 4
t 3 0 7 1 -> 3 0 7 1 3 0 7 1
u 6 2 -> 6 2 6 2
9 3 o y 2 -> 9 3 2 9 3 2
1 8 7 s -> 1 8 7 1 8 7
w 7 n -> 7 7
5 6 5 n -> 5 6 5 5 6 5
8 9 p 4 5 -> 8 9 4 5 8 9 4 5
q f a d 5 ->
The right answer is: 5 5
The model return: 5 5 5 5 5 5
false
**line number: 32
y 0 Q -> 0 0
M c E N 7 -> 7 7
r W 0 -> 0 0
9 4 t C 2 -> 9 4 2 9 4 2
q M 3 -> 3 3
7 b Y -> 7 7
U f d 8 c -> 8 8
k 6 b n M -> 6 6
R y f W 9 -> 9 9
r 8 X G -> 8 8
5 t X -> 5 5
U v t 1 I -> 1 1
I 3 m k 6 -> 3 6 3 6
9 f Z -> 9 9
3 X t H -> 3 3
a U 1 -> 1 1
2 v Z 2 -> 2 2 2 2
5 h Y -> 5 5
q 6 N q T -> 6 6
m S y 7 -> 7 7
H 1 d V -> 1 1
o D 3 y -> 3 3
h W 9 o 6 -> 9 6 9 6
v M g 5 -> 5 5
h 4 O -> 4 4
I 5 f 8 -> 5 8 5 8
G s O 3 -> 3 3
l 4 n S -> 4 4
q 4 W -> 4 4
R c 7 m -> 7 7
6 b I T -> 6 6
a 4 r i U -> 4 4
E v 2 ->
The right answer is: 2 2
The model return: 2 2
right
8 r C o v -> 8 8
m h O Y 5 -> 5 5
9 5 V r -> 9 5 9 5
y 1 C Y 5 -> 1 5 1 5
9 n O I w -> 9 9
2 T i -> 2 2
k G 4 u M -> 4 4
v r C x 7 -> 7 7
h N 6 -> 6 6
H 3 g a -> 3 3
9 V h -> 9 9
S m 5 -> 5 5
i 6 G -> 6 6
W k 6 3 6 -> 6 3 6 6 3 6
E d 0 -> 0 0
2 D v -> 2 2
1 0 Q g -> 1 0 1 0
1 R Y w -> 1 1
i x O 1 -> 1 1
8 q F -> 8 8
t 8 6 Y 2 -> 8 6 2 8 6 2
O 1 E c -> 1 1
B 3 e s l -> 3 3
8 Q f 7 -> 8 7 8 7
z 8 p S -> 8 8
G z 1 -> 1 1
9 B h q 5 -> 9 5 9 5
f B 5 0 -> 5 0 5 0
7 g H -> 7 7
e T 6 -> 6 6
n G q 2 -> 2 2
9 h G G -> 9 9
4 O m ->
The right answer is: 4 4
The model return: 4 4
right
K f u 3 -> 3 3
t C 0 m w -> 0 0
3 L 0 c -> 3 0 3 0
B h h 7 -> 7 7
q 6 G h -> 6 6
G b n 1 -> 1 1
L i c 9 -> 9 9
n 1 S -> 1 1
h 4 v M -> 4 4
2 v S c -> 2 2
H S g B 1 -> 1 1
8 U 4 8 m -> 8 4 8 8 4 8
9 4 Y c -> 9 4 9 4
M 4 G F e -> 4 4
G 0 N f -> 0 0
k B 6 -> 6 6
X g 3 R -> 3 3
V M 7 i r -> 7 7
P 1 x -> 1 1
H c 0 R -> 0 0
0 x I C -> 0 0
k 6 K t -> 6 6
o E f 5 -> 5 5
Z o 6 -> 6 6
I f A 9 -> 9 9
B m U 7 -> 7 7
X g 4 0 -> 4 0 4 0
1 5 R f D -> 1 5 1 5
k 2 M y V -> 2 2
g R 3 s 2 -> 3 2 3 2
x 6 D -> 6 6
1 K 1 B a -> 1 1 1 1
5 L x ->
The right answer is: 5 5
The model return: 5 5
right
N I O 7 f -> 7 7
Z 0 c -> 0 0
7 n 8 C 4 -> 7 8 4 7 8 4
N W o 1 -> 1 1
6 i 8 W -> 6 8 6 8
E i 1 -> 1 1
3 O f t 6 -> 3 6 3 6
C 0 u -> 0 0
C k G 3 -> 3 3
7 b 9 O 7 -> 7 9 7 7 9 7
O W i 3 -> 3 3
d 1 o I -> 1 1
I g o 0 2 -> 0 2 0 2
w 8 C -> 8 8
S g 8 -> 8 8
i 7 D -> 7 7
5 X t -> 5 5
A 5 t -> 5 5
2 q V D 0 -> 2 0 2 0
S D h 2 T -> 2 2
2 m M -> 2 2
1 U v -> 1 1
6 H U h -> 6 6
L 0 t -> 0 0
9 V v -> 9 9
t 4 L -> 4 4
4 8 L g g -> 4 8 4 8
g G b 8 m -> 8 8
R O 9 8 y -> 9 8 9 8
D v 2 9 -> 2 9 2 9
7 u 6 R -> 7 6 7 6
l 6 b U -> 6 6
C 4 b 1 E ->
The right answer is: 4 1 4 1
The model return: 4 1
false
1 p 7 -> 1 7 1 7
c e 8 4 1 -> 8 4 1 8 4 1
a 0 1 -> 0 1 0 1
3 1 x h -> 3 1 3 1
w l p u 4 -> 4 4
n y v u 3 -> 3 3
t r 3 5 o -> 3 5 3 5
8 z 9 -> 8 9 8 9
2 i 4 -> 2 4 2 4
t 3 0 7 1 -> 3 0 7 1 3 0 7 1
u 6 2 -> 6 2 6 2
9 3 o y 2 -> 9 3 2 9 3 2
1 8 7 s -> 1 8 7 1 8 7
w 7 n -> 7 7
5 6 5 n -> 5 6 5 5 6 5
8 9 p 4 5 -> 8 9 4 5 8 9 4 5
6 f d k r -> 6 6
e g 9 c -> 9 9
i 1 1 3 -> 1 1 3 1 1 3
h 8 r -> 8 8
h 5 8 u -> 5 8 5 8
1 7 n 4 -> 1 7 4 1 7 4
m b k 6 s -> 6 6
y 0 1 4 -> 0 1 4 0 1 4
4 d 1 4 -> 4 1 4 4 1 4
m 4 i 3 -> 4 3 4 3
2 o 7 -> 2 7 2 7
4 0 g g x -> 4 0 4 0
b x q r 7 -> 7 7
0 6 k -> 0 6 0 6
4 e g 4 0 -> 4 4 0 4 4 0
4 n h f 0 -> 4 0 4 0
q f a d 5 ->
The right answer is: 5 5
The model return: 5 5
right
@@@@@@@@@@@@ 32 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 32]
==========================================================================
13
**line number: 4
p h k C s -> p h k s p h k s
x G f -> x f x f
k M A e -> k e k e
g N t -> g t g t
a S G a ->
The right answer is: a a a a
The model return: a G a a G a
false
q E P -> q q
i V w o -> i w o i w o
o F m g -> o m g o m g
a Y E -> a a
A U G h s ->
The right answer is: h s h s
The model return: A U G h s
false
**line number: 8
p h k C s -> p h k s p h k s
x G f -> x f x f
k M A e -> k e k e
g N t -> g t g t
h r V -> h r h r
k A c -> k c k c
b F d Q F -> b d b d
U i x w -> i x w i x w
a S G a ->
The right answer is: a a a a
The model return: a G a a G a
false
q E P -> q q
i V w o -> i w o i w o
o F m g -> o m g o m g
a Y E -> a a
o p e L L -> o p e o p e
q U H -> q q
d U m -> d m d m
c O O q -> c q c q
A U G h s ->
The right answer is: h s h s
The model return: A G h s A G h s
false
**line number: 16
p h k C s -> p h k s p h k s
x G f -> x f x f
k M A e -> k e k e
g N t -> g t g t
h r V -> h r h r
k A c -> k c k c
b F d Q F -> b d b d
U i x w -> i x w i x w
D E e v -> e v e v
Y k M -> k k
q R x -> q x q x
t Q i -> t i t i
B h V u M -> h u h u
S d I -> d d
y K b c -> y b c y b c
E H l -> l l
a S G a ->
The right answer is: a a a a
The model return: l a l a
false
q E P -> q q
i V w o -> i w o i w o
o F m g -> o m g o m g
a Y E -> a a
o p e L L -> o p e o p e
q U H -> q q
d U m -> d m d m
c O O q -> c q c q
h z H b s -> h z b s h z b s
Z h k v -> h k v h k v
A y Y R -> y y
H M g -> g g
A v S -> v v
x G m -> x m x m
W O q w -> q w q w
K o P -> o o
A U G h s ->
The right answer is: h s h s
The model return: a h s a h s
false
**line number: 32
p h k C s -> p h k s p h k s
x G f -> x f x f
k M A e -> k e k e
g N t -> g t g t
h r V -> h r h r
k A c -> k c k c
b F d Q F -> b d b d
U i x w -> i x w i x w
D E e v -> e v e v
Y k M -> k k
q R x -> q x q x
t Q i -> t i t i
B h V u M -> h u h u
S d I -> d d
y K b c -> y b c y b c
E H l -> l l
G V b -> b b
c r S d -> c r d c r d
P S a r Q -> a r a r
r I f -> r f r f
Q s Q -> s s
f U L V L -> f f
l Y y -> l y l y
I Y v C -> v v
G e c L -> e c e c
h N X -> h h
B g O -> g g
L c D m -> c m c m
y B D -> y y
S m g N V -> m g m g
t s R Y M -> t s t s
O S N q W -> q q
a S G a ->
The right answer is: a a a a
The model return: a a
false
q E P -> q q
i V w o -> i w o i w o
o F m g -> o m g o m g
a Y E -> a a
o p e L L -> o p e o p e
q U H -> q q
d U m -> d m d m
c O O q -> c q c q
h z H b s -> h z b s h z b s
Z h k v -> h k v h k v
A y Y R -> y y
H M g -> g g
A v S -> v v
x G m -> x m x m
W O q w -> q w q w
K o P -> o o
U w P -> w w
G t G o b -> t o b t o b
o S k B -> o k o k
G g r z Q -> g r z g r z
k W b A -> k b k b
M P y -> y y
U e H -> e e
m c r F -> m c r m c r
q q G C -> q q q q
w e r X -> w e r w e r
M g k q -> g k q g k q
Y a V Z -> a a
A m V -> m m
o H m y g -> o m y g o m y g
F C k -> k k
Z C p -> p p
A U G h s ->
The right answer is: h s h s
The model return: a h s a h s
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], -1]
==========================================================================
14
**line number: 4
T G C n -> 6
O L x F G -> 8
X o K i -> 4
q b c L -> 2
n W k R u ->
The right answer is: 4
The model return: 1
false
N s B -> 4
M T Q v k -> 6
a h a D -> 2
g G g Q -> 4
o Q Y b ->
The right answer is: 4
The model return: 2
false
**line number: 8
T G C n -> 6
O L x F G -> 8
X o K i -> 4
q b c L -> 2
G q N X -> 6
u U i X -> 4
W X z r -> 4
P d X M G -> 8
n W k R u ->
The right answer is: 4
The model return: 6
false
N s B -> 4
M T Q v k -> 6
a h a D -> 2
g G g Q -> 4
o H v -> 2
w i G c r -> 2
K R h -> 4
B r T -> 4
o Q Y b ->
The right answer is: 4
The model return: 2
false
**line number: 16
T G C n -> 6
O L x F G -> 8
X o K i -> 4
q b c L -> 2
G q N X -> 6
u U i X -> 4
W X z r -> 4
P d X M G -> 8
N c T G -> 6
G u a K z -> 4
y S u P h -> 4
G b G D -> 6
p f U P k -> 4
Z H v -> 4
V f k B -> 4
e V v o m -> 2
n W k R u ->
The right answer is: 4
The model return: 4
right
N s B -> 4
M T Q v k -> 6
a h a D -> 2
g G g Q -> 4
o H v -> 2
w i G c r -> 2
K R h -> 4
B r T -> 4
d r R p s -> 2
n S N -> 4
y L z -> 2
C e p g e -> 2
s x F b I -> 4
b h N -> 2
M W m -> 4
B u l w -> 2
o Q Y b ->
The right answer is: 4
The model return: 2
false
S H d p -> 4
x k L -> 2
N F G y m -> 6
H m P -> 4
K z G p L -> 6
Q E g A L -> 8
w X h -> 2
m d d C -> 2
h F V x -> 4
d Z F D T -> 8
S B m c V -> 6
T Y x -> 4
O G u D -> 6
T i w -> 2
Q L g q Q -> 6
w o I W -> 4
w D w k ->
The right answer is: 2
The model return: 2
right
s R Z E -> 6
t E C -> 4
T u o S -> 4
U y g o G -> 4
T h o l -> 2
z K r K -> 4
N T u s -> 4
E Y f G -> 6
T v O t -> 4
Z l y -> 2
w n Q v -> 2
P R z -> 4
R O H n b -> 6
W C k k T -> 6
S Y E h -> 6
y C b K -> 4
g g O s k ->
The right answer is: 2
The model return: 4
false
**line number: 32
T G C n -> 6
O L x F G -> 8
X o K i -> 4
q b c L -> 2
G q N X -> 6
u U i X -> 4
W X z r -> 4
P d X M G -> 8
N c T G -> 6
G u a K z -> 4
y S u P h -> 4
G b G D -> 6
p f U P k -> 4
Z H v -> 4
V f k B -> 4
e V v o m -> 2
e Z t -> 2
N s e -> 2
a l C t -> 2
R a Q B -> 6
Y l G X F -> 8
H D B I l -> 8
a G b -> 2
G V d V m -> 6
y C V -> 4
u p b C -> 2
P L L f E -> 8
I r f T Z -> 6
z M f c I -> 4
t X n -> 2
F B q -> 4
q k K -> 2
n W k R u ->
The right answer is: 4
The model return: 6
false
N s B -> 4
M T Q v k -> 6
a h a D -> 2
g G g Q -> 4
o H v -> 2
w i G c r -> 2
K R h -> 4
B r T -> 4
d r R p s -> 2
n S N -> 4
y L z -> 2
C e p g e -> 2
s x F b I -> 4
b h N -> 2
M W m -> 4
B u l w -> 2
U F C y -> 6
g G v -> 2
M X I y h -> 6
G h n h s -> 2
y m Y -> 2
Q I A f i -> 6
b u X y -> 2
G l B -> 4
L G o T -> 6
w y G -> 2
G S A y t -> 6
A F a A r -> 6
B o y Q -> 4
N k n q -> 2
l x X u -> 2
q u q b H -> 2
o Q Y b ->
The right answer is: 4
The model return: 2
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], -1]
==========================================================================
15
**line number: 4
8 7 8 -> 8 8
7 5 7 2 -> 7 2
5 2 1 0 -> 5 0
7 2 9 3 0 -> 7 0
5 7 4 7 ->
The right answer is: 5 7
The model return: 5 7
right
V D E -> V E
G E H V A -> G A
I L K -> I K
A V W -> A W
W P Z ->
The right answer is: W Z
The model return: W Z
right
7 7 5 7 -> 7 7
5 2 9 2 -> 5 2
9 8 6 5 -> 9 5
3 9 3 0 -> 3 0
7 1 0 ->
The right answer is: 7 0
The model return: 7
false
0 0 6 -> 0 6
4 3 9 -> 4 9
7 0 8 3 4 -> 7 4
8 4 4 9 0 -> 8 0
7 9 6 9 0 ->
The right answer is: 7 0
The model return: 7 0
right
1 4 4 -> 1 4
8 7 9 1 5 -> 8 5
4 4 6 -> 4 6
4 6 8 1 -> 4 1
7 3 6 ->
The right answer is: 7 6
The model return: 7 6
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], 4]
==========================================================================
16
**line number: 4
y g s -> y y g s y g s s
z o r -> z z o r z o r r
p q b h k -> p p q b h k p q b h k k
x e u a a -> x x e u a a x e u a a a
a u s ->
The right answer is: a a u s a u s s
The model return: a a u s a u s s
right
H C R R P -> H H C R R P H C R R P P
Q F G L N -> Q Q F G L N Q F G L N N
H H S T F -> H H H S T F H H S T F F
I Q M -> I I Q M I Q M M
Q A A ->
The right answer is: Q Q A A Q A A A
The model return: Q Q A A Q Q A A A
false
S N F Y -> S S N F Y S N F Y Y
D I K B -> D D I K B D I K B B
L S E A R -> L L S E A R L S E A R R
I R E G -> I I R E G I R E G G
N E Z ->
The right answer is: N N E Z N E Z Z
The model return: N N E Z N E Z Z
right
2 4 4 2 -> 2 2 4 4 2 2 4 4 2 2
0 8 4 -> 0 0 8 4 0 8 4 4
4 3 0 -> 4 4 3 0 4 3 0 0
0 5 1 8 -> 0 0 5 1 8 0 5 1 8 8
1 2 1 ->
The right answer is: 1 1 2 1 1 2 1 1
The model return: 1 1 2 1 1 2 1 1
right
0 3 4 2 9 -> 0 0 3 4 2 9 0 3 4 2 9 9
7 0 4 -> 7 7 0 4 7 0 4 4
6 3 4 1 1 -> 6 6 3 4 1 1 6 3 4 1 1 1
2 5 1 7 -> 2 2 5 1 7 2 5 1 7 7
7 7 1 4 ->
The right answer is: 7 7 7 1 4 7 7 1 4 4
The model return: 7 7 7 1 4 7 7 1 4 4
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 4]
==========================================================================
17
**line number: 4
c k l f -> 2
a y x g e -> 2
d q n -> 2
q u b w -> 2
f g w ->
The right answer is: 2
The model return: 2
right
p o w l -> 2
i i d m v -> 2
m w c -> 2
p t p m c -> 2
i m k c ->
The right answer is: 2
The model return: 2
right
K M A F K -> 2
Z C Q M M -> 2
O R X -> 2
Q C Y B Q -> 2
L D A V ->
The right answer is: 2
The model return: 2
right
6 5 3 1 -> 2
4 4 5 2 7 -> 2
4 8 8 6 -> 2
4 8 4 1 -> 2
3 2 2 ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], 4]
==========================================================================
18
**line number: 4
z 4 l F -> z 5 l F z 4 l F
u T 4 K 5 -> u T 5 K 5 u T 4 K 5
p Y 6 -> p Y 7 p Y 6
6 q V g e -> 7 q V g e 6 q V g e
V y 8 ->
The right answer is: V y 9 V y 8
The model return: V y 9 V y 8
right
7 a y -> 8 a y 7 a y
5 6 h 9 -> 6 6 h 9 5 6 h 9
3 3 c -> 4 3 c 3 3 c
7 5 7 h -> 8 5 7 h 7 5 7 h
9 7 h ->
The right answer is: 10 7 h 9 7 h
The model return: 9 7 h 9 7 h
false
2 l z y c -> 3 l z y c 2 l z y c
8 c x -> 9 c x 8 c x
o 7 p a p -> o 8 p a p o 7 p a p
i 2 i x 8 -> i 3 i x 8 i 2 i x 8
6 1 d b 9 ->
The right answer is: 7 1 d b 9 6 1 d b 9
The model return: 6 2 d b 9 6 1 d b 9
false
**line number: 8
z 4 l F -> z 5 l F z 4 l F
u T 4 K 5 -> u T 5 K 5 u T 4 K 5
p Y 6 -> p Y 7 p Y 6
6 q V g e -> 7 q V g e 6 q V g e
k Z 9 9 w -> k Z 10 9 w k Z 9 9 w
o G 6 -> o G 7 o G 6
b F 9 -> b F 10 b F 9
Y 1 h -> Y 2 h Y 1 h
V y 8 ->
The right answer is: V y 9 V y 8
The model return: V y 9 V y 8
right
7 a y -> 8 a y 7 a y
5 6 h 9 -> 6 6 h 9 5 6 h 9
3 3 c -> 4 3 c 3 3 c
7 5 7 h -> 8 5 7 h 7 5 7 h
g 9 1 3 -> g 10 1 3 g 9 1 3
7 8 b r -> 8 8 b r 7 8 b r
g k 2 -> g k 3 g k 2
5 v f h q -> 6 v f h q 5 v f h q
9 7 h ->
The right answer is: 10 7 h 9 7 h
The model return: 10 7 h 9 7 h
right
2 l z y c -> 3 l z y c 2 l z y c
8 c x -> 9 c x 8 c x
o 7 p a p -> o 8 p a p o 7 p a p
i 2 i x 8 -> i 3 i x 8 i 2 i x 8
7 6 l -> 8 6 l 7 6 l
7 3 w 6 4 -> 8 3 w 6 4 7 3 w 6 4
n y z 2 -> n y z 3 n y z 2
m 5 c 6 u -> m 6 c 6 u m 5 c 6 u
6 1 d b 9 ->
The right answer is: 7 1 d b 9 6 1 d b 9
The model return: 6 2 d b 9 6 1 d b 9
false
Z 4 Y W V -> Z 5 Y W V Z 4 Y W V
N 7 D E -> N 8 D E N 7 D E
W S C 1 -> W S C 2 W S C 1
G H Q Y 5 -> G H Q Y 6 G H Q Y 5
2 X 5 -> 3 X 5 2 X 5
Q Q G 7 -> Q Q G 8 Q Q G 7
8 G 0 -> 9 G 0 8 G 0
3 O 9 2 Q -> 4 O 9 2 Q 3 O 9 2 Q
6 8 9 3 B ->
The right answer is: 7 8 9 3 B 6 8 9 3 B
The model return: 7 8 9 3 B 6 8 9 3 B
right
f a 0 q 0 -> f a 1 q 0 f a 0 q 0
8 7 s n -> 9 7 s n 8 7 s n
e u d x 4 -> e u d x 5 e u d x 4
e r 9 n -> e r 10 n e r 9 n
4 o k -> 5 o k 4 o k
2 q d 6 -> 3 q d 6 2 q d 6
i 9 1 f 5 -> i 10 1 f 5 i 9 1 f 5
7 0 9 i -> 8 0 9 i 7 0 9 i
8 h 9 u ->
The right answer is: 9 h 9 u 8 h 9 u
The model return: 9 h 9 u 8 h 9 u
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], 8]
==========================================================================
19
**line number: 4
1 3 z 0 -> 1 1 3 z 0 1 3 z 0
2 8 k l -> 2 2 8 k l 2 8 k l
1 6 o 2 d -> 1 1 6 o 2 d 1 6 o 2 d
q a 9 9 7 -> q a 9 9 9 7 q a 9 9 7
n 3 8 ->
The right answer is: n 3 3 8 n 3 8
The model return: n 3 9
false
Q E I 3 B -> Q E I 3 3 B Q E I 3 B
A B W 6 3 -> A B W 6 6 3 A B W 6 3
3 D W -> 3 3 D W 3 D W
M Y H 7 4 -> M Y H 7 7 4 M Y H 7 4
8 W 8 ->
The right answer is: 8 8 W 8 8 W 8
The model return: 8 8 W 8 8 W 8
right
G P G V 1 -> G P G V 1 1 G P G V 1
I 4 B -> I 4 4 B I 4 B
N N B 7 D -> N N B 7 7 D N N B 7 D
2 W R H U -> 2 2 W R H U 2 W R H U
4 2 O 4 ->
The right answer is: 4 4 2 O 4 4 2 O 4
The model return: 4 4 2 O 4 4 2 O 4
right
1 P 8 -> 1 1 P 8 1 P 8
1 3 C -> 1 1 3 C 1 3 C
V N M 4 -> V N M 4 4 V N M 4
M G H 4 O -> M G H 4 4 O M G H 4 O
D S M 7 Y ->
The right answer is: D S M 7 7 Y D S M 7 Y
The model return: D S M 7 4 Y D S M 7
false
**line number: 8
1 3 z 0 -> 1 1 3 z 0 1 3 z 0
2 8 k l -> 2 2 8 k l 2 8 k l
1 6 o 2 d -> 1 1 6 o 2 d 1 6 o 2 d
q a 9 9 7 -> q a 9 9 9 7 q a 9 9 7
l b z r 0 -> l b z r 0 0 l b z r 0
6 3 o 3 s -> 6 6 3 o 3 s 6 3 o 3 s
4 w l f -> 4 4 w l f 4 w l f
e z 7 5 6 -> e z 7 7 5 6 e z 7 5 6
n 3 8 ->
The right answer is: n 3 3 8 n 3 8
The model return: n 3 8 n 3 8
false
Q E I 3 B -> Q E I 3 3 B Q E I 3 B
A B W 6 3 -> A B W 6 6 3 A B W 6 3
3 D W -> 3 3 D W 3 D W
M Y H 7 4 -> M Y H 7 7 4 M Y H 7 4
7 R 5 -> 7 7 R 5 7 R 5
9 9 7 C 0 -> 9 9 9 7 C 0 9 9 7 C 0
9 5 L E 8 -> 9 9 5 L E 8 9 5 L E 8
8 0 G 7 -> 8 8 0 G 7 8 0 G 7
8 W 8 ->
The right answer is: 8 8 W 8 8 W 8
The model return: 8 8 W 8 8 W 8
right
G P G V 1 -> G P G V 1 1 G P G V 1
I 4 B -> I 4 4 B I 4 B
N N B 7 D -> N N B 7 7 D N N B 7 D
2 W R H U -> 2 2 W R H U 2 W R H U
D 5 G W B -> D 5 5 G W B D 5 G W B
7 6 A A 3 -> 7 7 6 A A 3 7 6 A A 3
8 5 Q 7 5 -> 8 8 5 Q 7 5 8 5 Q 7 5
K 7 2 8 Y -> K 7 7 2 8 Y K 7 2 8 Y
4 2 O 4 ->
The right answer is: 4 4 2 O 4 4 2 O 4
The model return: 4 4 2 O 4 4 2 O 4
right
1 P 8 -> 1 1 P 8 1 P 8
1 3 C -> 1 1 3 C 1 3 C
V N M 4 -> V N M 4 4 V N M 4
M G H 4 O -> M G H 4 4 O M G H 4 O
8 C 4 -> 8 8 C 4 8 C 4
I X 1 -> I X 1 1 I X 1
3 P S -> 3 3 P S 3 P S
T D 4 3 8 -> T D 4 4 3 8 T D 4 3 8
D S M 7 Y ->
The right answer is: D S M 7 7 Y D S M 7 Y
The model return: D S M 7 7 Y D S M 7
false
**line number: 16
1 3 z 0 -> 1 1 3 z 0 1 3 z 0
2 8 k l -> 2 2 8 k l 2 8 k l
1 6 o 2 d -> 1 1 6 o 2 d 1 6 o 2 d
q a 9 9 7 -> q a 9 9 9 7 q a 9 9 7
l b z r 0 -> l b z r 0 0 l b z r 0
6 3 o 3 s -> 6 6 3 o 3 s 6 3 o 3 s
4 w l f -> 4 4 w l f 4 w l f
e z 7 5 6 -> e z 7 7 5 6 e z 7 5 6
o 6 e -> o 6 6 e o 6 e
6 2 y 9 3 -> 6 6 2 y 9 3 6 2 y 9 3
2 3 4 2 u -> 2 2 3 4 2 u 2 3 4 2 u
3 1 l l -> 3 3 1 l l 3 1 l l
6 e x -> 6 6 e x 6 e x
d p 0 t g -> d p 0 0 t g d p 0 t g
a y 9 e 2 -> a y 9 9 e 2 a y 9 e 2
4 e 7 o m -> 4 4 e 7 o m 4 e 7 o m
n 3 8 ->
The right answer is: n 3 3 8 n 3 8
The model return: n n 3 8 n 3 8
false
Q E I 3 B -> Q E I 3 3 B Q E I 3 B
A B W 6 3 -> A B W 6 6 3 A B W 6 3
3 D W -> 3 3 D W 3 D W
M Y H 7 4 -> M Y H 7 7 4 M Y H 7 4
7 R 5 -> 7 7 R 5 7 R 5
9 9 7 C 0 -> 9 9 9 7 C 0 9 9 7 C 0
9 5 L E 8 -> 9 9 5 L E 8 9 5 L E 8
8 0 G 7 -> 8 8 0 G 7 8 0 G 7
L 3 R 6 -> L 3 3 R 6 L 3 R 6
4 8 X 1 -> 4 4 8 X 1 4 8 X 1
8 D W Y 6 -> 8 8 D W Y 6 8 D W Y 6
3 0 S -> 3 3 0 S 3 0 S
6 3 0 S -> 6 6 3 0 S 6 3 0 S
4 O H -> 4 4 O H 4 O H
1 7 1 7 U -> 1 1 7 1 7 U 1 7 1 7 U
G 0 1 O -> G 0 0 1 O G 0 1 O
8 W 8 ->
The right answer is: 8 8 W 8 8 W 8
The model return: 8 8 W 8 8 W 8
right
G P G V 1 -> G P G V 1 1 G P G V 1
I 4 B -> I 4 4 B I 4 B
N N B 7 D -> N N B 7 7 D N N B 7 D
2 W R H U -> 2 2 W R H U 2 W R H U
D 5 G W B -> D 5 5 G W B D 5 G W B
7 6 A A 3 -> 7 7 6 A A 3 7 6 A A 3
8 5 Q 7 5 -> 8 8 5 Q 7 5 8 5 Q 7 5
K 7 2 8 Y -> K 7 7 2 8 Y K 7 2 8 Y
X 3 9 -> X 3 3 9 X 3 9
G 1 T -> G 1 1 T G 1 T
3 F A -> 3 3 F A 3 F A
E 0 K H L -> E 0 0 K H L E 0 K H L
Y A X X 6 -> Y A X X 6 6 Y A X X 6
V 8 2 0 1 -> V 8 8 2 0 1 V 8 2 0 1
8 U F T -> 8 8 U F T 8 U F T
D M 4 F -> D M 4 4 F D M 4 F
4 2 O 4 ->
The right answer is: 4 4 2 O 4 4 2 O 4
The model return: 4 4 2 O 4 4 2 O 4
right
1 P 8 -> 1 1 P 8 1 P 8
1 3 C -> 1 1 3 C 1 3 C
V N M 4 -> V N M 4 4 V N M 4
M G H 4 O -> M G H 4 4 O M G H 4 O
8 C 4 -> 8 8 C 4 8 C 4
I X 1 -> I X 1 1 I X 1
3 P S -> 3 3 P S 3 P S
T D 4 3 8 -> T D 4 4 3 8 T D 4 3 8
Z 9 5 0 3 -> Z 9 9 5 0 3 Z 9 5 0 3
D 8 0 0 -> D 8 8 0 0 D 8 0 0
F B 7 U -> F B 7 7 U F B 7 U
V 5 6 -> V 5 5 6 V 5 6
Y 9 G 4 4 -> Y 9 9 G 4 4 Y 9 G 4 4
D K 9 A L -> D K 9 9 A L D K 9 A L
9 G W B 0 -> 9 9 G W B 0 9 G W B 0
D O 8 4 Q -> D O 8 8 4 Q D O 8 4 Q
D S M 7 Y ->
The right answer is: D S M 7 7 Y D S M 7 Y
The model return: D S M 7 7 Y D S M 7
false
**line number: 32
1 3 z 0 -> 1 1 3 z 0 1 3 z 0
2 8 k l -> 2 2 8 k l 2 8 k l
1 6 o 2 d -> 1 1 6 o 2 d 1 6 o 2 d
q a 9 9 7 -> q a 9 9 9 7 q a 9 9 7
l b z r 0 -> l b z r 0 0 l b z r 0
6 3 o 3 s -> 6 6 3 o 3 s 6 3 o 3 s
4 w l f -> 4 4 w l f 4 w l f
e z 7 5 6 -> e z 7 7 5 6 e z 7 5 6
o 6 e -> o 6 6 e o 6 e
6 2 y 9 3 -> 6 6 2 y 9 3 6 2 y 9 3
2 3 4 2 u -> 2 2 3 4 2 u 2 3 4 2 u
3 1 l l -> 3 3 1 l l 3 1 l l
6 e x -> 6 6 e x 6 e x
d p 0 t g -> d p 0 0 t g d p 0 t g
a y 9 e 2 -> a y 9 9 e 2 a y 9 e 2
4 e 7 o m -> 4 4 e 7 o m 4 e 7 o m
6 t 5 l -> 6 6 t 5 l 6 t 5 l
d f l v 5 -> d f l v 5 5 d f l v 5
t p 8 -> t p 8 8 t p 8
g n 6 u -> g n 6 6 u g n 6 u
r 0 2 l -> r 0 0 2 l r 0 2 l
8 y 2 -> 8 8 y 2 8 y 2
p 6 h 0 p -> p 6 6 h 0 p p 6 h 0 p
6 p 3 p -> 6 6 p 3 p 6 p 3 p
w n 2 6 -> w n 2 2 6 w n 2 6
1 o 6 m 3 -> 1 1 o 6 m 3 1 o 6 m 3
p 9 p -> p 9 9 p p 9 p
0 g r f m -> 0 0 g r f m 0 g r f m
8 3 z -> 8 8 3 z 8 3 z
7 2 d -> 7 7 2 d 7 2 d
g c n 7 -> g c n 7 7 g c n 7
3 u 4 8 -> 3 3 u 4 8 3 u 4 8
n 3 8 ->
The right answer is: n 3 3 8 n 3 8
The model return: n 3 3 8 n 3 8
right
Q E I 3 B -> Q E I 3 3 B Q E I 3 B
A B W 6 3 -> A B W 6 6 3 A B W 6 3
3 D W -> 3 3 D W 3 D W
M Y H 7 4 -> M Y H 7 7 4 M Y H 7 4
7 R 5 -> 7 7 R 5 7 R 5
9 9 7 C 0 -> 9 9 9 7 C 0 9 9 7 C 0
9 5 L E 8 -> 9 9 5 L E 8 9 5 L E 8
8 0 G 7 -> 8 8 0 G 7 8 0 G 7
L 3 R 6 -> L 3 3 R 6 L 3 R 6
4 8 X 1 -> 4 4 8 X 1 4 8 X 1
8 D W Y 6 -> 8 8 D W Y 6 8 D W Y 6
3 0 S -> 3 3 0 S 3 0 S
6 3 0 S -> 6 6 3 0 S 6 3 0 S
4 O H -> 4 4 O H 4 O H
1 7 1 7 U -> 1 1 7 1 7 U 1 7 1 7 U
G 0 1 O -> G 0 0 1 O G 0 1 O
4 1 2 V -> 4 4 1 2 V 4 1 2 V
7 R 0 -> 7 7 R 0 7 R 0
8 L 5 7 7 -> 8 8 L 5 7 7 8 L 5 7 7
X 0 0 -> X 0 0 0 X 0 0
7 5 7 O 4 -> 7 7 5 7 O 4 7 5 7 O 4
L 3 W G 4 -> L 3 3 W G 4 L 3 W G 4
V Q 8 8 -> V Q 8 8 8 V Q 8 8
V U A 1 -> V U A 1 1 V U A 1
6 X M D Y -> 6 6 X M D Y 6 X M D Y
0 1 9 D 7 -> 0 0 1 9 D 7 0 1 9 D 7
H W G S 7 -> H W G S 7 7 H W G S 7
V H 6 5 -> V H 6 6 5 V H 6 5
K H U 5 -> K H U 5 5 K H U 5
E 2 T 9 -> E 2 2 T 9 E 2 T 9
9 9 5 S -> 9 9 9 5 S 9 9 5 S
S 0 U -> S 0 0 U S 0 U
8 W 8 ->
The right answer is: 8 8 W 8 8 W 8
The model return: 8 8 W 8 8 W 8
right
G P G V 1 -> G P G V 1 1 G P G V 1
I 4 B -> I 4 4 B I 4 B
N N B 7 D -> N N B 7 7 D N N B 7 D
2 W R H U -> 2 2 W R H U 2 W R H U
D 5 G W B -> D 5 5 G W B D 5 G W B
7 6 A A 3 -> 7 7 6 A A 3 7 6 A A 3
8 5 Q 7 5 -> 8 8 5 Q 7 5 8 5 Q 7 5
K 7 2 8 Y -> K 7 7 2 8 Y K 7 2 8 Y
X 3 9 -> X 3 3 9 X 3 9
G 1 T -> G 1 1 T G 1 T
3 F A -> 3 3 F A 3 F A
E 0 K H L -> E 0 0 K H L E 0 K H L
Y A X X 6 -> Y A X X 6 6 Y A X X 6
V 8 2 0 1 -> V 8 8 2 0 1 V 8 2 0 1
8 U F T -> 8 8 U F T 8 U F T
D M 4 F -> D M 4 4 F D M 4 F
5 E N O -> 5 5 E N O 5 E N O
P Q D 3 -> P Q D 3 3 P Q D 3
V B Q 3 -> V B Q 3 3 V B Q 3
B 1 D 3 7 -> B 1 1 D 3 7 B 1 D 3 7
H V 7 K -> H V 7 7 K H V 7 K
S 1 N R 3 -> S 1 1 N R 3 S 1 N R 3
9 0 Y -> 9 9 0 Y 9 0 Y
7 8 N 5 2 -> 7 7 8 N 5 2 7 8 N 5 2
8 1 S -> 8 8 1 S 8 1 S
0 5 M H -> 0 0 5 M H 0 5 M H
D C 2 R 2 -> D C 2 2 R 2 D C 2 R 2
7 I 7 8 -> 7 7 I 7 8 7 I 7 8
O 1 W -> O 1 1 W O 1 W
P 6 3 1 -> P 6 6 3 1 P 6 3 1
6 H A L -> 6 6 H A L 6 H A L
3 8 K -> 3 3 8 K 3 8 K
4 2 O 4 ->
The right answer is: 4 4 2 O 4 4 2 O 4
The model return: 4 4 2 O 4 4 2 O 4
right
1 P 8 -> 1 1 P 8 1 P 8
1 3 C -> 1 1 3 C 1 3 C
V N M 4 -> V N M 4 4 V N M 4
M G H 4 O -> M G H 4 4 O M G H 4 O
8 C 4 -> 8 8 C 4 8 C 4
I X 1 -> I X 1 1 I X 1
3 P S -> 3 3 P S 3 P S
T D 4 3 8 -> T D 4 4 3 8 T D 4 3 8
Z 9 5 0 3 -> Z 9 9 5 0 3 Z 9 5 0 3
D 8 0 0 -> D 8 8 0 0 D 8 0 0
F B 7 U -> F B 7 7 U F B 7 U
V 5 6 -> V 5 5 6 V 5 6
Y 9 G 4 4 -> Y 9 9 G 4 4 Y 9 G 4 4
D K 9 A L -> D K 9 9 A L D K 9 A L
9 G W B 0 -> 9 9 G W B 0 9 G W B 0
D O 8 4 Q -> D O 8 8 4 Q D O 8 4 Q
U 4 0 H 7 -> U 4 4 0 H 7 U 4 0 H 7
E Z R 7 -> E Z R 7 7 E Z R 7
3 P F C M -> 3 3 P F C M 3 P F C M
4 L 9 L -> 4 4 L 9 L 4 L 9 L
2 0 5 C -> 2 2 0 5 C 2 0 5 C
D 9 8 0 6 -> D 9 9 8 0 6 D 9 8 0 6
M C 4 R -> M C 4 4 R M C 4 R
8 G F -> 8 8 G F 8 G F
S 1 G -> S 1 1 G S 1 G
0 Z 7 D Z -> 0 0 Z 7 D Z 0 Z 7 D Z
4 M 3 1 -> 4 4 M 3 1 4 M 3 1
8 1 S O G -> 8 8 1 S O G 8 1 S O G
0 O 1 7 9 -> 0 0 O 1 7 9 0 O 1 7 9
S T 2 5 -> S T 2 2 5 S T 2 5
7 P H M 0 -> 7 7 P H M 0 7 P H M 0
P 2 R D -> P 2 2 R D P 2 R D
D S M 7 Y ->
The right answer is: D S M 7 7 Y D S M 7 Y
The model return: D S M 7 7 Y D S M 7
false
C Z H 2 L -> C Z H 2 2 L C Z H 2 L
8 M B U 6 -> 8 8 M B U 6 8 M B U 6
2 N D 8 4 -> 2 2 N D 8 4 2 N D 8 4
9 P 8 1 U -> 9 9 P 8 1 U 9 P 8 1 U
8 4 R L Q -> 8 8 4 R L Q 8 4 R L Q
7 L 6 -> 7 7 L 6 7 L 6
C I 8 -> C I 8 8 C I 8
3 2 8 L -> 3 3 2 8 L 3 2 8 L
0 V 4 2 -> 0 0 V 4 2 0 V 4 2
7 Z 1 -> 7 7 Z 1 7 Z 1
1 4 C 8 V -> 1 1 4 C 8 V 1 4 C 8 V
C V Q B 1 -> C V Q B 1 1 C V Q B 1
S 3 B -> S 3 3 B S 3 B
Q 8 C T W -> Q 8 8 C T W Q 8 C T W
Y 8 U -> Y 8 8 U Y 8 U
L 3 7 S -> L 3 3 7 S L 3 7 S
5 X R Z -> 5 5 X R Z 5 X R Z
I 4 3 5 2 -> I 4 4 3 5 2 I 4 3 5 2
7 B A Y -> 7 7 B A Y 7 B A Y
W 3 M 5 -> W 3 3 M 5 W 3 M 5
K 4 X I -> K 4 4 X I K 4 X I
2 R 9 -> 2 2 R 9 2 R 9
0 N 3 3 2 -> 0 0 N 3 3 2 0 N 3 3 2
X N 3 -> X N 3 3 X N 3
T 2 H A -> T 2 2 H A T 2 H A
E N 7 C -> E N 7 7 C E N 7 C
2 K 4 -> 2 2 K 4 2 K 4
8 1 U 1 9 -> 8 8 1 U 1 9 8 1 U 1 9
3 9 3 4 Q -> 3 3 9 3 4 Q 3 9 3 4 Q
N G 7 -> N G 7 7 N G 7
0 K O -> 0 0 K O 0 K O
0 0 Q 0 -> 0 0 0 Q 0 0 0 Q 0
1 6 M P P ->
The right answer is: 1 1 6 M P P 1 6 M P P
The model return: 1 1 6 M P P 1 6 M P
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
==========================================================================
20
**line number: 4
d 3 9 g b -> 3
y z f 2 5 -> 2
4 5 g 8 c -> 4
7 5 g 0 b -> 7
u 4 5 7 6 ->
The right answer is: 4
The model return: u
false
o 8 t -> 8
4 g 6 9 0 -> 4
a 2 1 z -> 2
0 u s -> 0
t 4 f v 8 ->
The right answer is: 4
The model return: 4
right
5 P 2 5 -> 5
9 4 O -> 9
S Q 8 2 -> 8
O 7 3 P -> 7
5 M 4 ->
The right answer is: 5
The model return: 5
right
9 1 E -> 9
7 9 S 4 9 -> 7
7 Y 0 9 1 -> 7
9 9 L N W -> 9
7 8 X ->
The right answer is: 7
The model return: 7
right
o 7 7 -> 7
o 1 2 7 1 -> 1
6 y 5 -> 6
3 6 o u 0 -> 3
o 2 5 ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], 4]
==========================================================================
21
**line number: 4
s 0 t -> s 0 t s 0 0 t
h 8 7 2 0 -> h 8 7 2 0 h 8 7 2 0 0
9 6 k -> 9 6 k 9 6 6 k
5 4 w g -> 5 4 w g 5 4 4 w g
0 4 i h 9 ->
The right answer is: 0 4 i h 9 0 4 i h 9 9
The model return: 0 4 i h 9 0 4 i h 9
false
l Q 7 -> l Q 7 l Q 7 7
X k r 6 -> X k r 6 X k r 6 6
Z f 6 4 -> Z f 6 4 Z f 6 4 4
9 S 8 l D -> 9 S 8 l D 9 S 8 8 l D
g D 9 3 ->
The right answer is: g D 9 3 g D 9 3 3
The model return: g D 9 3 g D 9 3 3
right
6 e 0 -> 6 e 0 6 e 0 0
6 1 h -> 6 1 h 6 1 1 h
s v 5 -> s v 5 s v 5 5
0 q h -> 0 q h 0 0 q h
9 2 h ->
The right answer is: 9 2 h 9 2 2 h
The model return: 9 2 h 9 2 2 h
right
n S e 2 -> n S e 2 n S e 2 2
e V 4 z p -> e V 4 z p e V 4 4 z p
N 8 g -> N 8 g N 8 8 g
z n Q 4 3 -> z n Q 4 3 z n Q 4 3 3
7 p z X 9 ->
The right answer is: 7 p z X 9 7 p z X 9 9
The model return: 7 p z X 9 7 p z X 9
false
**line number: 8
s 0 t -> s 0 t s 0 0 t
h 8 7 2 0 -> h 8 7 2 0 h 8 7 2 0 0
9 6 k -> 9 6 k 9 6 6 k
5 4 w g -> 5 4 w g 5 4 4 w g
n n 3 u -> n n 3 u n n 3 3 u
o 8 z y -> o 8 z y o 8 8 z y
9 u l 3 -> 9 u l 3 9 u l 3 3
g 1 1 -> g 1 1 g 1 1 1
0 4 i h 9 ->
The right answer is: 0 4 i h 9 0 4 i h 9 9
The model return: 0 4 i h 9 0 4 i h 9
false
l Q 7 -> l Q 7 l Q 7 7
X k r 6 -> X k r 6 X k r 6 6
Z f 6 4 -> Z f 6 4 Z f 6 4 4
9 S 8 l D -> 9 S 8 l D 9 S 8 8 l D
F y 7 3 -> F y 7 3 F y 7 3 3
E n 3 -> E n 3 E n 3 3
q 0 F V C -> q 0 F V C q 0 0 F V C
v Z G 9 -> v Z G 9 v Z G 9 9
g D 9 3 ->
The right answer is: g D 9 3 g D 9 3 3
The model return: g D 9 3 g D 9 3 3
right
6 e 0 -> 6 e 0 6 e 0 0
6 1 h -> 6 1 h 6 1 1 h
s v 5 -> s v 5 s v 5 5
0 q h -> 0 q h 0 0 q h
w x f 4 1 -> w x f 4 1 w x f 4 1 1
q q d 5 0 -> q q d 5 0 q q d 5 0 0
9 0 8 x -> 9 0 8 x 9 0 8 8 x
9 r g i 7 -> 9 r g i 7 9 r g i 7 7
9 2 h ->
The right answer is: 9 2 h 9 2 2 h
The model return: 9 2 h 9 2 2 h
right
n S e 2 -> n S e 2 n S e 2 2
e V 4 z p -> e V 4 z p e V 4 4 z p
N 8 g -> N 8 g N 8 8 g
z n Q 4 3 -> z n Q 4 3 z n Q 4 3 3
Y o G 6 -> Y o G 6 Y o G 6 6
I 0 g L b -> I 0 g L b I 0 0 g L b
2 a G M -> 2 a G M 2 2 a G M
t G 3 8 -> t G 3 8 t G 3 8 8
7 p z X 9 ->
The right answer is: 7 p z X 9 7 p z X 9 9
The model return: 7 p z X 9 7 7 p z X
false
**line number: 16
s 0 t -> s 0 t s 0 0 t
h 8 7 2 0 -> h 8 7 2 0 h 8 7 2 0 0
9 6 k -> 9 6 k 9 6 6 k
5 4 w g -> 5 4 w g 5 4 4 w g
n n 3 u -> n n 3 u n n 3 3 u
o 8 z y -> o 8 z y o 8 8 z y
9 u l 3 -> 9 u l 3 9 u l 3 3
g 1 1 -> g 1 1 g 1 1 1
2 0 7 0 m -> 2 0 7 0 m 2 0 7 0 0 m
4 q e -> 4 q e 4 4 q e
8 5 2 5 o -> 8 5 2 5 o 8 5 2 5 5 o
3 g 4 8 -> 3 g 4 8 3 g 4 8 8
2 2 g 6 -> 2 2 g 6 2 2 g 6 6
7 y z -> 7 y z 7 7 y z
l 7 9 1 -> l 7 9 1 l 7 9 1 1
4 g k m -> 4 g k m 4 4 g k m
0 4 i h 9 ->
The right answer is: 0 4 i h 9 0 4 i h 9 9
The model return: 0 4 i h 9 0 4 i h 9
false
l Q 7 -> l Q 7 l Q 7 7
X k r 6 -> X k r 6 X k r 6 6
Z f 6 4 -> Z f 6 4 Z f 6 4 4
9 S 8 l D -> 9 S 8 l D 9 S 8 8 l D
F y 7 3 -> F y 7 3 F y 7 3 3
E n 3 -> E n 3 E n 3 3
q 0 F V C -> q 0 F V C q 0 0 F V C
v Z G 9 -> v Z G 9 v Z G 9 9
z C 1 -> z C 1 z C 1 1
h 4 F -> h 4 F h 4 4 F
6 9 l P -> 6 9 l P 6 9 9 l P
9 S f X a -> 9 S f X a 9 9 S f X a
8 o 2 P -> 8 o 2 P 8 o 2 2 P
L 6 w Z i -> L 6 w Z i L 6 6 w Z i
t 1 F -> t 1 F t 1 1 F
z G 0 -> z G 0 z G 0 0
g D 9 3 ->
The right answer is: g D 9 3 g D 9 3 3
The model return: g D 9 3 g D 9 3 3
right
6 e 0 -> 6 e 0 6 e 0 0
6 1 h -> 6 1 h 6 1 1 h
s v 5 -> s v 5 s v 5 5
0 q h -> 0 q h 0 0 q h
w x f 4 1 -> w x f 4 1 w x f 4 1 1
q q d 5 0 -> q q d 5 0 q q d 5 0 0
9 0 8 x -> 9 0 8 x 9 0 8 8 x
9 r g i 7 -> 9 r g i 7 9 r g i 7 7
8 t 4 -> 8 t 4 8 t 4 4
w v 1 k q -> w v 1 k q w v 1 1 k q
z 4 e -> z 4 e z 4 4 e
x 3 7 -> x 3 7 x 3 7 7
f 9 2 -> f 9 2 f 9 2 2
m v 9 6 y -> m v 9 6 y m v 9 6 6 y
3 4 x 1 -> 3 4 x 1 3 4 x 1 1
o p 8 c m -> o p 8 c m o p 8 8 c m
9 2 h ->
The right answer is: 9 2 h 9 2 2 h
The model return: 9 2 h 9 2 2 h
right
n S e 2 -> n S e 2 n S e 2 2
e V 4 z p -> e V 4 z p e V 4 4 z p
N 8 g -> N 8 g N 8 8 g
z n Q 4 3 -> z n Q 4 3 z n Q 4 3 3
Y o G 6 -> Y o G 6 Y o G 6 6
I 0 g L b -> I 0 g L b I 0 0 g L b
2 a G M -> 2 a G M 2 2 a G M
t G 3 8 -> t G 3 8 t G 3 8 8
G c 9 -> G c 9 G c 9 9
5 I c Q G -> 5 I c Q G 5 5 I c Q G
W n 1 -> W n 1 W n 1 1
v 3 P -> v 3 P v 3 3 P
d R d 8 -> d R d 8 d R d 8 8
3 B 5 f -> 3 B 5 f 3 B 5 5 f
L 8 q r h -> L 8 q r h L 8 8 q r h
C H H 3 m -> C H H 3 m C H H 3 3 m
7 p z X 9 ->
The right answer is: 7 p z X 9 7 p z X 9 9
The model return: 7 p z X 9 7 7 p z X
false
**line number: 32
s 0 t -> s 0 t s 0 0 t
h 8 7 2 0 -> h 8 7 2 0 h 8 7 2 0 0
9 6 k -> 9 6 k 9 6 6 k
5 4 w g -> 5 4 w g 5 4 4 w g
n n 3 u -> n n 3 u n n 3 3 u
o 8 z y -> o 8 z y o 8 8 z y
9 u l 3 -> 9 u l 3 9 u l 3 3
g 1 1 -> g 1 1 g 1 1 1
2 0 7 0 m -> 2 0 7 0 m 2 0 7 0 0 m
4 q e -> 4 q e 4 4 q e
8 5 2 5 o -> 8 5 2 5 o 8 5 2 5 5 o
3 g 4 8 -> 3 g 4 8 3 g 4 8 8
2 2 g 6 -> 2 2 g 6 2 2 g 6 6
7 y z -> 7 y z 7 7 y z
l 7 9 1 -> l 7 9 1 l 7 9 1 1
4 g k m -> 4 g k m 4 4 g k m
5 0 e g -> 5 0 e g 5 0 0 e g
m 8 9 4 s -> m 8 9 4 s m 8 9 4 4 s
i 0 9 z -> i 0 9 z i 0 9 9 z
1 g 3 -> 1 g 3 1 g 3 3
u 5 s 1 x -> u 5 s 1 x u 5 s 1 1 x
x x 5 h -> x x 5 h x x 5 5 h
c i c 0 -> c i c 0 c i c 0 0
n 7 9 9 m -> n 7 9 9 m n 7 9 9 9 m
4 g 6 5 -> 4 g 6 5 4 g 6 5 5
9 1 o d -> 9 1 o d 9 1 1 o d
2 8 s l -> 2 8 s l 2 8 8 s l
3 9 u -> 3 9 u 3 9 9 u
u 8 6 -> u 8 6 u 8 6 6
3 1 k -> 3 1 k 3 1 1 k
g 9 1 -> g 9 1 g 9 1 1
m 8 9 -> m 8 9 m 8 9 9
0 4 i h 9 ->
The right answer is: 0 4 i h 9 0 4 i h 9 9
The model return: 0 4 i h 9 0 4 i h 9
false
l Q 7 -> l Q 7 l Q 7 7
X k r 6 -> X k r 6 X k r 6 6
Z f 6 4 -> Z f 6 4 Z f 6 4 4
9 S 8 l D -> 9 S 8 l D 9 S 8 8 l D
F y 7 3 -> F y 7 3 F y 7 3 3
E n 3 -> E n 3 E n 3 3
q 0 F V C -> q 0 F V C q 0 0 F V C
v Z G 9 -> v Z G 9 v Z G 9 9
z C 1 -> z C 1 z C 1 1
h 4 F -> h 4 F h 4 4 F
6 9 l P -> 6 9 l P 6 9 9 l P
9 S f X a -> 9 S f X a 9 9 S f X a
8 o 2 P -> 8 o 2 P 8 o 2 2 P
L 6 w Z i -> L 6 w Z i L 6 6 w Z i
t 1 F -> t 1 F t 1 1 F
z G 0 -> z G 0 z G 0 0
L 9 m -> L 9 m L 9 9 m
u 7 B C r -> u 7 B C r u 7 7 B C r
a F 0 -> a F 0 a F 0 0
6 i b M -> 6 i b M 6 6 i b M
4 f O -> 4 f O 4 4 f O
k 9 C -> k 9 C k 9 9 C
M f 6 -> M f 6 M f 6 6
f Y 2 -> f Y 2 f Y 2 2
e 9 M -> e 9 M e 9 9 M
P r 4 1 i -> P r 4 1 i P r 4 1 1 i
N 3 m p C -> N 3 m p C N 3 3 m p C
7 N s R 9 -> 7 N s R 9 7 N s R 9 9
A 8 r G -> A 8 r G A 8 8 r G
6 0 e I P -> 6 0 e I P 6 0 0 e I P
s x 5 N A -> s x 5 N A s x 5 5 N A
5 F l 6 -> 5 F l 6 5 F l 6 6
g D 9 3 ->
The right answer is: g D 9 3 g D 9 3 3
The model return: g D 9 3 g D 9 3 3
right
6 e 0 -> 6 e 0 6 e 0 0
6 1 h -> 6 1 h 6 1 1 h
s v 5 -> s v 5 s v 5 5
0 q h -> 0 q h 0 0 q h
w x f 4 1 -> w x f 4 1 w x f 4 1 1
q q d 5 0 -> q q d 5 0 q q d 5 0 0
9 0 8 x -> 9 0 8 x 9 0 8 8 x
9 r g i 7 -> 9 r g i 7 9 r g i 7 7
8 t 4 -> 8 t 4 8 t 4 4
w v 1 k q -> w v 1 k q w v 1 1 k q
z 4 e -> z 4 e z 4 4 e
x 3 7 -> x 3 7 x 3 7 7
f 9 2 -> f 9 2 f 9 2 2
m v 9 6 y -> m v 9 6 y m v 9 6 6 y
3 4 x 1 -> 3 4 x 1 3 4 x 1 1
o p 8 c m -> o p 8 c m o p 8 8 c m
n 0 n 6 x -> n 0 n 6 x n 0 n 6 6 x
v 0 7 6 -> v 0 7 6 v 0 7 6 6
9 7 1 h -> 9 7 1 h 9 7 1 1 h
7 6 u -> 7 6 u 7 6 6 u
k 3 2 4 -> k 3 2 4 k 3 2 4 4
0 4 f -> 0 4 f 0 4 4 f
1 g v w 0 -> 1 g v w 0 1 g v w 0 0
m z 9 -> m z 9 m z 9 9
1 7 6 4 x -> 1 7 6 4 x 1 7 6 4 4 x
0 p 2 -> 0 p 2 0 p 2 2
3 f q 4 q -> 3 f q 4 q 3 f q 4 4 q
1 0 z 4 -> 1 0 z 4 1 0 z 4 4
7 g 6 i -> 7 g 6 i 7 g 6 6 i
6 4 9 c -> 6 4 9 c 6 4 9 9 c
5 n 7 2 6 -> 5 n 7 2 6 5 n 7 2 6 6
6 e z z -> 6 e z z 6 6 e z z
9 2 h ->
The right answer is: 9 2 h 9 2 2 h
The model return: 9 2 h 9 2 9 h
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
==========================================================================
22
**line number: 4
H 6 9 -> H H 6 9 H 6 9
T 6 1 -> T T 6 1 T 6 1
5 5 Y 2 -> 5 5 Y Y 2 5 5 Y 2
1 7 9 V 1 -> 1 7 9 V V 1 1 7 9 V 1
N Q 1 ->
The right answer is: N N Q 1 N Q 1
The model return: N Q Q 1 N Q 1
false
1 0 b 4 -> 1 0 b b 4 1 0 b 4
8 w o 0 -> 8 w w o 0 8 w o 0
8 0 m 7 8 -> 8 0 m m 7 8 8 0 m 7 8
8 1 0 7 s -> 8 1 0 7 s s 8 1 0 7 s
0 g g ->
The right answer is: 0 g g g 0 g g
The model return: 0 g g g 0 g g
right
g 1 9 c f -> g g 1 9 c f g 1 9 c f
2 s 5 c e -> 2 s s 5 c e 2 s 5 c e
7 v a -> 7 v v a 7 v a
1 x p s w -> 1 x x p s w 1 x p s w
w 7 o p f ->
The right answer is: w w 7 o p f w 7 o p f
The model return: w w 7 o p f w 7 o p
false
**line number: 8
H 6 9 -> H H 6 9 H 6 9
T 6 1 -> T T 6 1 T 6 1
5 5 Y 2 -> 5 5 Y Y 2 5 5 Y 2
1 7 9 V 1 -> 1 7 9 V V 1 1 7 9 V 1
N 7 U G -> N N 7 U G N 7 U G
3 V 4 -> 3 V V 4 3 V 4
0 Y 6 P 5 -> 0 Y Y 6 P 5 0 Y 6 P 5
0 N N -> 0 N N N 0 N N
N Q 1 ->
The right answer is: N N Q 1 N Q 1
The model return: N N Q Q 1 N Q 1
false
1 0 b 4 -> 1 0 b b 4 1 0 b 4
8 w o 0 -> 8 w w o 0 8 w o 0
8 0 m 7 8 -> 8 0 m m 7 8 8 0 m 7 8
8 1 0 7 s -> 8 1 0 7 s s 8 1 0 7 s
2 i 6 s 1 -> 2 i i 6 s 1 2 i 6 s 1
i 0 6 -> i i 0 6 i 0 6
2 y 4 -> 2 y y 4 2 y 4
8 6 g -> 8 6 g g 8 6 g
0 g g ->
The right answer is: 0 g g g 0 g g
The model return: 0 g g g 0 g g
right
g 1 9 c f -> g g 1 9 c f g 1 9 c f
2 s 5 c e -> 2 s s 5 c e 2 s 5 c e
7 v a -> 7 v v a 7 v a
1 x p s w -> 1 x x p s w 1 x p s w
q w g 0 k -> q q w g 0 k q w g 0 k
9 a f 1 g -> 9 a a f 1 g 9 a f 1 g
4 r 7 9 7 -> 4 r r 7 9 7 4 r 7 9 7
b 3 0 1 -> b b 3 0 1 b 3 0 1
w 7 o p f ->
The right answer is: w w 7 o p f w 7 o p f
The model return: w w 7 o p f w 7 o p
false
**line number: 16
H 6 9 -> H H 6 9 H 6 9
T 6 1 -> T T 6 1 T 6 1
5 5 Y 2 -> 5 5 Y Y 2 5 5 Y 2
1 7 9 V 1 -> 1 7 9 V V 1 1 7 9 V 1
N 7 U G -> N N 7 U G N 7 U G
3 V 4 -> 3 V V 4 3 V 4
0 Y 6 P 5 -> 0 Y Y 6 P 5 0 Y 6 P 5
0 N N -> 0 N N N 0 N N
3 C 2 3 -> 3 C C 2 3 3 C 2 3
Y 3 D 9 Q -> Y Y 3 D 9 Q Y 3 D 9 Q
2 G 6 -> 2 G G 6 2 G 6
6 D C -> 6 D D C 6 D C
I C 5 -> I I C 5 I C 5
1 A 6 -> 1 A A 6 1 A 6
W 6 7 1 6 -> W W 6 7 1 6 W 6 7 1 6
2 Z 4 6 5 -> 2 Z Z 4 6 5 2 Z 4 6 5
N Q 1 ->
The right answer is: N N Q 1 N Q 1
The model return: N N Q 1 N Q 1
right
1 0 b 4 -> 1 0 b b 4 1 0 b 4
8 w o 0 -> 8 w w o 0 8 w o 0
8 0 m 7 8 -> 8 0 m m 7 8 8 0 m 7 8
8 1 0 7 s -> 8 1 0 7 s s 8 1 0 7 s
2 i 6 s 1 -> 2 i i 6 s 1 2 i 6 s 1
i 0 6 -> i i 0 6 i 0 6
2 y 4 -> 2 y y 4 2 y 4
8 6 g -> 8 6 g g 8 6 g
7 6 y -> 7 6 y y 7 6 y
5 5 b -> 5 5 b b 5 5 b
t 7 y n -> t t 7 y n t 7 y n
5 0 1 s 6 -> 5 0 1 s s 6 5 0 1 s 6
0 3 8 v 7 -> 0 3 8 v v 7 0 3 8 v 7
5 c 6 q 1 -> 5 c c 6 q 1 5 c 6 q 1
u 0 r u -> u u 0 r u u 0 r u
b r 6 r -> b b r 6 r b r 6 r
0 g g ->
The right answer is: 0 g g g 0 g g
The model return: 0 g g g 0 g g
right
g 1 9 c f -> g g 1 9 c f g 1 9 c f
2 s 5 c e -> 2 s s 5 c e 2 s 5 c e
7 v a -> 7 v v a 7 v a
1 x p s w -> 1 x x p s w 1 x p s w
q w g 0 k -> q q w g 0 k q w g 0 k
9 a f 1 g -> 9 a a f 1 g 9 a f 1 g
4 r 7 9 7 -> 4 r r 7 9 7 4 r 7 9 7
b 3 0 1 -> b b 3 0 1 b 3 0 1
2 x 1 5 5 -> 2 x x 1 5 5 2 x 1 5 5
t i 4 6 -> t t i 4 6 t i 4 6
2 h 0 2 g -> 2 h h 0 2 g 2 h 0 2 g
y 9 7 -> y y 9 7 y 9 7
6 2 n -> 6 2 n n 6 2 n
n 2 g -> n n 2 g n 2 g
p 3 w f -> p p 3 w f p 3 w f
3 s k -> 3 s s k 3 s k
w 7 o p f ->
The right answer is: w w 7 o p f w 7 o p f
The model return: w w 7 o p f w 7 o p
false
g 3 W -> g g 3 W g 3 W
4 5 d W K -> 4 5 d d W K 4 5 d W K
N q 6 -> N N q 6 N q 6
2 n 3 V 9 -> 2 n n 3 V 9 2 n 3 V 9
x l X z 8 -> x x l X z 8 x l X z 8
9 x O P S -> 9 x x O P S 9 x O P S
f Q 0 s -> f f Q 0 s f Q 0 s
H 9 t -> H H 9 t H 9 t
a p L 6 -> a a p L 6 a p L 6
7 W h -> 7 W W h 7 W h
r L 7 -> r r L 7 r L 7
V u 9 4 O -> V V u 9 4 O V u 9 4 O
V o d I 2 -> V V o d I 2 V o d I 2
R V 9 i 5 -> R R V 9 i 5 R V 9 i 5
7 w I 2 -> 7 w w I 2 7 w I 2
5 d Z B 3 -> 5 d d Z B 3 5 d Z B 3
g 2 L ->
The right answer is: g g 2 L g 2 L
The model return: g g 2 L g 2 L
right
6 8 2 8 T -> 6 8 2 8 T T 6 8 2 8 T
3 O H G -> 3 O O H G 3 O H G
1 M 4 2 -> 1 M M 4 2 1 M 4 2
T 8 I -> T T 8 I T 8 I
7 S Q S -> 7 S S Q S 7 S Q S
C P 6 R 6 -> C C P 6 R 6 C P 6 R 6
H H 3 -> H H H 3 H H 3
7 X L E -> 7 X X L E 7 X L E
Z 6 3 4 -> Z Z 6 3 4 Z 6 3 4
K G W W 8 -> K K G W W 8 K G W W 8
Q 0 N -> Q Q 0 N Q 0 N
H Z 6 Y I -> H H Z 6 Y I H Z 6 Y I
9 2 K -> 9 2 K K 9 2 K
F 2 D -> F F 2 D F 2 D
6 3 C -> 6 3 C C 6 3 C
6 D 7 7 5 -> 6 D D 7 7 5 6 D 7 7 5
E 9 F ->
The right answer is: E E 9 F E 9 F
The model return: E E 9 F E 9 F
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 16]
==========================================================================
23
**line number: 4
E l 3 -> E
S A R 7 w -> S
F h 9 F 6 -> F
p O 1 -> p
O c 7 3 q ->
The right answer is: O
The model return: O
right
Q F 4 -> Q
S T 4 -> S
3 A 4 5 -> A
5 2 B 6 -> B
U 6 8 ->
The right answer is: U
The model return: U
right
8 O 0 6 R -> O
8 Q 7 -> Q
3 I Y -> I
2 D Q T V -> D
N 1 8 ->
The right answer is: N
The model return: N
right
0 n 2 5 -> n
m 8 y -> m
8 b r b m -> b
g 5 x -> g
7 0 a ->
The right answer is: a
The model return: 0
false
V O 3 Q -> V
7 X Q -> X
D 4 3 -> D
7 Q X C Y -> Q
V U 5 Y ->
The right answer is: V
The model return: V
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], 4]
==========================================================================
24
**line number: 4
f 5 F 9 -> f 5 F 9 f 5 F F 9
h 0 B -> h 0 B h 0 B B
m 4 S 9 8 -> m 4 S 9 8 m 4 S S 9 8
X 4 e -> X 4 e X 4 e e
D 5 r 9 ->
The right answer is: D 5 r 9 D 5 r r 9
The model return: D 5 r 9 D 5 r r 9
right
9 6 2 C -> 9 6 2 C 9 6 2 C C
3 5 9 8 N -> 3 5 9 8 N 3 5 9 8 N N
5 R N S -> 5 R N S 5 R N S S
V G K 2 -> V G K 2 V G K K 2
G 5 T L ->
The right answer is: G 5 T L G 5 T L L
The model return: G 5 T L G 5 T L L
right
6 1 l -> 6 1 l 6 1 l l
6 a 3 -> 6 a 3 6 a a 3
4 6 m c b -> 4 6 m c b 4 6 m c b b
2 z w 5 -> 2 z w 5 2 z w w 5
r 5 i ->
The right answer is: r 5 i r 5 i i
The model return: r 5 i r 5 i i
right
5 7 A d -> 5 7 A d 5 7 A d d
1 9 h B -> 1 9 h B 1 9 h B B
E z 8 9 2 -> E z 8 9 2 E z z 8 9 2
v E 7 K 6 -> v E 7 K 6 v E 7 K K 6
v l I k 2 ->
The right answer is: v l I k 2 v l I k k 2
The model return: v l I k 2 v l I k k
false
6 y a x x -> 6 y a x x 6 y a x x x
l 5 z 9 8 -> l 5 z 9 8 l 5 z z 9 8
k p u z 0 -> k p u z 0 k p u z z 0
0 l 8 6 -> 0 l 8 6 0 l l 8 6
7 n n ->
The right answer is: 7 n n 7 n n n
The model return: 7 n n 7 n n n
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], 4]
==========================================================================
25
**line number: 4
L x 3 -> x
h 0 O Q -> Q
p V N 3 D -> D
5 Y g -> g
a x 7 R ->
The right answer is: R
The model return: R
right
s q b 5 k -> k
1 x 4 -> x
6 n 3 -> n
6 4 z -> z
0 6 1 i ->
The right answer is: i
The model return: i
right
C N L D 0 -> D
O 4 2 0 -> O
Y X I 4 -> I
Q 7 U 2 -> U
H 7 C F ->
The right answer is: F
The model return: C
false
9 K Y 6 5 -> Y
X Y S 3 8 -> S
T 8 U G 4 -> G
5 4 K 4 8 -> K
7 H T D ->
The right answer is: D
The model return: H
false
**line number: 8
L x 3 -> x
h 0 O Q -> Q
p V N 3 D -> D
5 Y g -> g
2 G s -> s
D n 3 -> n
8 h 9 B -> B
H s 4 -> s
a x 7 R ->
The right answer is: R
The model return: R
right
s q b 5 k -> k
1 x 4 -> x
6 n 3 -> n
6 4 z -> z
2 k 8 6 t -> t
i 6 3 o e -> e
k q 9 3 6 -> q
5 9 t 1 c -> c
0 6 1 i ->
The right answer is: i
The model return: i
right
C N L D 0 -> D
O 4 2 0 -> O
Y X I 4 -> I
Q 7 U 2 -> U
3 U 0 4 6 -> U
I 1 1 -> I
2 Z 6 U Y -> Y
9 R K -> K
H 7 C F ->
The right answer is: F
The model return: F
right
9 K Y 6 5 -> Y
X Y S 3 8 -> S
T 8 U G 4 -> G
5 4 K 4 8 -> K
Y 3 B -> B
4 5 3 X -> X
1 1 5 I 5 -> I
0 Q 5 -> Q
7 H T D ->
The right answer is: D
The model return: D
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], 8]
==========================================================================
26
**line number: 4
d f H o e -> d d f H o e d f H o e
h G G Y -> h h G G Y h G G Y
p g C m -> p p g C m p g C m
I g l O u -> I g g l O u I g l O u
i B Q ->
The right answer is: i i B Q i B Q
The model return: i i B Q i B Q
right
H g H h -> H g g H h H g H h
p Z h C -> p p Z h C p Z h C
w A y q -> w w A y q w A y q
n F H G -> n n F H G n F H G
x X Y ->
The right answer is: x x X Y x X Y
The model return: x x X Y x X Y
right
U Z G h -> U Z G h h U Z G h
l b q E i -> l l b q E i l b q E i
A y d X g -> A y y d X g A y d X g
D p f -> D p p f D p f
T k l ->
The right answer is: T k k l T k l
The model return: T k k l T k l
right
L g g -> L g g g L g g
t K l t -> t t K l t t K l t
O T p -> O T p p O T p
V i n -> V i i n V i n
s k b M ->
The right answer is: s s k b M s k b M
The model return: s k b M b s k b M
false
v a N -> v v a N v a N
H B g -> H B g g H B g
Z m f b -> Z m m f b Z m f b
K G I y -> K G I y y K G I y
t d Q ->
The right answer is: t t d Q t d Q
The model return: t d Q d t d Q
false
**line number: 8
d f H o e -> d d f H o e d f H o e
h G G Y -> h h G G Y h G G Y
p g C m -> p p g C m p g C m
I g l O u -> I g g l O u I g l O u
Q g Z C s -> Q g g Z C s Q g Z C s
g I h F -> g g I h F g I h F
s n T I g -> s s n T I g s n T I g
f F S Q M -> f f F S Q M f F S Q M
i B Q ->
The right answer is: i i B Q i B Q
The model return: i i B Q i B Q
right
H g H h -> H g g H h H g H h
p Z h C -> p p Z h C p Z h C
w A y q -> w w A y q w A y q
n F H G -> n n F H G n F H G
e m M -> e e m M e m M
a F E G -> a a F E G a F E G
w l Q y -> w w l Q y w l Q y
k i z c T -> k k i z c T k i z c T
x X Y ->
The right answer is: x x X Y x X Y
The model return: x x X Y x X Y
right
U Z G h -> U Z G h h U Z G h
l b q E i -> l l b q E i l b q E i
A y d X g -> A y y d X g A y d X g
D p f -> D p p f D p f
c f T -> c c f T c f T
w L H K Y -> w w L H K Y w L H K Y
b H E A -> b b H E A b H E A
N Z u H Z -> N Z u u H Z N Z u H Z
T k l ->
The right answer is: T k k l T k l
The model return: T k k l T k l
right
L g g -> L g g g L g g
t K l t -> t t K l t t K l t
O T p -> O T p p O T p
V i n -> V i i n V i n
c v Y z n -> c c v Y z n c v Y z n
w d Y S -> w w d Y S w d Y S
v t M g -> v v t M g v t M g
m S f d -> m m S f d m S f d
s k b M ->
The right answer is: s s k b M s k b M
The model return: s s k b M s k b M
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], 8]
==========================================================================
27
**line number: 4
C H G E v -> v
B c R e P -> c
R a p q o -> a
e E O Y T -> e
X n C e ->
The right answer is: n
The model return: n
right
r c Y G -> r
e e C g -> e
h f S l -> h
A X g -> g
E i Y ->
The right answer is: i
The model return: i
right
I o U -> o
F U i F -> i
A B i X S -> i
l n P z v -> l
U u f A ->
The right answer is: u
The model return: u
right
V C s F -> s
g L M O -> g
s G z h -> s
t W m l -> t
g I w F ->
The right answer is: g
The model return: g
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], 4]
==========================================================================
28
**line number: 4
a I o -> o
n W e m -> m
B m I Y -> m
u N p P U -> p
z Q n ->
The right answer is: n
The model return: n
right
q I g -> g
g L T Z y -> y
s r P x h -> h
b O F -> b
P S y p ->
The right answer is: p
The model return: y
false
M B v -> v
G C x -> x
f y K -> y
l L z F L -> z
R o w t w ->
The right answer is: w
The model return: t
false
**line number: 8
a I o -> o
n W e m -> m
B m I Y -> m
u N p P U -> p
b e t W -> t
S L q -> q
U G R B g -> g
F S M K e -> e
z Q n ->
The right answer is: n
The model return: n
right
q I g -> g
g L T Z y -> y
s r P x h -> h
b O F -> b
T m X -> m
W o k -> k
w c f H -> f
H P I L o -> o
P S y p ->
The right answer is: p
The model return: p
right
M B v -> v
G C x -> x
f y K -> y
l L z F L -> z
X X E z n -> n
A O u s S -> s
L V x -> x
g C l v -> v
R o w t w ->
The right answer is: w
The model return: t
false
d Y v -> v
I O D X d -> d
m o E C -> o
Q q u -> u
i K w -> w
g w V -> w
a F E H -> a
C u D C X -> u
T Z z g K ->
The right answer is: g
The model return: z
false
**line number: 16
a I o -> o
n W e m -> m
B m I Y -> m
u N p P U -> p
b e t W -> t
S L q -> q
U G R B g -> g
F S M K e -> e
G O k H -> k
d e P -> e
f z z a L -> a
c c r F a -> a
b G o -> o
k C T y -> y
x r U o -> o
r a C -> a
z Q n ->
The right answer is: n
The model return: n
right
q I g -> g
g L T Z y -> y
s r P x h -> h
b O F -> b
T m X -> m
W o k -> k
w c f H -> f
H P I L o -> o
i a C -> a
G e c -> c
C S b -> b
P b d -> d
l k n L -> n
k W C x -> x
u Y r v -> v
C w B -> w
P S y p ->
The right answer is: p
The model return: p
right
M B v -> v
G C x -> x
f y K -> y
l L z F L -> z
X X E z n -> n
A O u s S -> s
L V x -> x
g C l v -> v
f C O -> f
E g e -> e
W I D v -> v
F v C -> v
g H b -> b
Q v i L -> i
y v L -> v
n I h q g -> g
R o w t w ->
The right answer is: w
The model return: t
false
d Y v -> v
I O D X d -> d
m o E C -> o
Q q u -> u
i K w -> w
g w V -> w
a F E H -> a
C u D C X -> u
A P Z u -> u
g l P Y -> l
R I Z x I -> x
c G X -> c
k A u N k -> k
N p v -> v
p W c -> c
v A c N -> c
T Z z g K ->
The right answer is: g
The model return: z
false
**line number: 32
a I o -> o
n W e m -> m
B m I Y -> m
u N p P U -> p
b e t W -> t
S L q -> q
U G R B g -> g
F S M K e -> e
G O k H -> k
d e P -> e
f z z a L -> a
c c r F a -> a
b G o -> o
k C T y -> y
x r U o -> o
r a C -> a
m P S x b -> b
g Y h -> h
q R S -> q
x A b g -> g
T s e G -> e
V a a s -> s
Y O U x -> x
P G e -> e
M h q P -> q
x S S -> x
h r b Q n -> n
m g H t -> t
y x X -> x
k p g S l -> l
V q E k n -> n
w V t g -> g
z Q n ->
The right answer is: n
The model return: n
right
q I g -> g
g L T Z y -> y
s r P x h -> h
b O F -> b
T m X -> m
W o k -> k
w c f H -> f
H P I L o -> o
i a C -> a
G e c -> c
C S b -> b
P b d -> d
l k n L -> n
k W C x -> x
u Y r v -> v
C w B -> w
a m m A S -> m
i E N -> i
H c K g c -> c
x t q A t -> t
r u k X Y -> k
c t T N b -> b
t W C G -> t
Q G H g -> g
g g P q F -> q
R N f b E -> b
I v u b R -> b
V f Y w -> w
p s T R c -> c
A h q -> q
S I N u K -> u
Y O h -> h
P S y p ->
The right answer is: p
The model return: y
false
M B v -> v
G C x -> x
f y K -> y
l L z F L -> z
X X E z n -> n
A O u s S -> s
L V x -> x
g C l v -> v
f C O -> f
E g e -> e
W I D v -> v
F v C -> v
g H b -> b
Q v i L -> i
y v L -> v
n I h q g -> g
u e d O -> d
C n l n b -> b
T W Q k -> k
q P w g -> g
N x C q -> q
w R C B -> w
m T w m n -> n
U D r -> r
l N a -> a
K R d -> d
M d M A W -> d
t T r S -> r
E g r -> r
L n K Y S -> n
g r r F X -> r
y K M N D -> y
R o w t w ->
The right answer is: w
The model return: t
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
==========================================================================
29
**line number: 4
t Y r -> t Y Y r t Y r
O B b g y -> O O B b g y O B b g y
O f r b -> O O f r b O f r b
k B X -> k B B X k B X
k D s w g ->
The right answer is: k D D s w g k D s w g
The model return: k D D s w g k D s w
false
H Q y Q N -> H H Q y Q N H Q y Q N
K G a -> K K G a K G a
s V g w n -> s V V g w n s V g w n
Z T p E U -> Z Z T p E U Z T p E U
F c q n ->
The right answer is: F F c q n F c q n
The model return: F F c q n F c q n
right
U G h -> U U G h U G h
T o I K -> T T o I K T o I K
z X a K -> z X X a K z X a K
v X D -> v X X D v X D
v Q S H O ->
The right answer is: v Q Q S H O v Q S H O
The model return: v Q Q S H O v Q S H
false
**line number: 8
t Y r -> t Y Y r t Y r
O B b g y -> O O B b g y O B b g y
O f r b -> O O f r b O f r b
k B X -> k B B X k B X
o Z M Y -> o Z Z M Y o Z M Y
B o R -> B B o R B o R
a Z m s -> a Z Z m s a Z m s
n U A u -> n U U A u n U A u
k D s w g ->
The right answer is: k D D s w g k D s w g
The model return: k D D s w g k D s w
false
H Q y Q N -> H H Q y Q N H Q y Q N
K G a -> K K G a K G a
s V g w n -> s V V g w n s V g w n
Z T p E U -> Z Z T p E U Z T p E U
x O f p -> x O O f p x O f p
Z c K -> Z Z c K Z c K
C d b -> C C d b C d b
I k W G V -> I I k W G V I k W G V
F c q n ->
The right answer is: F F c q n F c q n
The model return: F F c q n F c q n
right
U G h -> U U G h U G h
T o I K -> T T o I K T o I K
z X a K -> z X X a K z X a K
v X D -> v X X D v X D
B Y d X H -> B B Y d X H B Y d X H
N S R a N -> N N S R a N N S R a N
s u F E -> s u F F E s u F E
Z o R a -> Z Z o R a Z o R a
v Q S H O ->
The right answer is: v Q Q S H O v Q S H O
The model return: v v Q S H O v Q S H
false
**line number: 16
t Y r -> t Y Y r t Y r
O B b g y -> O O B b g y O B b g y
O f r b -> O O f r b O f r b
k B X -> k B B X k B X
o Z M Y -> o Z Z M Y o Z M Y
B o R -> B B o R B o R
a Z m s -> a Z Z m s a Z m s
n U A u -> n U U A u n U A u
O m S Z -> O O m S Z O m S Z
H I m g f -> H H I m g f H I m g f
s N Q P -> s N N Q P s N Q P
b o P -> b o P P b o P
D h e C Y -> D D h e C Y D h e C Y
e k B z -> e k B B z e k B z
p v O v -> p v O O v p v O v
r q s g Y -> r q s g Y Y r q s g Y
k D s w g ->
The right answer is: k D D s w g k D s w g
The model return: k D D s w g k D s w
false
H Q y Q N -> H H Q y Q N H Q y Q N
K G a -> K K G a K G a
s V g w n -> s V V g w n s V g w n
Z T p E U -> Z Z T p E U Z T p E U
x O f p -> x O O f p x O f p
Z c K -> Z Z c K Z c K
C d b -> C C d b C d b
I k W G V -> I I k W G V I k W G V
n C i Q F -> n C C i Q F n C i Q F
n S l -> n S S l n S l
Y p Z V W -> Y Y p Z V W Y p Z V W
e i n C -> e i n C C e i n C
c h G e V -> c h G G e V c h G e V
C Y g u g -> C C Y g u g C Y g u g
N F h C T -> N N F h C T N F h C T
s y e i B -> s y e i B B s y e i B
F c q n ->
The right answer is: F F c q n F c q n
The model return: F F c q n F c q n
right
U G h -> U U G h U G h
T o I K -> T T o I K T o I K
z X a K -> z X X a K z X a K
v X D -> v X X D v X D
B Y d X H -> B B Y d X H B Y d X H
N S R a N -> N N S R a N N S R a N
s u F E -> s u F F E s u F E
Z o R a -> Z Z o R a Z o R a
Q U R P r -> Q Q U R P r Q U R P r
A T D Z q -> A A T D Z q A T D Z q
E i p A -> E E i p A E i p A
G h Q -> G G h Q G h Q
t h I -> t h I I t h I
T B z -> T T B z T B z
w Y v -> w Y Y v w Y v
Y G n D -> Y Y G n D Y G n D
v Q S H O ->
The right answer is: v Q Q S H O v Q S H O
The model return: v Q Q S H O v Q S H
false
**line number: 32
t Y r -> t Y Y r t Y r
O B b g y -> O O B b g y O B b g y
O f r b -> O O f r b O f r b
k B X -> k B B X k B X
o Z M Y -> o Z Z M Y o Z M Y
B o R -> B B o R B o R
a Z m s -> a Z Z m s a Z m s
n U A u -> n U U A u n U A u
O m S Z -> O O m S Z O m S Z
H I m g f -> H H I m g f H I m g f
s N Q P -> s N N Q P s N Q P
b o P -> b o P P b o P
D h e C Y -> D D h e C Y D h e C Y
e k B z -> e k B B z e k B z
p v O v -> p v O O v p v O v
r q s g Y -> r q s g Y Y r q s g Y
T A m s -> T T A m s T A m s
G X l -> G G X l G X l
N N b d g -> N N N b d g N N b d g
F g v -> F F g v F g v
W e C P F -> W W e C P F W e C P F
u A O a -> u A A O a u A O a
B B x Y -> B B B x Y B B x Y
g E T -> g E E T g E T
U u c -> U U u c U u c
D v S T L -> D D v S T L D v S T L
C d I k f -> C C d I k f C d I k f
W G u -> W W G u W G u
N p b -> N N p b N p b
K h w M -> K K h w M K h w M
d Q b -> d Q Q b d Q b
a I G u V -> a I I G u V a I G u V
k D s w g ->
The right answer is: k D D s w g k D s w g
The model return: k D D s w g k D s w
false
H Q y Q N -> H H Q y Q N H Q y Q N
K G a -> K K G a K G a
s V g w n -> s V V g w n s V g w n
Z T p E U -> Z Z T p E U Z T p E U
x O f p -> x O O f p x O f p
Z c K -> Z Z c K Z c K
C d b -> C C d b C d b
I k W G V -> I I k W G V I k W G V
n C i Q F -> n C C i Q F n C i Q F
n S l -> n S S l n S l
Y p Z V W -> Y Y p Z V W Y p Z V W
e i n C -> e i n C C e i n C
c h G e V -> c h G G e V c h G e V
C Y g u g -> C C Y g u g C Y g u g
N F h C T -> N N F h C T N F h C T
s y e i B -> s y e i B B s y e i B
e R K -> e R R K e R K
E u K -> E E u K E u K
P W q W Z -> P P W q W Z P W q W Z
h Y h -> h Y Y h h Y h
u t b r G -> u t b r G G u t b r G
t E c -> t E E c t E c
k E O -> k E E O k E O
g y O l V -> g y O O l V g y O l V
h A V F -> h A A V F h A V F
D s Y X -> D D s Y X D s Y X
g R t -> g R R t g R t
u U c L e -> u U U c L e u U c L e
D L Q a H -> D D L Q a H D L Q a H
b A a B -> b A A a B b A a B
e w S -> e w S S e w S
N k G -> N N k G N k G
F c q n ->
The right answer is: F F c q n F c q n
The model return: F F c q n F c q n
right
U G h -> U U G h U G h
T o I K -> T T o I K T o I K
z X a K -> z X X a K z X a K
v X D -> v X X D v X D
B Y d X H -> B B Y d X H B Y d X H
N S R a N -> N N S R a N N S R a N
s u F E -> s u F F E s u F E
Z o R a -> Z Z o R a Z o R a
Q U R P r -> Q Q U R P r Q U R P r
A T D Z q -> A A T D Z q A T D Z q
E i p A -> E E i p A E i p A
G h Q -> G G h Q G h Q
t h I -> t h I I t h I
T B z -> T T B z T B z
w Y v -> w Y Y v w Y v
Y G n D -> Y Y G n D Y G n D
i q C G f -> i q C C G f i q C G f
r b V i -> r b V V i r b V i
K f P -> K K f P K f P
Q m T -> Q Q m T Q m T
o Q a -> o Q Q a o Q a
A v M K -> A A v M K A v M K
H N D x -> H H N D x H N D x
M k Z i H -> M M k Z i H M k Z i H
H t y -> H H t y H t y
w O r N -> w O O r N w O r N
K W u -> K K W u K W u
V x x -> V V x x V x x
p m F -> p m F F p m F
C L a -> C C L a C L a
i V k e -> i V V k e i V k e
O G d C -> O O G d C O G d C
v Q S H O ->
The right answer is: v Q Q S H O v Q S H O
The model return: v Q Q S H O v Q S H
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
==========================================================================
30
**line number: 4
o G x -> G
X g A F N -> X
A r R o -> A
I c u -> I
p S P ->
The right answer is: S
The model return: p
false
L Y F C r -> L
A g e M -> A
U W X c K -> U
i E B -> E
R g u ->
The right answer is: R
The model return: R
right
S z D F -> S
C Z G v W -> C
m P M h -> P
p e M -> M
n b H k h ->
The right answer is: H
The model return: H
right
G A V h o -> G
M E k -> M
c T g y i -> T
a G p H h -> G
B y Q Q ->
The right answer is: B
The model return: B
right
r P d -> P
g s X i -> X
O g D -> O
i v G -> G
W g Q ->
The right answer is: W
The model return: Q
false
**line number: 8
o G x -> G
X g A F N -> X
A r R o -> A
I c u -> I
f z N d -> N
E v C -> E
g y W E -> W
U x m -> U
p S P ->
The right answer is: S
The model return: P
false
L Y F C r -> L
A g e M -> A
U W X c K -> U
i E B -> E
G p V O H -> G
M d X M A -> M
t e B r C -> B
V k D E -> V
R g u ->
The right answer is: R
The model return: R
right
S z D F -> S
C Z G v W -> C
m P M h -> P
p e M -> M
h S z h I -> S
h Z x v -> Z
n l K -> K
n S b P Z -> S
n b H k h ->
The right answer is: H
The model return: H
right
G A V h o -> G
M E k -> M
c T g y i -> T
a G p H h -> G
w K o -> K
v S T R -> S
Y G B F g -> Y
g Y k F r -> Y
B y Q Q ->
The right answer is: B
The model return: B
right
r P d -> P
g s X i -> X
O g D -> O
i v G -> G
l h M f -> M
n g W n x -> W
O n h K -> O
n b B -> B
W g Q ->
The right answer is: W
The model return: Q
false
**line number: 16
o G x -> G
X g A F N -> X
A r R o -> A
I c u -> I
f z N d -> N
E v C -> E
g y W E -> W
U x m -> U
A T G G l -> A
N X U k Q -> N
f W T r a -> W
K e z y -> K
O X E G g -> O
e g v F d -> F
n R q A -> R
l K q -> K
p S P ->
The right answer is: S
The model return: S
right
L Y F C r -> L
A g e M -> A
U W X c K -> U
i E B -> E
G p V O H -> G
M d X M A -> M
t e B r C -> B
V k D E -> V
T g v a n -> T
Q y X -> Q
i g w M -> M
H C h A -> H
X x V -> X
V s G M -> V
v G C Y g -> G
x E W -> E
R g u ->
The right answer is: R
The model return: R
right
S z D F -> S
C Z G v W -> C
m P M h -> P
p e M -> M
h S z h I -> S
h Z x v -> Z
n l K -> K
n S b P Z -> S
g W h N -> W
p G t U -> G
l S g -> S
a z a Q l -> Q
d E p E -> E
l N c -> N
h u x G -> G
H z i V -> H
n b H k h ->
The right answer is: H
The model return: H
right
G A V h o -> G
M E k -> M
c T g y i -> T
a G p H h -> G
w K o -> K
v S T R -> S
Y G B F g -> Y
g Y k F r -> Y
D R q u -> D
A a T B -> A
W f Q A K -> W
s w m T w -> T
U x u -> U
Y e X K I -> Y
e m V U -> V
r s c g V -> V
B y Q Q ->
The right answer is: B
The model return: B
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], 16]
==========================================================================
31
**line number: 4
c a p T Y -> c A P T Y
g P z A h -> g P Z A H
H B g t -> h B G T
t B U z Y -> t B U Z Y
w r M s q ->
The right answer is: w R M S Q
The model return: w R M S Q
right
q u i P -> q U I P
Y S E l F -> y S E L F
O p k d h -> o P K D H
W p w k -> w P W K
F f y ->
The right answer is: f F Y
The model return: F F Y
false
Z t e D k -> z T E D K
K k z -> k K Z
I u W G L -> i U W G L
M g u -> m G U
E P M t d ->
The right answer is: e P M T D
The model return: E P M T D
false
**line number: 8
c a p T Y -> c A P T Y
g P z A h -> g P Z A H
H B g t -> h B G T
t B U z Y -> t B U Z Y
I h z -> i H Z
p g L K q -> p G L K Q
v M z -> v M Z
c Y T X -> c Y T X
w r M s q ->
The right answer is: w R M S Q
The model return: w R M S Q
right
q u i P -> q U I P
Y S E l F -> y S E L F
O p k d h -> o P K D H
W p w k -> w P W K
V w H -> v W H
f B S -> f B S
m Z s -> m Z S
s S R W A -> s S R W A
F f y ->
The right answer is: f F Y
The model return: F f Y
false
Z t e D k -> z T E D K
K k z -> k K Z
I u W G L -> i U W G L
M g u -> m G U
M n d v f -> m N D V F
g V y V O -> g V Y V O
l f U S -> l F U S
I x q -> i X Q
E P M t d ->
The right answer is: e P M T D
The model return: E P M T D
false
**line number: 16
c a p T Y -> c A P T Y
g P z A h -> g P Z A H
H B g t -> h B G T
t B U z Y -> t B U Z Y
I h z -> i H Z
p g L K q -> p G L K Q
v M z -> v M Z
c Y T X -> c Y T X
q P V h Y -> q P V H Y
Z a w Y Z -> z A W Y Z
N b b -> n B B
C h y f -> c H Y F
d l B c -> d L B C
v M I -> v M I
Q d M s y -> q D M S Y
X z a F R -> x Z A F R
w r M s q ->
The right answer is: w R M S Q
The model return: w R M S Q
right
q u i P -> q U I P
Y S E l F -> y S E L F
O p k d h -> o P K D H
W p w k -> w P W K
V w H -> v W H
f B S -> f B S
m Z s -> m Z S
s S R W A -> s S R W A
a z L -> a Z L
g k n e E -> g K N E E
G u i D n -> g U I D N
o M w i -> o M W I
m V c Z I -> m V C Z I
v A t -> v A T
Q v W M -> q V W M
v B i u -> v B I U
F f y ->
The right answer is: f F Y
The model return: F F Y
false
Z t e D k -> z T E D K
K k z -> k K Z
I u W G L -> i U W G L
M g u -> m G U
M n d v f -> m N D V F
g V y V O -> g V Y V O
l f U S -> l F U S
I x q -> i X Q
E L y A X -> e L Y A X
K K f K W -> k K F K W
T b R p -> t B R P
C z v g -> c Z V G
Q l x W A -> q L X W A
p s k A -> p S K A
o e z Y -> o E Z Y
v m S e Y -> v M S E Y
E P M t d ->
The right answer is: e P M T D
The model return: E P M T D
false
**line number: 32
c a p T Y -> c A P T Y
g P z A h -> g P Z A H
H B g t -> h B G T
t B U z Y -> t B U Z Y
I h z -> i H Z
p g L K q -> p G L K Q
v M z -> v M Z
c Y T X -> c Y T X
q P V h Y -> q P V H Y
Z a w Y Z -> z A W Y Z
N b b -> n B B
C h y f -> c H Y F
d l B c -> d L B C
v M I -> v M I
Q d M s y -> q D M S Y
X z a F R -> x Z A F R
w Z C q -> w Z C Q
M n m e -> m N M E
a Z U -> a Z U
U q c n -> u Q C N
v G W Z -> v G W Z
U i m q -> u I M Q
D o W -> d O W
a q T f -> a Q T F
d I p Y E -> d I P Y E
r D N -> r D N
R G p g I -> r G P G I
o r l M -> o R L M
P t L -> p T L
H p O -> h P O
K P p U G -> k P P U G
X O A S y -> x O A S Y
w r M s q ->
The right answer is: w R M S Q
The model return: w R M S Q
right
q u i P -> q U I P
Y S E l F -> y S E L F
O p k d h -> o P K D H
W p w k -> w P W K
V w H -> v W H
f B S -> f B S
m Z s -> m Z S
s S R W A -> s S R W A
a z L -> a Z L
g k n e E -> g K N E E
G u i D n -> g U I D N
o M w i -> o M W I
m V c Z I -> m V C Z I
v A t -> v A T
Q v W M -> q V W M
v B i u -> v B I U
H F p O Y -> h F P O Y
H q h -> h Q H
D u f -> d U F
f G r c -> f G R C
P d Z d -> p D Z D
M v x r -> m V X R
l B d -> l B D
q B d -> q B D
L c g p -> l C G P
c o a x S -> c O A X S
g V p -> g V P
p i x Z g -> p I X Z G
g p h R F -> g P H R F
W h p l -> w H P L
x v S W -> x V S W
s P C w e -> s P C W E
F f y ->
The right answer is: f F Y
The model return: F F Y
false
Z t e D k -> z T E D K
K k z -> k K Z
I u W G L -> i U W G L
M g u -> m G U
M n d v f -> m N D V F
g V y V O -> g V Y V O
l f U S -> l F U S
I x q -> i X Q
E L y A X -> e L Y A X
K K f K W -> k K F K W
T b R p -> t B R P
C z v g -> c Z V G
Q l x W A -> q L X W A
p s k A -> p S K A
o e z Y -> o E Z Y
v m S e Y -> v M S E Y
D O k -> d O K
f l R -> f L R
H q s p -> h Q S P
o G S a -> o G S A
k g p K -> k G P K
k C g z P -> k C G Z P
E q q -> e Q Q
Q P r t o -> q P R T O
b o F a h -> b O F A H
x q G G -> x Q G G
y n l O -> y N L O
Y w s -> y W S
v X N i g -> v X N I G
u D a X M -> u D A X M
N g G -> n G G
V o Y W u -> v O Y W U
E P M t d ->
The right answer is: e P M T D
The model return: E P M T D
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
==========================================================================
32
**line number: 4
M x u L -> M M X U L
X a W W S -> X X A W W S
e V U -> E E V U
o H K -> O O H K
K U r e ->
The right answer is: K K U R E
The model return: K K U r e
false
m U c u g -> M M U C U G
h N o -> H H N O
u G q h -> U U G Q H
z b H Z -> Z Z B H Z
C t k d ->
The right answer is: C C T K D
The model return: C C T K D
right
v e V -> V V E V
G G i e -> G G G I E
v b F y -> V V B F Y
X t C -> X X T C
v l s I t ->
The right answer is: V V L S I T
The model return: V V L S I T
right
p v Q -> P P V Q
k G L -> K K G L
L O X c B -> L L O X C B
q d O -> Q Q D O
K G s ->
The right answer is: K K G S
The model return: K K G s
false
**line number: 8
M x u L -> M M X U L
X a W W S -> X X A W W S
e V U -> E E V U
o H K -> O O H K
H A V U e -> H H A V U E
M h m o k -> M M H M O K
P y r S -> P P Y R S
K i V -> K K I V
K U r e ->
The right answer is: K K U R E
The model return: K K U R E
right
m U c u g -> M M U C U G
h N o -> H H N O
u G q h -> U U G Q H
z b H Z -> Z Z B H Z
k X t -> K K X T
C G A c -> C C G A C
G w q s -> G G W Q S
v h A -> V V H A
C t k d ->
The right answer is: C C T K D
The model return: C C T K D
right
v e V -> V V E V
G G i e -> G G G I E
v b F y -> V V B F Y
X t C -> X X T C
f A w f Q -> F F A W F Q
d g n n R -> D D G N N R
M k u V -> M M K U V
I H P o -> I I H P O
v l s I t ->
The right answer is: V V L S I T
The model return: V V L S I T
right
p v Q -> P P V Q
k G L -> K K G L
L O X c B -> L L O X C B
q d O -> Q Q D O
b t n M -> B B T N M
D p s -> D D P S
x I c -> X X I C
N Q i -> N N Q I
K G s ->
The right answer is: K K G S
The model return: K K G S
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], 8]
==========================================================================
33
**line number: 4
H D C T q -> H
r V V S z -> R
k g B Z -> K
H H i O -> H
M r P ->
The right answer is: M
The model return: M
right
i k N T V -> I
t L Z C -> T
R v Y H -> R
q P b k r -> Q
a w C i Z ->
The right answer is: A
The model return: A
right
B c P d -> B
q Y v N -> Q
q r S -> Q
V X o -> V
E g S u P ->
The right answer is: E
The model return: E
right
s O o -> S
T T g -> T
g Z x -> G
Z z v u -> Z
l h N h d ->
The right answer is: L
The model return: L
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], 4]
==========================================================================
34
**line number: 4
V y f X -> Y F X
x k W P -> K W P
N T h g G -> T H G G
d u l F q -> U L F Q
T y i ->
The right answer is: Y I
The model return: Y I
right
D G l d M -> G L D M
w V s G d -> V S G D
U a G g -> A G G
G L c T -> L C T
o z e t F ->
The right answer is: Z E T F
The model return: O Z E T
false
u I G -> I G
u Y m -> Y M
T T u s -> T U S
a r S -> R S
T K Q t x ->
The right answer is: K Q T X
The model return: T K Q X
false
**line number: 8
V y f X -> Y F X
x k W P -> K W P
N T h g G -> T H G G
d u l F q -> U L F Q
y g Z -> G Z
E q P P Z -> Q P P Z
I N i T -> N I T
o t H -> T H
T y i ->
The right answer is: Y I
The model return: Y I
right
D G l d M -> G L D M
w V s G d -> V S G D
U a G g -> A G G
G L c T -> L C T
c r V -> R V
S b W y -> B W Y
k l V Q g -> L V Q G
B Y o g -> Y O G
o z e t F ->
The right answer is: Z E T F
The model return: Z E T F
right
u I G -> I G
u Y m -> Y M
T T u s -> T U S
a r S -> R S
D R d -> R D
B x V C -> X V C
C v w -> V W
P q S G -> Q S G
T K Q t x ->
The right answer is: K Q T X
The model return: K Q T X
right
g q R -> Q R
B i x r t -> I X R T
G r f k -> R F K
M y M n D -> Y M N D
z C z O W -> C Z O W
p h u M -> H U M
F i k K g -> I K K G
Z F G b -> F G B
E I U U d ->
The right answer is: I U U D
The model return: I U D
false
o g c D Y -> G C D Y
Q i y K m -> I Y K M
M E c -> E C
w f F T W -> F F T W
k t G -> T G
U G G B w -> G G B W
r i K S v -> I K S V
l R U -> R U
T L u v B ->
The right answer is: L U V B
The model return: L U V B
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], 8]
==========================================================================
35
**line number: 4
S Y F o -> S Y F P
Z G q n -> Z G Q O
o O f g -> O O F H
r D R W -> R D R X
g q K K o ->
The right answer is: G Q K K P
The model return: G Q K O
false
K o L G X -> K O L G Y
X S q z -> X S Q A
n e A n I -> N E A N J
z s G -> Z S H
T a y O a ->
The right answer is: T A Y O B
The model return: T A Y O E
false
**line number: 8
S Y F o -> S Y F P
Z G q n -> Z G Q O
o O f g -> O O F H
r D R W -> R D R X
Y l x u -> Y L X V
O g B X -> O G B Y
F L Y m -> F L Y N
x u o x S -> X U O X T
g q K K o ->
The right answer is: G Q K K P
The model return: G Q K O
false
K o L G X -> K O L G Y
X S q z -> X S Q A
n e A n I -> N E A N J
z s G -> Z S H
m g X -> M G Y
K p t P q -> K P T P R
i k R g -> I K R H
K U l M -> K U L N
T a y O a ->
The right answer is: T A Y O B
The model return: T A Y O B
right
C U a -> C U B
C f x x -> C F X Y
O g u -> O G V
N T n n -> N T N O
S s z a -> S S Z B
b y G -> B Y H
S T y q -> S T Y R
k X S y N -> K X S Y O
G g m a f ->
The right answer is: G G M A G
The model return: G G M A G
right
b w D v h -> B W D V I
o k U i -> O K U J
I C W p Z -> I C W P A
m p N K d -> M P N K E
W l B -> W L C
O L L t -> O L L U
r h N i -> R H N J
f B L Q d -> F B L Q E
N B V F h ->
The right answer is: N B V F I
The model return: N B V F I
right
x D L U O -> X D L U P
l p C q -> L P C R
g g Q -> G G R
w s a Q t -> W S A Q U
L g q -> L G R
D T l -> D T M
B m Q -> B M R
q g g O -> Q G G P
T i k ->
The right answer is: T I L
The model return: T I K
false
**line number: 16
S Y F o -> S Y F P
Z G q n -> Z G Q O
o O f g -> O O F H
r D R W -> R D R X
Y l x u -> Y L X V
O g B X -> O G B Y
F L Y m -> F L Y N
x u o x S -> X U O X T
O E a -> O E B
c o H -> C O I
s D a b -> S D A C
x g g X Z -> X G G X A
U U R z A -> U U R Z B
b E Q -> B E R
h G I -> H G J
p D k e -> P D K F
g q K K o ->
The right answer is: G Q K K P
The model return: G Q K O
false
K o L G X -> K O L G Y
X S q z -> X S Q A
n e A n I -> N E A N J
z s G -> Z S H
m g X -> M G Y
K p t P q -> K P T P R
i k R g -> I K R H
K U l M -> K U L N
g x y m Z -> G X Y M A
r F A r g -> R F A R H
R W s O -> R W S P
w v b N X -> W V B N Y
v K t S -> V K T T
r n b V M -> R N B V N
I g r q -> I G R R
v a Y z -> V A Y A
T a y O a ->
The right answer is: T A Y O B
The model return: T A Y O B
right
C U a -> C U B
C f x x -> C F X Y
O g u -> O G V
N T n n -> N T N O
S s z a -> S S Z B
b y G -> B Y H
S T y q -> S T Y R
k X S y N -> K X S Y O
O z E I -> O Z E J
V k g -> V K H
A R l A Z -> A R L A A
g S D -> G S E
I l f -> I L G
I B r o -> I B R P
G K S o -> G K S P
h K k -> H K L
G g m a f ->
The right answer is: G G M A G
The model return: G G M A G
right
b w D v h -> B W D V I
o k U i -> O K U J
I C W p Z -> I C W P A
m p N K d -> M P N K E
W l B -> W L C
O L L t -> O L L U
r h N i -> R H N J
f B L Q d -> F B L Q E
M h f c M -> M H F C N
u s k A x -> U S K A Y
y i G -> Y I H
y E i -> Y E J
y T Y Y T -> Y T Y Y U
D g h -> D G I
M G e -> M G F
Z k i -> Z K J
N B V F h ->
The right answer is: N B V F I
The model return: N B V F I
right
x D L U O -> X D L U P
l p C q -> L P C R
g g Q -> G G R
w s a Q t -> W S A Q U
L g q -> L G R
D T l -> D T M
B m Q -> B M R
q g g O -> Q G G P
n S K -> N S L
w D E -> W D F
W M Z y -> W M Z Z
k U T O -> K U T P
R K a -> R K B
g X l -> G X M
m b n t G -> M B N T H
v I L C y -> V I L C Z
T i k ->
The right answer is: T I L
The model return: T I L
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], 16]
==========================================================================
36
**line number: 4
R e T -> R E T T
Q R q w -> Q R Q W W
E k A Y r -> E K A Y R R
e N v b -> E N V B B
g K n u ->
The right answer is: G K N U U
The model return: G K N U U
right
L C R A s -> L C R A S S
D p o -> D P O O
y B H X -> Y B H X X
i k L -> I K L L
S g F l ->
The right answer is: S G F L L
The model return: S G F L
false
n A P -> N A P P
n S C i -> N S C I I
R H w E -> R H W E E
w T G b -> W T G B B
m w V n ->
The right answer is: M W V N N
The model return: M W V N
false
**line number: 8
R e T -> R E T T
Q R q w -> Q R Q W W
E k A Y r -> E K A Y R R
e N v b -> E N V B B
F C W x U -> F C W X U U
k f p P -> K F P P P
k P M R W -> K P M R W W
Y i B W -> Y I B W W
g K n u ->
The right answer is: G K N U U
The model return: G K N U U
right
L C R A s -> L C R A S S
D p o -> D P O O
y B H X -> Y B H X X
i k L -> I K L L
r G u -> R G U U
I L x -> I L X X
n l z q U -> N L Z Q U U
C x I -> C X I I
S g F l ->
The right answer is: S G F L L
The model return: S G F L L
right
n A P -> N A P P
n S C i -> N S C I I
R H w E -> R H W E E
w T G b -> W T G B B
p v F c -> P V F C C
h r R -> H R R R
H t M P H -> H T M P H H
B F r L H -> B F R L H H
m w V n ->
The right answer is: M W V N N
The model return: M W V N N
right
S x i -> S X I I
V U X h g -> V U X H G G
d C k -> D C K K
p G g Q -> P G G Q Q
v N O E -> V N O E E
k E G f -> K E G F F
v z L v v -> V Z L V V V
m M B o -> M M B O O
h Y V ->
The right answer is: H Y V V
The model return: H Y V V
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], 8]
==========================================================================
37
**line number: 4
G N d K -> K
g t Y -> Y
a m B -> B
L o P -> P
C Q v ->
The right answer is: V
The model return: v
false
u A z -> Z
X x t -> T
g U a -> A
r s B o X -> X
G k V e z ->
The right answer is: Z
The model return: Z
right
D k e -> E
y W K -> K
k l P K X -> X
P r w -> W
n Q h x ->
The right answer is: X
The model return: Q x
false
**line number: 8
G N d K -> K
g t Y -> Y
a m B -> B
L o P -> P
A q E -> E
c k r G -> G
b l G D -> D
V f o z -> Z
C Q v ->
The right answer is: V
The model return: V
right
u A z -> Z
X x t -> T
g U a -> A
r s B o X -> X
k y o Q O -> O
R g G -> G
f P w V y -> Y
a W A x l -> L
G k V e z ->
The right answer is: Z
The model return: Z
right
D k e -> E
y W K -> K
k l P K X -> X
P r w -> W
y O Q -> Q
M k G g -> G
H l w m a -> A
b W q -> Q
n Q h x ->
The right answer is: X
The model return: X
right
B C x G -> G
X k h r -> R
U W t y p -> P
E K x -> X
x d u F a -> A
p y h G -> G
Y F T o -> O
r X h -> H
Y g U ->
The right answer is: U
The model return: U
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], 8]
==========================================================================
38
**line number: 4
G Z B K n -> G Z B K N
P U l -> P U L
S E s -> S E S
z r C -> Z R C
c Z Y ->
The right answer is: C Z Y
The model return: C Z Y
right
U W a -> U W A
b T r q -> B T R Q
m g E k c -> M G E K C
Y S t -> Y S T
f G X B g ->
The right answer is: F G X B G
The model return: F G X B G
right
n E o -> N E O
P e E N K -> P E E N K
M o M I E -> M O M I E
d S T x -> D S T X
z P o ->
The right answer is: Z P O
The model return: Z P O
right
M b r T n -> M B R T N
X N V d m -> X N V D M
T Y N m n -> T Y N M N
X T h -> X T H
v u B u O ->
The right answer is: V U B U O
The model return: v U B U O
false
Z m l f -> Z M L F
p G i A V -> P G I A V
D h S -> D H S
K L k -> K L K
R q z G X ->
The right answer is: R Q Z G X
The model return: R Q Z G X
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], 4]
==========================================================================
39
**line number: 4
5 A y -> 5 A Y
f 8 7 1 L -> F 1 7 8 L
B 8 p x -> B 8 P X
1 K 3 4 o -> 4 K 3 1 O
9 U o ->
The right answer is: 9 U O
The model return: 9 U O
right
X e 9 -> X E 9
1 y K 7 -> 7 Y K 1
A 9 3 v 8 -> A 8 3 V 9
H 6 k 8 -> H 8 K 6
k Q 0 ->
The right answer is: K Q 0
The model return: Q K 0
false
u I f 0 p -> U I F 0 P
I q z 8 e -> I Q Z 8 E
8 G c O 4 -> 4 G C O 8
8 3 z c U -> 3 8 Z C U
2 c O ->
The right answer is: 2 C O
The model return: 2 C O
right
x 0 t 2 L -> X 2 T 0 L
M 6 a c -> M 6 A C
b Q 3 -> B Q 3
b 7 s o K -> B 7 S O K
t 5 W C 6 ->
The right answer is: T 6 W C 5
The model return: T 5 W C 6
false
**line number: 8
5 A y -> 5 A Y
f 8 7 1 L -> F 1 7 8 L
B 8 p x -> B 8 P X
1 K 3 4 o -> 4 K 3 1 O
Y 4 g b 9 -> Y 9 G B 4
7 X u g Z -> 7 X U G Z
k K u t 8 -> K K U T 8
9 z R -> 9 Z R
9 U o ->
The right answer is: 9 U O
The model return: 9 U O
right
X e 9 -> X E 9
1 y K 7 -> 7 Y K 1
A 9 3 v 8 -> A 8 3 V 9
H 6 k 8 -> H 8 K 6
f 1 B O S -> F 1 B O S
e V 7 -> E V 7
7 t 7 E -> 7 T 7 E
t G 0 -> T G 0
k Q 0 ->
The right answer is: K Q 0
The model return: K Q 0
right
u I f 0 p -> U I F 0 P
I q z 8 e -> I Q Z 8 E
8 G c O 4 -> 4 G C O 8
8 3 z c U -> 3 8 Z C U
4 r M M -> 4 R M M
T r r 4 -> T R R 4
q R 1 O L -> Q R 1 O L
q n 2 h W -> Q N 2 H W
2 c O ->
The right answer is: 2 C O
The model return: 2 C O
right
x 0 t 2 L -> X 2 T 0 L
M 6 a c -> M 6 A C
b Q 3 -> B Q 3
b 7 s o K -> B 7 S O K
1 a U g 3 -> 3 A U G 1
h R 8 -> H R 8
9 V a 1 -> 1 V A 9
g 3 F -> G 3 F
t 5 W C 6 ->
The right answer is: T 6 W C 5
The model return: T 5 W C 6
false
9 Z l c s -> 9 Z L C S
3 D 0 A w -> 0 D 3 A W
9 v N -> 9 V N
O t 5 -> O T 5
W l x 4 -> W L X 4
2 e G f -> 2 E G F
F 7 e 7 -> F 7 E 7
9 c O -> 9 C O
n 8 D ->
The right answer is: N 8 D
The model return: n 8 D
false
**line number: 16
5 A y -> 5 A Y
f 8 7 1 L -> F 1 7 8 L
B 8 p x -> B 8 P X
1 K 3 4 o -> 4 K 3 1 O
Y 4 g b 9 -> Y 9 G B 4
7 X u g Z -> 7 X U G Z
k K u t 8 -> K K U T 8
9 z R -> 9 Z R
y D 8 -> Y D 8
V i 4 e n -> V I 4 E N
8 T 1 m d -> 1 T 8 M D
6 6 O f -> 6 6 O F
L U b 7 -> L U B 7
n X u t 2 -> N X U T 2
R n O 6 X -> R N O 6 X
Z 4 Y q -> Z 4 Y Q
9 U o ->
The right answer is: 9 U O
The model return: 9 U O
right
X e 9 -> X E 9
1 y K 7 -> 7 Y K 1
A 9 3 v 8 -> A 8 3 V 9
H 6 k 8 -> H 8 K 6
f 1 B O S -> F 1 B O S
e V 7 -> E V 7
7 t 7 E -> 7 T 7 E
t G 0 -> T G 0
K 8 y -> K 8 Y
4 C s -> 4 C S
X n 2 G -> X N 2 G
9 S v q -> 9 S V Q
0 P T n -> 0 P T N
1 N h V -> 1 N H V
0 y G -> 0 Y G
D a 1 U T -> D A 1 U T
k Q 0 ->
The right answer is: K Q 0
The model return: K Q 0
right
u I f 0 p -> U I F 0 P
I q z 8 e -> I Q Z 8 E
8 G c O 4 -> 4 G C O 8
8 3 z c U -> 3 8 Z C U
4 r M M -> 4 R M M
T r r 4 -> T R R 4
q R 1 O L -> Q R 1 O L
q n 2 h W -> Q N 2 H W
r 0 4 K U -> R 4 0 K U
D g 6 -> D G 6
Q 6 B w -> Q 6 B W
D v 3 V K -> D V 3 V K
p 7 Z -> P 7 Z
1 R h V r -> 1 R H V R
4 w u X -> 4 W U X
5 E P n -> 5 E P N
2 c O ->
The right answer is: 2 C O
The model return: 2 C O
right
x 0 t 2 L -> X 2 T 0 L
M 6 a c -> M 6 A C
b Q 3 -> B Q 3
b 7 s o K -> B 7 S O K
1 a U g 3 -> 3 A U G 1
h R 8 -> H R 8
9 V a 1 -> 1 V A 9
g 3 F -> G 3 F
Z 8 3 m -> Z 3 8 M
4 G y 4 -> 4 G Y 4
q A 7 1 g -> Q A 1 7 G
7 l 8 D u -> 8 L 7 D U
P 0 q A 5 -> P 5 Q A 0
o 2 G -> O 2 G
w 3 Y -> W 3 Y
D 4 y 3 4 -> D 4 Y 3 4
t 5 W C 6 ->
The right answer is: T 6 W C 5
The model return: T 5 W C 6
false
9 Z l c s -> 9 Z L C S
3 D 0 A w -> 0 D 3 A W
9 v N -> 9 V N
O t 5 -> O T 5
W l x 4 -> W L X 4
2 e G f -> 2 E G F
F 7 e 7 -> F 7 E 7
9 c O -> 9 C O
N e 1 3 -> N E 3 1
u 7 P -> U 7 P
F k 4 E -> F K 4 E
0 6 e R R -> 6 0 E R R
q M 3 -> Q M 3
G q 6 n -> G Q 6 N
4 2 A t -> 2 4 A T
g Z 8 -> G Z 8
n 8 D ->
The right answer is: N 8 D
The model return: N 8 D
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 16]
==========================================================================
40
**line number: 4
r 2 D -> 2
Q 3 Y n F -> 3
I F o 8 7 -> 8 7
7 X D a -> 7
X R H r 7 ->
The right answer is: 7
The model return: 7
right
l R 3 Z -> 3
w d 2 6 C -> 2 6
i 2 c Z -> 2
V 6 3 q -> 6 3
g G l 1 h ->
The right answer is: 1
The model return: G l 1
false
g P 7 -> 7
y 4 X -> 4
F 4 g g -> 4
p 8 H -> 8
G X 0 c ->
The right answer is: 0
The model return: 0
right
3 i e G f -> 3
6 N b -> 6
2 1 M Z r -> 2 1
t Y X 3 -> 3
8 S b ->
The right answer is: 8
The model return: 8
right
w b A 0 -> 0
s c a 0 E -> 0
r 5 H m m -> 5
3 Y k -> 3
G C u B 3 ->
The right answer is: 3
The model return: 3
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], 4]
==========================================================================
41
**line number: 4
X h T -> X T
K l D O -> K O
v I u p L -> V L
H p b -> H B
t M G ->
The right answer is: T G
The model return: T G
right
w f G d g -> W G
N G l v C -> N C
w Z g d -> W D
c c G -> C G
i U V ->
The right answer is: I V
The model return: U V
false
Z L w R -> Z R
T Z R F n -> T N
O g D x B -> O B
g r R R y -> G Y
R h H C o ->
The right answer is: R O
The model return: R C
false
**line number: 8
X h T -> X T
K l D O -> K O
v I u p L -> V L
H p b -> H B
K q v v -> K V
g q Z -> G Z
e C m -> E M
k M d q -> K Q
t M G ->
The right answer is: T G
The model return: T G
right
w f G d g -> W G
N G l v C -> N C
w Z g d -> W D
c c G -> C G
x g G G -> X G
s R y b f -> S F
k m s M -> K M
U a i -> U I
i U V ->
The right answer is: I V
The model return: I V
right
Z L w R -> Z R
T Z R F n -> T N
O g D x B -> O B
g r R R y -> G Y
u Y X d -> U D
R A S u -> R U
g s n A -> G A
O O E c -> O C
R h H C o ->
The right answer is: R O
The model return: R C
false
L H c v -> L V
c p e M r -> C R
E G u M -> E M
L K i X -> L X
v F r g x -> V X
U b Y Z -> U Z
G W T a Y -> G Y
c R C -> C C
G f N ->
The right answer is: G N
The model return: G N
right
D A y W -> D W
G l x -> G X
B v G g C -> B C
I E H C g -> I G
H y L K -> H K
Q C g Z -> Q Z
L z O -> L O
P K R p g -> P G
O r m y ->
The right answer is: O Y
The model return: O M
false
**line number: 16
X h T -> X T
K l D O -> K O
v I u p L -> V L
H p b -> H B
K q v v -> K V
g q Z -> G Z
e C m -> E M
k M d q -> K Q
t C i b -> T B
v N i -> V I
T w y -> T Y
s d Y -> S Y
x d E -> X E
f e G -> F G
e e K -> E K
Y n r D f -> Y F
t M G ->
The right answer is: T G
The model return: T G
right
w f G d g -> W G
N G l v C -> N C
w Z g d -> W D
c c G -> C G
x g G G -> X G
s R y b f -> S F
k m s M -> K M
U a i -> U I
s G A -> S A
q B C M -> Q M
N C p -> N P
t Z M -> T M
b P r t G -> B G
r U l -> R L
Z i P N -> Z N
B y f y x -> B X
i U V ->
The right answer is: I V
The model return: I V
right
Z L w R -> Z R
T Z R F n -> T N
O g D x B -> O B
g r R R y -> G Y
u Y X d -> U D
R A S u -> R U
g s n A -> G A
O O E c -> O C
f T W v -> F V
p V g g -> P G
w Q c u w -> W W
N R s g -> N G
g x f F y -> G Y
v H Q -> V Q
M G x G n -> M N
m z b C K -> M K
R h H C o ->
The right answer is: R O
The model return: R O
right
L H c v -> L V
c p e M r -> C R
E G u M -> E M
L K i X -> L X
v F r g x -> V X
U b Y Z -> U Z
G W T a Y -> G Y
c R C -> C C
x c h A K -> X K
g L b H -> G H
d u n P g -> D G
k M G -> K G
C x n t -> C T
h q l A -> H A
O x n P F -> O F
S U B e -> S E
G f N ->
The right answer is: G N
The model return: G N
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], 16]
==========================================================================
42
**line number: 4
I g X V -> I I G X V V
y i W B -> Y Y I W B B
E g F c -> E E G F C C
q I M u -> Q Q I M U U
h G x g A ->
The right answer is: H H G X G A A
The model return: H H G X G A A
right
d t R Q -> D D T R Q Q
P E G s O -> P P E G S O O
x v o Q -> X X V O Q Q
X u l -> X X U L L
p N h p r ->
The right answer is: P P N H P R R
The model return: P N H P R R
false
E U H F k -> E E U H F K K
S n B -> S S N B B
t g C -> T T G C C
y m V -> Y Y M V V
y G G Z d ->
The right answer is: Y Y G G Z D D
The model return: Y Y G G Z D
false
**line number: 8
I g X V -> I I G X V V
y i W B -> Y Y I W B B
E g F c -> E E G F C C
q I M u -> Q Q I M U U
x R G G -> X X R G G G
h Q d l -> H H Q D L L
E f a -> E E F A A
S H H y -> S S H H Y Y
h G x g A ->
The right answer is: H H G X G A A
The model return: H H G X G A A
right
d t R Q -> D D T R Q Q
P E G s O -> P P E G S O O
x v o Q -> X X V O Q Q
X u l -> X X U L L
R F c t -> R R F C T T
x t r S -> X X T R S S
v H O -> V V H O O
S Y h -> S S Y H H
p N h p r ->
The right answer is: P P N H P R R
The model return: P P N H P R R
right
E U H F k -> E E U H F K K
S n B -> S S N B B
t g C -> T T G C C
y m V -> Y Y M V V
d X v -> D D X V V
d p X y a -> D D P X Y A A
u R P W L -> U U R P W L L
y G D M -> Y Y G D M M
y G G Z d ->
The right answer is: Y Y G G Z D D
The model return: Y Y G G Z D D
right
s F S -> S S F S S
d b U m s -> D D B U M S S
N n l u -> N N N L U U
w G U -> W W G U U
E D Z x O -> E E D Z X O O
r G P y o -> R R G P Y O O
T y l -> T T Y L L
I m L -> I I M L L
W V o e T ->
The right answer is: W W V O E T T
The model return: W W V O E T T
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], 8]
==========================================================================
43
**line number: 4
L e l v -> 2
a S W q -> 2
f P O -> 2
T k C -> 2
t C Q r c ->
The right answer is: 2
The model return: 2
right
N G a P -> 2
L S t F M -> 2
w G m p Q -> 2
c V R t -> 2
m S n u ->
The right answer is: 2
The model return: 2
right
z r O b W -> 2
D o G X V -> 2
z A H L -> 2
q G X k w -> 2
i z R I g ->
The right answer is: 2
The model return: 2
right
k y X w L -> 2
D U x -> 2
O n p i n -> 2
u R F -> 2
f P r Q b ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], 4]
==========================================================================
44
**line number: 4
w 3 G -> W 4 G
0 X z -> 1 X Z
w 6 r X -> W 7 R X
z 9 R -> Z 10 R
c B c 5 ->
The right answer is: C B C 6
The model return: c B c 6
false
2 y G -> 3 Y G
6 b V -> 7 B V
H 1 H X o -> H 2 H X O
p 0 4 Z -> P 1 4 Z
T 5 u 5 0 ->
The right answer is: T 6 U 5 0
The model return: T 6 u 5 0
false
**line number: 8
w 3 G -> W 4 G
0 X z -> 1 X Z
w 6 r X -> W 7 R X
z 9 R -> Z 10 R
4 7 k L -> 5 7 K L
6 f X -> 7 F X
P p 1 -> P P 2
9 a Y 1 -> 10 A Y 1
c B c 5 ->
The right answer is: C B C 6
The model return: d B D 5
false
2 y G -> 3 Y G
6 b V -> 7 B V
H 1 H X o -> H 2 H X O
p 0 4 Z -> P 1 4 Z
Z t 3 W -> Z T 4 W
z 4 N -> Z 5 N
2 e Y -> 3 E Y
O 8 1 v -> O 9 1 V
T 5 u 5 0 ->
The right answer is: T 6 U 5 0
The model return: T 6 u 5 0
false
**line number: 16
w 3 G -> W 4 G
0 X z -> 1 X Z
w 6 r X -> W 7 R X
z 9 R -> Z 10 R
4 7 k L -> 5 7 K L
6 f X -> 7 F X
P p 1 -> P P 2
9 a Y 1 -> 10 A Y 1
S e 2 K -> S E 3 K
n 4 G -> N 5 G
U 9 L n -> U 10 L N
N z 8 -> N Z 9
5 f L Q Y -> 6 F L Q Y
L k 8 -> L K 9
t 5 V 0 -> T 6 V 0
g p 1 F -> G P 2 F
c B c 5 ->
The right answer is: C B C 6
The model return: C B C 6
right
2 y G -> 3 Y G
6 b V -> 7 B V
H 1 H X o -> H 2 H X O
p 0 4 Z -> P 1 4 Z
Z t 3 W -> Z T 4 W
z 4 N -> Z 5 N
2 e Y -> 3 E Y
O 8 1 v -> O 9 1 V
6 g k P 5 -> 7 G K P 5
9 R n v K -> 10 R N V K
t 9 K 0 -> T 10 K 0
4 X u -> 5 X U
4 g 2 C -> 5 G 2 C
U 5 r p -> U 6 R P
c Q y 7 -> C Q Y 8
c 2 X -> C 3 X
T 5 u 5 0 ->
The right answer is: T 6 U 5 0
The model return: T 6 U 5 0
right
b l b Y 1 -> B L B Y 2
n 4 7 L -> N 5 7 L
n 8 A Y -> N 9 A Y
5 u K -> 6 U K
a 6 e G k -> A 7 E G K
p P 9 -> P P 10
r r 5 F f -> R R 6 F F
9 g v U -> 10 G V U
2 n 9 Q g -> 3 N 9 Q G
2 6 l z G -> 3 6 L Z G
4 B y -> 5 B Y
e 0 S -> E 1 S
4 T L c -> 5 T L C
S 3 x -> S 4 X
T n G 3 -> T N G 4
G G 0 m o -> G G 1 M O
A 7 h 3 Q ->
The right answer is: A 8 H 3 Q
The model return: A 8 H 3 Q
right
w k 1 o L -> W K 2 O L
F e G M 3 -> F E G M 4
3 A s -> 4 A S
2 d G -> 3 D G
u N A 4 -> U N A 5
6 6 I n -> 7 6 I N
X 0 h -> X 1 H
W d 2 -> W D 3
W o 5 z -> W O 6 Z
A a 3 R h -> A A 4 R H
h C 9 -> H C 10
2 B l 6 M -> 3 B L 6 M
2 U s -> 3 U S
k 7 F -> K 8 F
7 0 u z G -> 8 0 U Z G
q Y 6 -> Q Y 7
v 3 F ->
The right answer is: V 4 F
The model return: V 4 F
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], 16]
==========================================================================
45
**line number: 4
d L 6 x -> D L 6 6 X
2 R y -> 2 2 R Y
i s 0 Q -> I S 0 0 Q
k N q 2 t -> K N Q 2 2 T
F E 3 b ->
The right answer is: F E 3 3 B
The model return: F E 3 3 B
right
A v 1 3 -> A V 1 1 3
s 1 K w 2 -> S 1 1 K W 2
B c v 0 -> B C V 0 0
V 3 s -> V 3 3 S
B R 4 q ->
The right answer is: B R 4 4 Q
The model return: B R 4 4 Q
right
k 6 B 7 -> K 6 6 B 7
x K 3 3 -> X K 3 3 3
8 P l -> 8 8 P L
b 4 P N -> B 4 4 P N
4 S 0 q ->
The right answer is: 4 4 S 0 Q
The model return: 4 4 S 0 Q
right
4 R 3 c 0 -> 4 4 R 3 C 0
4 V n -> 4 4 V N
b 3 2 D -> B 3 3 2 D
t C k g 5 -> T C K G 5 5
2 o 3 U ->
The right answer is: 2 2 O 3 U
The model return: 2 O 3 U
false
c 7 g D 6 -> C 7 7 G D 6
6 h B V S -> 6 6 H B V S
y 1 C T 8 -> Y 1 1 C T 8
p U 2 -> P U 2 2
3 9 I 6 a ->
The right answer is: 3 3 9 I 6 A
The model return: 3 9 I 6 a
false
**line number: 8
d L 6 x -> D L 6 6 X
2 R y -> 2 2 R Y
i s 0 Q -> I S 0 0 Q
k N q 2 t -> K N Q 2 2 T
8 I h -> 8 8 I H
U 6 g w X -> U 6 6 G W X
T Y 9 m -> T Y 9 9 M
W d 1 3 -> W D 1 1 3
F E 3 b ->
The right answer is: F E 3 3 B
The model return: F E 3 3 B
right
A v 1 3 -> A V 1 1 3
s 1 K w 2 -> S 1 1 K W 2
B c v 0 -> B C V 0 0
V 3 s -> V 3 3 S
s G 2 -> S G 2 2
9 M m 6 K -> 9 9 M M 6 K
v 2 R -> V 2 2 R
m 0 Y D -> M 0 0 Y D
B R 4 q ->
The right answer is: B R 4 4 Q
The model return: B B R 4 Q
false
k 6 B 7 -> K 6 6 B 7
x K 3 3 -> X K 3 3 3
8 P l -> 8 8 P L
b 4 P N -> B 4 4 P N
t 9 I f i -> T 9 9 I F I
8 N 6 o D -> 8 8 N 6 O D
R 3 V 7 a -> R 3 3 V 7 A
R L l x 6 -> R L L X 6 6
4 S 0 q ->
The right answer is: 4 4 S 0 Q
The model return: 4 4 S 0 Q
right
4 R 3 c 0 -> 4 4 R 3 C 0
4 V n -> 4 4 V N
b 3 2 D -> B 3 3 2 D
t C k g 5 -> T C K G 5 5
q V 7 -> Q V 7 7
g R 8 -> G R 8 8
v W g 7 g -> V W G 7 7 G
H q 6 d 4 -> H Q 6 6 D 4
2 o 3 U ->
The right answer is: 2 2 O 3 U
The model return: 2 O 3 U
false
**line number: 16
d L 6 x -> D L 6 6 X
2 R y -> 2 2 R Y
i s 0 Q -> I S 0 0 Q
k N q 2 t -> K N Q 2 2 T
8 I h -> 8 8 I H
U 6 g w X -> U 6 6 G W X
T Y 9 m -> T Y 9 9 M
W d 1 3 -> W D 1 1 3
7 g o N -> 7 7 G O N
p U I 3 -> P U I 3 3
B C k C 9 -> B C K C 9 9
4 E p 7 -> 4 4 E P 7
R 6 8 h -> R 6 6 8 H
2 0 1 w G -> 2 2 0 1 W G
s 0 A -> S 0 0 A
S l p 2 -> S L P 2 2
F E 3 b ->
The right answer is: F E 3 3 B
The model return: F E 3 3 B
right
A v 1 3 -> A V 1 1 3
s 1 K w 2 -> S 1 1 K W 2
B c v 0 -> B C V 0 0
V 3 s -> V 3 3 S
s G 2 -> S G 2 2
9 M m 6 K -> 9 9 M M 6 K
v 2 R -> V 2 2 R
m 0 Y D -> M 0 0 Y D
3 V H M o -> 3 3 V H M O
x 1 O -> X 1 1 O
7 P p 9 G -> 7 7 P P 9 G
H Z c 6 -> H Z C 6 6
5 E s H Y -> 5 5 E S H Y
d 2 i P p -> D 2 2 I P P
c h 5 T 0 -> C H 5 5 T 0
L g 0 -> L G 0 0
B R 4 q ->
The right answer is: B R 4 4 Q
The model return: B R 4 4 Q
right
k 6 B 7 -> K 6 6 B 7
x K 3 3 -> X K 3 3 3
8 P l -> 8 8 P L
b 4 P N -> B 4 4 P N
t 9 I f i -> T 9 9 I F I
8 N 6 o D -> 8 8 N 6 O D
R 3 V 7 a -> R 3 3 V 7 A
R L l x 6 -> R L L X 6 6
R g 8 o m -> R G 8 8 O M
b 1 N -> B 1 1 N
4 v O o 0 -> 4 4 V O O 0
9 s I -> 9 9 S I
E a U 7 -> E A U 7 7
D 6 u f -> D 6 6 U F
c 2 P 3 7 -> C 2 2 P 3 7
f M d 9 9 -> F M D 9 9 9
4 S 0 q ->
The right answer is: 4 4 S 0 Q
The model return: 4 4 S 0 Q
right
4 R 3 c 0 -> 4 4 R 3 C 0
4 V n -> 4 4 V N
b 3 2 D -> B 3 3 2 D
t C k g 5 -> T C K G 5 5
q V 7 -> Q V 7 7
g R 8 -> G R 8 8
v W g 7 g -> V W G 7 7 G
H q 6 d 4 -> H Q 6 6 D 4
c 2 W -> C 2 2 W
6 T r -> 6 6 T R
h S 7 -> H S 7 7
3 g A -> 3 3 G A
i n 8 F -> I N 8 8 F
g Y 5 D -> G Y 5 5 D
i 5 V -> I 5 5 V
z 1 9 E -> Z 1 1 9 E
2 o 3 U ->
The right answer is: 2 2 O 3 U
The model return: 2 2 O 3 U
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 16]
==========================================================================
46
**line number: 4
d 7 H -> 7
C q 6 -> 6
0 P h 0 -> 0
d N 6 -> 6
o b 0 t R ->
The right answer is: 0
The model return: 0
right
q 8 K -> 8
4 u 9 1 I -> 4
9 S m -> 9
9 w 8 C 8 -> 9
M d U 2 ->
The right answer is: 2
The model return: M
false
5 g A -> 5
X q 1 4 z -> 1
5 V K d -> 5
Q 8 r -> 8
d U 7 I a ->
The right answer is: 7
The model return: 7
right
v v p 5 B -> 5
H 5 2 x -> 5
a Y 7 -> 7
W 5 b 6 -> 5
w 4 f 4 X ->
The right answer is: 4
The model return: 4
right
r 7 D -> 7
g l E 2 -> 2
c 1 S U R -> 1
9 5 2 I r -> 9
O 9 t ->
The right answer is: 9
The model return: 9
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 4]
==========================================================================
47
**line number: 4
X z 1 -> X Z 1 1
W a p 3 -> W A P 3 3
7 h 1 S -> 7 H 1 1 S
K l 0 Q -> K L 0 0 Q
0 9 b U ->
The right answer is: 0 9 9 B U
The model return: 0 9 B U
false
1 0 T 1 s -> 1 0 T 1 1 S
Q p 9 v -> Q P 9 9 V
z 9 Y -> Z 9 9 Y
w R c 3 -> W R C 3 3
9 g G A T ->
The right answer is: 9 9 G G A T
The model return: 9 G G A T
false
**line number: 8
X z 1 -> X Z 1 1
W a p 3 -> W A P 3 3
7 h 1 S -> 7 H 1 1 S
K l 0 Q -> K L 0 0 Q
1 g U -> 1 1 G U
V 9 u 1 i -> V 9 U 1 1 I
k B W 0 -> K B W 0 0
2 t P X X -> 2 2 T P X X
0 9 b U ->
The right answer is: 0 9 9 B U
The model return: 0 9 B U
false
1 0 T 1 s -> 1 0 T 1 1 S
Q p 9 v -> Q P 9 9 V
z 9 Y -> Z 9 9 Y
w R c 3 -> W R C 3 3
7 W w -> 7 7 W W
G g 5 G -> G G 5 5 G
z U C 7 -> Z U C 7 7
G q 0 -> G Q 0 0
9 g G A T ->
The right answer is: 9 9 G G A T
The model return: 9 G G A T
false
**line number: 16
X z 1 -> X Z 1 1
W a p 3 -> W A P 3 3
7 h 1 S -> 7 H 1 1 S
K l 0 Q -> K L 0 0 Q
1 g U -> 1 1 G U
V 9 u 1 i -> V 9 U 1 1 I
k B W 0 -> K B W 0 0
2 t P X X -> 2 2 T P X X
6 w G m -> 6 6 W G M
6 N k -> 6 6 N K
h n 4 H W -> H N 4 4 H W
i G 1 W -> I G 1 1 W
7 g Z -> 7 7 G Z
5 4 5 P d -> 5 4 5 5 P D
O u O 1 -> O U O 1 1
n G o 2 -> N G O 2 2
0 9 b U ->
The right answer is: 0 9 9 B U
The model return: 0 9 B U
false
1 0 T 1 s -> 1 0 T 1 1 S
Q p 9 v -> Q P 9 9 V
z 9 Y -> Z 9 9 Y
w R c 3 -> W R C 3 3
7 W w -> 7 7 W W
G g 5 G -> G G 5 5 G
z U C 7 -> Z U C 7 7
G q 0 -> G Q 0 0
r 5 U -> R 5 5 U
x T k m 8 -> X T K M 8 8
7 O E V s -> 7 7 O E V S
7 a H -> 7 7 A H
2 O g 0 -> 2 O G 0 0
2 9 4 Z v -> 2 9 4 4 Z V
B 1 m -> B 1 1 M
A v A 2 X -> A V A 2 2 X
9 g G A T ->
The right answer is: 9 9 G G A T
The model return: 9 9 G G A T
right
1 1 i C -> 1 1 1 I C
1 6 b N -> 1 6 6 B N
6 Z p -> 6 6 Z P
2 o L 1 -> 2 O L 1 1
E 2 0 g -> E 2 0 0 G
a 6 G e -> A 6 6 G E
n P 4 -> N P 4 4
7 Z q 2 -> 7 Z Q 2 2
Z 4 k -> Z 4 4 K
5 1 Q o -> 5 1 1 Q O
w E 7 R p -> W E 7 7 R P
7 n V U -> 7 7 N V U
T 1 u -> T 1 1 U
Q g 6 -> Q G 6 6
B 7 6 m -> B 7 6 6 M
1 z G -> 1 1 Z G
Z 6 0 x H ->
The right answer is: Z 6 0 0 X H
The model return: Z 6 0 0 X H
right
8 t C P -> 8 8 T C P
N M x 9 9 -> N M X 9 9 9
z 5 d I -> Z 5 5 D I
p E 8 -> P E 8 8
Z 1 6 w 7 -> Z 1 6 W 7 7
3 e t O -> 3 3 E T O
y v B K 5 -> Y V B K 5 5
6 n T -> 6 6 N T
0 x a h X -> 0 0 X A H X
i Y z 5 -> I Y Z 5 5
R B x 6 -> R B X 6 6
w V S 7 -> W V S 7 7
a O 5 x 4 -> A O 5 X 4 4
q X 2 7 -> Q X 2 7 7
U x 7 U V -> U X 7 7 U V
9 z O G -> 9 9 Z O G
2 t G ->
The right answer is: 2 2 T G
The model return: 2 2 T G
right
f 0 e y T -> F 0 0 E Y T
9 w I -> 9 9 W I
H m 3 N -> H M 3 3 N
W d 1 3 -> W D 1 3 3
2 q C -> 2 2 Q C
v 6 E -> V 6 6 E
k w Y 5 a -> K W Y 5 5 A
g 7 z 9 U -> G 7 Z 9 9 U
G 5 g p -> G 5 5 G P
m O 4 -> M O 4 4
c 6 F -> C 6 6 F
a C 5 -> A C 5 5
l T 7 -> L T 7 7
I b 1 q -> I B 1 1 Q
7 a S O -> 7 7 A S O
p P 8 -> P P 8 8
D 1 0 m ->
The right answer is: D 1 0 0 M
The model return: D 1 0 1 M
false
**line number: 32
X z 1 -> X Z 1 1
W a p 3 -> W A P 3 3
7 h 1 S -> 7 H 1 1 S
K l 0 Q -> K L 0 0 Q
1 g U -> 1 1 G U
V 9 u 1 i -> V 9 U 1 1 I
k B W 0 -> K B W 0 0
2 t P X X -> 2 2 T P X X
6 w G m -> 6 6 W G M
6 N k -> 6 6 N K
h n 4 H W -> H N 4 4 H W
i G 1 W -> I G 1 1 W
7 g Z -> 7 7 G Z
5 4 5 P d -> 5 4 5 5 P D
O u O 1 -> O U O 1 1
n G o 2 -> N G O 2 2
U 7 t 2 7 -> U 7 T 2 7 7
u 7 Y m -> U 7 7 Y M
C 0 k -> C 0 0 K
u 4 B -> U 4 4 B
8 s Y -> 8 8 S Y
3 y D -> 3 3 Y D
V 4 7 a -> V 4 7 7 A
4 3 E x -> 4 3 3 E X
R g 8 -> R G 8 8
S d r N 2 -> S D R N 2 2
9 G g -> 9 9 G G
v 4 2 M -> V 4 2 2 M
3 6 G 1 m -> 3 6 G 1 1 M
v 2 R -> V 2 2 R
V 7 v e -> V 7 7 V E
d Q S 0 e -> D Q S 0 0 E
0 9 b U ->
The right answer is: 0 9 9 B U
The model return: 0 9 B U
false
1 0 T 1 s -> 1 0 T 1 1 S
Q p 9 v -> Q P 9 9 V
z 9 Y -> Z 9 9 Y
w R c 3 -> W R C 3 3
7 W w -> 7 7 W W
G g 5 G -> G G 5 5 G
z U C 7 -> Z U C 7 7
G q 0 -> G Q 0 0
r 5 U -> R 5 5 U
x T k m 8 -> X T K M 8 8
7 O E V s -> 7 7 O E V S
7 a H -> 7 7 A H
2 O g 0 -> 2 O G 0 0
2 9 4 Z v -> 2 9 4 4 Z V
B 1 m -> B 1 1 M
A v A 2 X -> A V A 2 2 X
5 c G I t -> 5 5 C G I T
6 4 b 1 F -> 6 4 B 1 1 F
e N 4 S -> E N 4 4 S
z 6 I 9 -> Z 6 I 9 9
f 2 c y P -> F 2 2 C Y P
9 S k -> 9 9 S K
g 8 2 S K -> G 8 2 2 S K
c u D 2 -> C U D 2 2
6 W F o -> 6 6 W F O
U 7 3 X g -> U 7 3 3 X G
Y s C 2 8 -> Y S C 2 8 8
v 8 Z 2 -> V 8 Z 2 2
k W G 4 -> K W G 4 4
C A 1 o H -> C A 1 1 O H
C 6 G N s -> C 6 6 G N S
n 9 W -> N 9 9 W
9 g G A T ->
The right answer is: 9 9 G G A T
The model return: 9 9 G A T
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], -1]
==========================================================================
48
**line number: 4
g M K B D -> G G M K B D
U D s X -> U U D S X
I e M -> I I E M
S k o -> S S K O
p y l Y ->
The right answer is: P P Y L Y
The model return: P P Y L
false
K k F G -> K K K F G
X K k k x -> X X K K K X
k l T -> K K L T
x u k Z l -> X X U K Z L
M K t L ->
The right answer is: M M K T L
The model return: M M K L
false
**line number: 8
g M K B D -> G G M K B D
U D s X -> U U D S X
I e M -> I I E M
S k o -> S S K O
u B o M H -> U U B O M H
h L E I m -> H H L E I M
W f c -> W W F C
L L v q S -> L L L V Q S
p y l Y ->
The right answer is: P P Y L Y
The model return: P P Y L Y
right
K k F G -> K K K F G
X K k k x -> X X K K K X
k l T -> K K L T
x u k Z l -> X X U K Z L
m I D -> M M I D
y q N y Q -> Y Y Q N Y Q
v Y D -> V V Y D
g G d -> G G G D
M K t L ->
The right answer is: M M K T L
The model return: M M K L
false
E e t M g -> E E E T M G
Y k q -> Y Y K Q
W L N e -> W W L N E
b Z c z u -> B B Z C Z U
B B q z k -> B B B Q Z K
G q R H U -> G G Q R H U
L B u -> L L B U
y c Z -> Y Y C Z
c d l M ->
The right answer is: C C D L M
The model return: C C D L M
right
T P V P g -> T T P V P G
G S x p v -> G G S X P V
q e d I -> Q Q E D I
C n e E p -> C C N E E P
Q I X L v -> Q Q I X L V
z d q F -> Z Z D Q F
L r g -> L L R G
r g g w F -> R R G G W F
n r O ->
The right answer is: N N R O
The model return: N N R O
right
I E x l -> I I E X L
B W h G -> B B W H G
u p L -> U U P L
I h c -> I I H C
G u V -> G G U V
G b h u -> G G B H U
X W c -> X X W C
s B t y -> S S B T Y
e F n p ->
The right answer is: E E F N P
The model return: E E F N P
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], 8]
==========================================================================
49
**line number: 4
E T t P -> E
g G F V E -> G
Y t c u n -> Y
S p O O -> S
U a h ->
The right answer is: U
The model return: U
right
y o O K q -> Y
P g b -> P
y h L -> Y
I G z a -> I
w g B l ->
The right answer is: W
The model return: W
right
l q g E c -> L
S r M -> S
R c t -> R
D i l -> D
c S V f e ->
The right answer is: C
The model return: S
false
F D d F -> F
Y u o e a -> Y
G l i -> G
g C H I N -> G
S p n ->
The right answer is: S
The model return: S
right
u t E -> U
O R C Y m -> O
U S e -> U
y y x A -> Y
q L g ->
The right answer is: Q
The model return: L
false
**line number: 8
E T t P -> E
g G F V E -> G
Y t c u n -> Y
S p O O -> S
w h f V q -> W
M O h -> M
u y p P -> U
U Y m A U -> U
U a h ->
The right answer is: U
The model return: U
right
y o O K q -> Y
P g b -> P
y h L -> Y
I G z a -> I
B Q u -> B
f G i -> F
z F y -> Z
i U B -> I
w g B l ->
The right answer is: W
The model return: W
right
l q g E c -> L
S r M -> S
R c t -> R
D i l -> D
E a Q -> E
f c x B D -> F
H G r -> H
S w g -> S
c S V f e ->
The right answer is: C
The model return: C
right
F D d F -> F
Y u o e a -> Y
G l i -> G
g C H I N -> G
K z U l a -> K
V C b Z L -> V
Q f q I K -> Q
E P o -> E
S p n ->
The right answer is: S
The model return: S
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], 8]
==========================================================================
50
**line number: 4
M i s -> m m i s
G x R N -> g g x r n
s V S -> s s v s
L t Z a -> l l t z a
G E R t F ->
The right answer is: g g e r t f
The model return: g g e r t f
right
y W Y o -> y y w y o
D P x X -> d d p x x
P X m L -> p p x m l
F K G t -> f f k g t
M k L P d ->
The right answer is: m m k l p d
The model return: m m k l p d
right
R h n -> r r h n
L m o -> l l m o
G e y -> g g e y
f E W R -> f f e w r
T S T e ->
The right answer is: t t s t e
The model return: t t s t e
right
N T w -> n n t w
G Q x R -> g g q x r
L w d p -> l l w d p
Y p y -> y y p y
X r D F U ->
The right answer is: x x r d f u
The model return: x x r D F U
false
n r Y S -> n n r y s
A w v -> a a w v
x D u -> x x d u
v b Z -> v v b z
r Z G f G ->
The right answer is: r r z g f g
The model return: r r z g f g
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], 4]
==========================================================================
51
**line number: 4
r n X P s -> r
m z N u -> m
r B N B -> r
F h X -> f
C b O ->
The right answer is: c
The model return: c
right
e D W g -> e
Y t z -> y
f W y t g -> f
e L x -> e
H q F P ->
The right answer is: h
The model return: H
false
n g C L I -> n
g W o -> g
w A w -> w
g l Q -> g
H Z V W s ->
The right answer is: h
The model return: H
false
**line number: 8
r n X P s -> r
m z N u -> m
r B N B -> r
F h X -> f
R K T g y -> r
r G O V -> r
x f h C -> x
p w T r l -> p
C b O ->
The right answer is: c
The model return: c
right
e D W g -> e
Y t z -> y
f W y t g -> f
e L x -> e
V G O g -> v
x O a G -> x
E z y n H -> e
i R D -> i
H q F P ->
The right answer is: h
The model return: h
right
n g C L I -> n
g W o -> g
w A w -> w
g l Q -> g
y h T -> y
S o g X -> s
I P r -> i
G c D -> g
H Z V W s ->
The right answer is: h
The model return: h
right
M I k G -> m
G v o X -> g
r a u H -> r
q U g u B -> q
H d I -> h
C F v -> c
c x B -> c
g b F -> g
V e c ->
The right answer is: v
The model return: v
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], 8]
==========================================================================
52
**line number: 4
S Y v -> y v
f c U -> c u
I D y Q A -> d y q a
K c Y m Y -> c y m y
R V A g V ->
The right answer is: v a g v
The model return: v a g
false
x G T c T -> g t c t
M i o a -> i o a
N q X X C -> q x x c
r W x -> w x
z w K f A ->
The right answer is: w k f a
The model return: w k f a
right
w c l F -> c l f
r P C K T -> p c k t
Y G x E d -> g x e d
k z Y -> z y
O n T c d ->
The right answer is: n t c d
The model return: n t c d
right
f q R m O -> q r m o
p K p -> k p
L d l b -> d l b
x G N t P -> g n t p
B m w ->
The right answer is: m w
The model return: m w
right
Q i G k -> i g k
K g T -> g t
D z G -> z g
a D X K -> d x k
Z m W ->
The right answer is: m w
The model return: m w
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], 4]
==========================================================================
53
**line number: 4
Y g c r a -> y g c r b
M x l l y -> m x l l z
A E r D -> a e r e
Q P o -> q p p
y w f G P ->
The right answer is: y w f g q
The model return: y w f G R
false
V o C M B -> v o c m c
Y M h g -> y m h h
q i f c S -> q i f c t
x X S -> x x t
Y t D ->
The right answer is: y t e
The model return: Y t D
false
**line number: 8
Y g c r a -> y g c r b
M x l l y -> m x l l z
A E r D -> a e r e
Q P o -> q p p
y K l A -> y k l b
O R d -> o r e
W M R h -> w m r i
n g O A f -> n g o a g
y w f G P ->
The right answer is: y w f g q
The model return: y w f g p
false
V o C M B -> v o c m c
Y M h g -> y m h h
q i f c S -> q i f c t
x X S -> x x t
r Q F I Y -> r q f i z
Z A g G -> z a g h
a E k -> a e l
P L s Q f -> p l s q g
Y t D ->
The right answer is: y t e
The model return: y t e
right
T l V i -> t l v j
X L G v -> x l g w
k F S -> k f t
p F T -> p f u
u A g z I -> u a g z j
i P S D -> i p s e
c L z -> c l a
w y G h k -> w y g h l
H z o ->
The right answer is: h z p
The model return: H z n
false
**line number: 16
Y g c r a -> y g c r b
M x l l y -> m x l l z
A E r D -> a e r e
Q P o -> q p p
y K l A -> y k l b
O R d -> o r e
W M R h -> w m r i
n g O A f -> n g o a g
P e H -> p e i
M B u -> m b v
I R W Y r -> i r w y s
r v G t -> r v g u
S l S -> s l t
k E g p c -> k e g p d
t Z e -> t z f
x U G x -> x u g y
y w f G P ->
The right answer is: y w f g q
The model return: y w f g q
right
V o C M B -> v o c m c
Y M h g -> y m h h
q i f c S -> q i f c t
x X S -> x x t
r Q F I Y -> r q f i z
Z A g G -> z a g h
a E k -> a e l
P L s Q f -> p l s q g
g i B -> g i c
t o M S -> t o m t
f l s F M -> f l s f n
g a h E -> g a h f
k w T -> k w u
G F q -> g f r
A U o -> a u p
i G x V -> i g x w
Y t D ->
The right answer is: y t e
The model return: i t e
false
T l V i -> t l v j
X L G v -> x l g w
k F S -> k f t
p F T -> p f u
u A g z I -> u a g z j
i P S D -> i p s e
c L z -> c l a
w y G h k -> w y g h l
L t W B -> l t w c
t t F -> t t g
X m X A Y -> x m x a z
E r C -> e r d
C G P Z n -> c g p z o
Q X i D -> q x i e
l b q M -> l b q n
m T T -> m t u
H z o ->
The right answer is: h z p
The model return: h z o -> h z o -> h z
false
**line number: 32
Y g c r a -> y g c r b
M x l l y -> m x l l z
A E r D -> a e r e
Q P o -> q p p
y K l A -> y k l b
O R d -> o r e
W M R h -> w m r i
n g O A f -> n g o a g
P e H -> p e i
M B u -> m b v
I R W Y r -> i r w y s
r v G t -> r v g u
S l S -> s l t
k E g p c -> k e g p d
t Z e -> t z f
x U G x -> x u g y
p C d -> p c e
y K L -> y k m
u o H p -> u o h q
v p K -> v p l
l G t I -> l g t j
w K R T K -> w k r t l
U Z H h -> u z h i
M i g Y -> m i g z
A p F p A -> a p f p b
V f T -> v f u
F e z -> f e a
E g q z H -> e g q z i
v c K -> v c l
W H X h G -> w h x h h
F A g -> f a h
P N y L -> p n y m
y w f G P ->
The right answer is: y w f g q
The model return: y w f g q
right
V o C M B -> v o c m c
Y M h g -> y m h h
q i f c S -> q i f c t
x X S -> x x t
r Q F I Y -> r q f i z
Z A g G -> z a g h
a E k -> a e l
P L s Q f -> p l s q g
g i B -> g i c
t o M S -> t o m t
f l s F M -> f l s f n
g a h E -> g a h f
k w T -> k w u
G F q -> g f r
A U o -> a u p
i G x V -> i g x w
L a T -> l a u
n I s R S -> n i s r t
R k A -> r k b
k m d A -> k m d b
w B Y -> w b z
e w k N q -> e w k n r
i c K l l -> i c k l m
R L f -> r l g
h M U x r -> h m u x s
t w u F Q -> t w u f r
I a m -> i a n
c U b Z -> c u b a
x I n d g -> x i n d h
Q t k -> q t l
H v h w -> h v h x
B U c -> b u d
Y t D ->
The right answer is: y t e
The model return: y t e
right
T l V i -> t l v j
X L G v -> x l g w
k F S -> k f t
p F T -> p f u
u A g z I -> u a g z j
i P S D -> i p s e
c L z -> c l a
w y G h k -> w y g h l
L t W B -> l t w c
t t F -> t t g
X m X A Y -> x m x a z
E r C -> e r d
C G P Z n -> c g p z o
Q X i D -> q x i e
l b q M -> l b q n
m T T -> m t u
g O P A -> g o p b
w F r c -> w f r d
t U I u N -> t u i u o
N d k a -> n d k b
y w H w -> y w h x
W x K -> w x l
T h T -> t h u
V k T -> v k u
o W b -> o w c
c L Z -> c l a
T a T i -> t a t j
Y u K -> y u l
t h z H -> t h z i
G V q -> g v r
w e O -> w e p
C c l g r -> c c l g s
H z o ->
The right answer is: h z p
The model return: h z p
right
R L F p -> r l f q
M C u o p -> m c u o q
c m N K -> c m n l
u o E W -> u o e x
q z I -> q z j
s W R -> s w s
q l G k -> q l g l
g G h -> g g i
g o n C v -> g o n c w
X n t -> x n u
x v G -> x v h
V k Q k -> v k q l
n Z w -> n z x
K q a -> k q b
b H U -> b h v
D C a -> d c b
p E Q t -> p e q u
N Y d i -> n y d j
S u Q M X -> s u q m y
M G q M P -> m g q m q
o m H L F -> o m h l g
b f o F s -> b f o f t
v s A y -> v s a z
M d Q -> m d r
G S B R h -> g s b r i
V q x G t -> v q x g u
b p C c b -> b p c c c
v U X N H -> v u x n i
F b t K -> f b t l
x x T -> x x u
W N G w S -> w n g w t
T S b A -> t s b b
C Y K M b ->
The right answer is: c y k m c
The model return: c y k m b
false
g k G g -> g k g h
b T x -> b t y
r P W D -> r p w e
g t O -> g t p
V l T O -> v l t p
z k N -> z k o
v H V -> v h w
G O k I G -> g o k i h
f N O -> f n p
N e G o -> n e g p
G f C G P -> g f c g q
v g Y -> v g z
x b H -> x b i
Q G t Y -> q g t z
Q d R F -> q d r g
H i Q -> h i r
g X S g x -> g x s g y
i A O G -> i a o h
P v c -> p v d
c I L w -> c i l x
g m s I k -> g m s i l
I G r i K -> i g r i l
v E m R q -> v e m r r
B q L q w -> b q l q x
Z G f O g -> z g f o h
Z Z E Z w -> z z e z x
u R T -> u r u
G B n F I -> g b n f j
t O z d V -> t o z d w
e G K -> e g l
o C l t -> o c l u
o X w -> o x x
H Z k X q ->
The right answer is: h z k x r
The model return: h z k x q
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
==========================================================================
54
**line number: 4
y p C Z -> y p c z z
Y s V n -> y s v n n
F C h f y -> f c h f y y
m N L G g -> m n l g g g
h D N x M ->
The right answer is: h d n x m m
The model return: h d n x m m
right
B C r S -> b c r s s
l N I Y V -> l n i y v v
C E v B W -> c e v b w w
P N v -> p n v v
g h q F ->
The right answer is: g h q f f
The model return: g h q f
false
Q O s W -> q o s w w
R x b -> r x b b
I X W p -> i x w p p
n G P E -> n g p e e
p a O k N ->
The right answer is: p a o k n n
The model return: p a o k n
false
**line number: 8
y p C Z -> y p c z z
Y s V n -> y s v n n
F C h f y -> f c h f y y
m N L G g -> m n l g g g
z E K g Z -> z e k g z z
L A R g R -> l a r g r r
y U M n P -> y u m n p p
F b o q -> f b o q q
h D N x M ->
The right answer is: h d n x m m
The model return: h d n x m m
right
B C r S -> b c r s s
l N I Y V -> l n i y v v
C E v B W -> c e v b w w
P N v -> p n v v
Z h v x -> z h v x x
S g L -> s g l l
P D Y f A -> p d y f a a
g z E g K -> g z e g k k
g h q F ->
The right answer is: g h q f f
The model return: g h q f f
right
Q O s W -> q o s w w
R x b -> r x b b
I X W p -> i x w p p
n G P E -> n g p e e
H b F u -> h b f u u
W s E c -> w s e c c
a u z x P -> a u z x p p
L f Q s -> l f q s s
p a O k N ->
The right answer is: p a o k n n
The model return: p a o k n n
right
a U o d -> a u o d d
f S o q -> f s o q q
s A e k d -> s a e k d d
g K N D -> g k n d d
u T D -> u t d d
r G O -> r g o o
L s G H -> l s g h h
B x a h -> b x a h h
k N W T ->
The right answer is: k n w t t
The model return: k n w t t
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], 8]
==========================================================================
55
**line number: 4
r n T -> t
g P M i -> i
x D b T -> t
W q r -> r
x H z o q ->
The right answer is: q
The model return: q
right
q M h v -> v
n M e S O -> o
Y p c m -> m
L y z -> z
g P L ->
The right answer is: l
The model return: l
right
u F e -> e
Q L c -> c
G x N Y -> y
k t v P -> p
U H n K D ->
The right answer is: d
The model return: d
right
m l e X -> x
M g N -> n
v S B -> b
K Q s -> s
y p H ->
The right answer is: h
The model return: h
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], 4]
==========================================================================
56
**line number: 4
s W L S U -> s w l s u
T m M -> t m m
h L q w -> h l q w
H d s S -> h d s s
H T g ->
The right answer is: h t g
The model return: h t g
right
p P Y Q Q -> p p y q q
p O a -> p o a
A F W S x -> a f w s x
A M Z y -> a m z y
G V w I ->
The right answer is: g v w i
The model return: g v w i
right
m O G -> m o g
Q l c -> q l c
h b T M -> h b t m
Y v g -> y v g
f g Z ->
The right answer is: f g z
The model return: f g z
right
e z P -> e z p
i M L k r -> i m l k r
h I l -> h i l
P A b -> p a b
L d B u P ->
The right answer is: l d b u p
The model return: l d b u p
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], 4]
==========================================================================
57
**line number: 4
2 N 6 D v -> 6 n 2 d v
N G o f 7 -> n g o f 7
S n 7 5 8 -> s n 8 5 7
3 0 l L Z -> 0 3 l l z
6 T k ->
The right answer is: 6 t k
The model return: 6 t k
right
3 C n 0 7 -> 7 c n 0 3
d T 2 -> d t 2
o c 2 P -> o c 2 p
T y 9 9 B -> t y 9 9 b
B e 2 ->
The right answer is: b e 2
The model return: b e 2
right
A 7 8 k f -> a 8 7 k f
2 Z z -> 2 z z
D 9 7 t -> d 7 9 t
U 7 k -> u 7 k
b Q 6 ->
The right answer is: b q 6
The model return: b 6 Q
false
u Q g 0 -> u q g 0
5 G m 7 R -> 7 g m 5 r
h k Q 4 -> h k q 4
z 5 K -> z 5 k
F n 3 ->
The right answer is: f n 3
The model return: F n 3
false
**line number: 8
2 N 6 D v -> 6 n 2 d v
N G o f 7 -> n g o f 7
S n 7 5 8 -> s n 8 5 7
3 0 l L Z -> 0 3 l l z
9 I t y -> 9 i t y
r G 1 -> r g 1
n 9 Y -> n 9 y
H l G 6 d -> h l g 6 d
6 T k ->
The right answer is: 6 t k
The model return: 6 t k
right
3 C n 0 7 -> 7 c n 0 3
d T 2 -> d t 2
o c 2 P -> o c 2 p
T y 9 9 B -> t y 9 9 b
G 7 o 2 -> g 2 o 7
K 5 8 x -> k 8 5 x
u 6 X 9 T -> u 9 x 6 t
4 2 G g C -> 2 4 g g c
B e 2 ->
The right answer is: b e 2
The model return: b e 2
right
A 7 8 k f -> a 8 7 k f
2 Z z -> 2 z z
D 9 7 t -> d 7 9 t
U 7 k -> u 7 k
Y e U C 0 -> y e u c 0
6 y T -> 6 y t
x X 3 -> x x 3
X g G k 8 -> x g g k 8
b Q 6 ->
The right answer is: b q 6
The model return: b q 6
right
u Q g 0 -> u q g 0
5 G m 7 R -> 7 g m 5 r
h k Q 4 -> h k q 4
z 5 K -> z 5 k
4 1 T k 4 -> 4 1 t k 4
3 p x Z -> 3 p x z
1 V z -> 1 v z
2 q P -> 2 q p
F n 3 ->
The right answer is: f n 3
The model return: F n 3
false
a v 7 N 9 -> a v 9 n 7
I y c 3 -> i y c 3
8 L i -> 8 l i
7 Y x -> 7 y x
7 3 0 W y -> 0 3 7 w y
7 t E 5 -> 5 t e 7
z P A N 1 -> z p a n 1
i 0 F 3 -> i 3 f 0
z K X 7 q ->
The right answer is: z k x 7 q
The model return: q 7 X K z
false
**line number: 16
2 N 6 D v -> 6 n 2 d v
N G o f 7 -> n g o f 7
S n 7 5 8 -> s n 8 5 7
3 0 l L Z -> 0 3 l l z
9 I t y -> 9 i t y
r G 1 -> r g 1
n 9 Y -> n 9 y
H l G 6 d -> h l g 6 d
k 8 C -> k 8 c
e X 9 -> e x 9
0 0 n Y 8 -> 8 0 n y 0
3 W a -> 3 w a
I 5 c Y K -> i 5 c y k
9 F g a 1 -> 1 f g a 9
G 4 M V d -> g 4 m v d
8 1 f v E -> 1 8 f v e
6 T k ->
The right answer is: 6 t k
The model return: 6 t k
right
3 C n 0 7 -> 7 c n 0 3
d T 2 -> d t 2
o c 2 P -> o c 2 p
T y 9 9 B -> t y 9 9 b
G 7 o 2 -> g 2 o 7
K 5 8 x -> k 8 5 x
u 6 X 9 T -> u 9 x 6 t
4 2 G g C -> 2 4 g g c
Q E h Z 3 -> q e h z 3
L H r 1 -> l h r 1
w O 7 g -> w o 7 g
i 3 M -> i 3 m
x X 2 I y -> x x 2 i y
w 1 Y 5 f -> w 5 y 1 f
n 6 B -> n 6 b
6 G x u -> 6 g x u
B e 2 ->
The right answer is: b e 2
The model return: b e 2
right
A 7 8 k f -> a 8 7 k f
2 Z z -> 2 z z
D 9 7 t -> d 7 9 t
U 7 k -> u 7 k
Y e U C 0 -> y e u c 0
6 y T -> 6 y t
x X 3 -> x x 3
X g G k 8 -> x g g k 8
n x 6 H -> n x 6 h
i 4 O -> i 4 o
H c B 9 X -> h c b 9 x
5 G z H 1 -> 1 g z h 5
F p 0 8 -> f p 8 0
8 T F A n -> 8 t f a n
m 6 Z I -> m 6 z i
N 9 x f F -> n 9 x f f
b Q 6 ->
The right answer is: b q 6
The model return: b q 6
right
u Q g 0 -> u q g 0
5 G m 7 R -> 7 g m 5 r
h k Q 4 -> h k q 4
z 5 K -> z 5 k
4 1 T k 4 -> 4 1 t k 4
3 p x Z -> 3 p x z
1 V z -> 1 v z
2 q P -> 2 q p
x G 2 n f -> x g 2 n f
1 G x 5 -> 5 g x 1
0 O a -> 0 o a
8 3 X p -> 3 8 x p
z 0 6 D -> z 6 0 d
Y 2 c -> y 2 c
P g M 6 -> p g m 6
m 3 T -> m 3 t
F n 3 ->
The right answer is: f n 3
The model return: f n 3
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], 16]
==========================================================================
58
**line number: 4
8 7 G h -> 8 7
W l 9 -> 9
i 1 L -> 1
E v w t 8 -> 8
F 3 i ->
The right answer is: 3
The model return: 3
right
n D C 4 o -> 4
e 8 h s H -> 8
l R 2 -> 2
H 1 D g -> 1
D m u 3 N ->
The right answer is: 3
The model return: 3
right
f 6 E Y O -> 6
f 6 A -> 6
2 N p -> 2
0 M F 9 k -> 0 9
2 T y R ->
The right answer is: 2
The model return: 2
right
0 L f 1 0 -> 0 1 0
1 0 O n -> 1 0
r Z 6 v D -> 6
i O 0 3 -> 0 3
e 2 N ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], 4]
==========================================================================
59
**line number: 4
A m i a -> a a
g u E -> g e
H x t -> h t
L F c g -> l g
p K Y R D ->
The right answer is: p d
The model return: p R D
false
D Z Q n -> d n
w X Q T -> w t
Y d e g -> y g
q A k -> q k
z D p z x ->
The right answer is: z x
The model return: z p x
false
**line number: 8
A m i a -> a a
g u E -> g e
H x t -> h t
L F c g -> l g
K y d s -> k s
v y H e -> v e
T h T Y e -> t e
N p b -> n b
p K Y R D ->
The right answer is: p d
The model return: p R D
false
D Z Q n -> d n
w X Q T -> w t
Y d e g -> y g
q A k -> q k
R d D s -> r s
v T c -> v c
m A d t V -> m v
l l X -> l x
z D p z x ->
The right answer is: z x
The model return: z x
right
r t r R -> r r
o g C E -> o e
l v E -> l e
B P A g O -> b o
u k S G -> u g
k V P -> k p
e t C -> e c
i q L -> i l
B M G t o ->
The right answer is: b o
The model return: b o
right
b Q a -> b a
I M n -> i n
A c G Y Y -> a y
U h S -> u s
O Z n A -> o a
T Q w m -> t m
P A k B L -> p l
I q F -> i f
V v u D g ->
The right answer is: v g
The model return: v g
right
T M k T -> t t
O M o k n -> o n
G h e y W -> g w
Y b s -> y s
I E C I r -> i r
k y k O -> k o
H m r i z -> h z
Z S f g K -> z k
p E g ->
The right answer is: p g
The model return: p g
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], 8]
==========================================================================
60
**line number: 4
G G z E I -> g g g z e i i
U t e k -> u u t e k k
O f V d a -> o o f v d a a
i i i O -> i i i i o o
i U e ->
The right answer is: i i u e e
The model return: i i u e e
right
t E w -> t t e w w
P L x n l -> p p l x n l l
b K k f -> b b k k f f
f a Z -> f f a z z
R v C ->
The right answer is: r r v c c
The model return: r r v c c
right
m R c u -> m m r c u u
S B x -> s s b x x
I g v s G -> i i g v s g g
O B t c k -> o o b t c k k
p U h ->
The right answer is: p p u h h
The model return: p p u h h
right
A b r U g -> a a b r u g g
O F I z P -> o o f i z p p
V U B D f -> v v u b d f f
V m p I X -> v v m p i x x
X h p n m ->
The right answer is: x x h p n m m
The model return: x x h p n m m
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], 4]
==========================================================================
61
**line number: 4
r u N m b -> 2
h N W -> 2
z Z h -> 2
E e b Y -> 2
i l O G ->
The right answer is: 2
The model return: 2
right
q L W G -> 2
L w m -> 2
p H l d -> 2
b P u H -> 2
U D e ->
The right answer is: 2
The model return: 2
right
W G a -> 2
E r z K -> 2
c z q G -> 2
h A L G q -> 2
B k h v ->
The right answer is: 2
The model return: 2
right
a x N Q -> 2
y O b z Q -> 2
Z k T U -> 2
Y D G p K -> 2
b W W E ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], 4]
==========================================================================
62
**line number: 4
8 3 D g -> 9 3 d g
3 w D B S -> 4 w d b s
O d 7 -> o d 8
P s 1 1 -> p s 2 1
g 8 F ->
The right answer is: g 9 f
The model return: g 8 F
false
D 1 U 6 m -> d 2 u 6 m
8 Q M H q -> 9 q m h q
8 A x -> 9 a x
f 7 X -> f 8 x
m g D 4 n ->
The right answer is: m g d 5 n
The model return: m g D 5 n
false
**line number: 8
8 3 D g -> 9 3 d g
3 w D B S -> 4 w d b s
O d 7 -> o d 8
P s 1 1 -> p s 2 1
Q 4 H o O -> q 5 h o o
O 8 h -> o 9 h
9 3 C 7 f -> 10 3 c 7 f
0 p 5 Y 8 -> 1 p 5 y 8
g 8 F ->
The right answer is: g 9 f
The model return: g 9 f
right
D 1 U 6 m -> d 2 u 6 m
8 Q M H q -> 9 q m h q
8 A x -> 9 a x
f 7 X -> f 8 x
1 2 g U 8 -> 2 2 g u 8
I v V 0 -> i v v 1
a 5 k 9 S -> a 6 k 9 s
I m 5 -> i m 6
m g D 4 n ->
The right answer is: m g d 5 n
The model return: m g d 4 n
false
6 R l -> 7 r l
F 2 b L -> f 3 b l
w 3 T X 0 -> w 4 t x 0
w o 8 E 8 -> w o 9 e 8
W 4 M E p -> w 5 m e p
N 6 q -> n 7 q
8 4 i 2 V -> 9 4 i 2 v
7 a D 0 3 -> 8 a d 0 3
s 9 a w N ->
The right answer is: s 10 a w n
The model return: s 9 b w n
false
**line number: 16
8 3 D g -> 9 3 d g
3 w D B S -> 4 w d b s
O d 7 -> o d 8
P s 1 1 -> p s 2 1
Q 4 H o O -> q 5 h o o
O 8 h -> o 9 h
9 3 C 7 f -> 10 3 c 7 f
0 p 5 Y 8 -> 1 p 5 y 8
t 6 0 D -> t 7 0 d
s 9 7 S -> s 10 7 s
R 8 e -> r 9 e
N o 8 -> n o 9
t 8 q D -> t 9 q d
M f A 7 -> m f a 8
4 y F -> 5 y f
y 9 L i 4 -> y 10 l i 4
g 8 F ->
The right answer is: g 9 f
The model return: g 9 f
right
D 1 U 6 m -> d 2 u 6 m
8 Q M H q -> 9 q m h q
8 A x -> 9 a x
f 7 X -> f 8 x
1 2 g U 8 -> 2 2 g u 8
I v V 0 -> i v v 1
a 5 k 9 S -> a 6 k 9 s
I m 5 -> i m 6
y O 4 H -> y o 5 h
4 9 w N -> 5 9 w n
D T g 8 -> d t g 9
H 2 g b g -> h 3 g b g
x 2 q a C -> x 3 q a c
h 9 K 0 3 -> h 10 k 0 3
E z p 6 v -> e z p 7 v
1 y u V -> 2 y u v
m g D 4 n ->
The right answer is: m g d 5 n
The model return: m g d 4 n
false
6 R l -> 7 r l
F 2 b L -> f 3 b l
w 3 T X 0 -> w 4 t x 0
w o 8 E 8 -> w o 9 e 8
W 4 M E p -> w 5 m e p
N 6 q -> n 7 q
8 4 i 2 V -> 9 4 i 2 v
7 a D 0 3 -> 8 a d 0 3
B u Y 0 -> b u y 1
b 9 E -> b 10 e
I 0 b C -> i 1 b c
Z 1 s a -> z 2 s a
l y 6 U -> l y 7 u
4 Q m -> 5 q m
6 t I -> 7 t i
f G w 5 -> f g w 6
s 9 a w N ->
The right answer is: s 10 a w n
The model return: s 10 a w n
right
B 6 T f 1 -> b 7 t f 1
1 T t -> 2 t t
d P 0 S -> d p 1 s
H O 6 q -> h o 7 q
x 0 I z -> x 1 i z
Z 8 l 3 m -> z 9 l 3 m
E y 6 7 -> e y 7 7
g 3 s A -> g 4 s a
k G P 6 -> k g p 7
4 p Q -> 5 p q
c k M 2 K -> c k m 3 k
4 l F -> 5 l f
3 k B -> 4 k b
8 u K -> 9 u k
7 o H N -> 8 o h n
b N 0 p S -> b n 1 p s
y 8 G 6 ->
The right answer is: y 9 g 6
The model return: y 9 g 7
false
**line number: 32
8 3 D g -> 9 3 d g
3 w D B S -> 4 w d b s
O d 7 -> o d 8
P s 1 1 -> p s 2 1
Q 4 H o O -> q 5 h o o
O 8 h -> o 9 h
9 3 C 7 f -> 10 3 c 7 f
0 p 5 Y 8 -> 1 p 5 y 8
t 6 0 D -> t 7 0 d
s 9 7 S -> s 10 7 s
R 8 e -> r 9 e
N o 8 -> n o 9
t 8 q D -> t 9 q d
M f A 7 -> m f a 8
4 y F -> 5 y f
y 9 L i 4 -> y 10 l i 4
N n K 2 -> n n k 3
0 t g M w -> 1 t g m w
g 2 a Q -> g 3 a q
T m 8 -> t m 9
z 1 M -> z 2 m
N g 6 -> n g 7
H 4 b 1 n -> h 5 b 1 n
g 7 B -> g 8 b
W 4 f 9 -> w 5 f 9
5 v D b -> 6 v d b
F z V 8 -> f z v 9
1 d X 8 -> 2 d x 8
O r 3 -> o r 4
7 M 2 h B -> 8 m 2 h b
w 3 P -> w 4 p
R a Z Z 0 -> r a z z 1
g 8 F ->
The right answer is: g 9 f
The model return: g 9 f
right
D 1 U 6 m -> d 2 u 6 m
8 Q M H q -> 9 q m h q
8 A x -> 9 a x
f 7 X -> f 8 x
1 2 g U 8 -> 2 2 g u 8
I v V 0 -> i v v 1
a 5 k 9 S -> a 6 k 9 s
I m 5 -> i m 6
y O 4 H -> y o 5 h
4 9 w N -> 5 9 w n
D T g 8 -> d t g 9
H 2 g b g -> h 3 g b g
x 2 q a C -> x 3 q a c
h 9 K 0 3 -> h 10 k 0 3
E z p 6 v -> e z p 7 v
1 y u V -> 2 y u v
l 0 U g -> l 1 u g
s 9 0 O 9 -> s 10 0 o 9
x 0 D -> x 1 d
P 5 f b U -> p 6 f b u
P v 1 -> p v 2
w 7 G L -> w 8 g l
9 E u 0 9 -> 10 e u 0 9
Y G 8 G p -> y g 9 g p
A 8 q x -> a 9 q x
7 o k K k -> 8 o k k k
v H 5 -> v h 6
V 2 O K v -> v 3 o k v
f 3 O -> f 4 o
p 7 O o -> p 8 o o
6 x X -> 7 x x
P 2 q -> p 3 q
m g D 4 n ->
The right answer is: m g d 5 n
The model return: m h d 5 n
false
6 R l -> 7 r l
F 2 b L -> f 3 b l
w 3 T X 0 -> w 4 t x 0
w o 8 E 8 -> w o 9 e 8
W 4 M E p -> w 5 m e p
N 6 q -> n 7 q
8 4 i 2 V -> 9 4 i 2 v
7 a D 0 3 -> 8 a d 0 3
B u Y 0 -> b u y 1
b 9 E -> b 10 e
I 0 b C -> i 1 b c
Z 1 s a -> z 2 s a
l y 6 U -> l y 7 u
4 Q m -> 5 q m
6 t I -> 7 t i
f G w 5 -> f g w 6
E o y X 2 -> e o y x 3
s O N 8 8 -> s o n 9 8
1 N p C -> 2 n p c
i K 3 -> i k 4
3 q I -> 4 q i
w 6 X -> w 7 x
G 6 y -> g 7 y
Y t 3 s Y -> y t 4 s y
v E r 4 -> v e r 5
I 8 z 9 -> i 9 z 9
3 q a U v -> 4 q a u v
3 9 Y 4 g -> 4 9 y 4 g
d t 8 z K -> d t 9 z k
e 5 n I -> e 6 n i
9 z F -> 10 z f
F V P f 5 -> f v p f 6
s 9 a w N ->
The right answer is: s 10 a w n
The model return: s 9 a w n
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
==========================================================================
63
**line number: 4
A X 7 k S -> a x 7 7 k s
A 0 o -> a 0 0 o
u 7 T -> u 7 7 t
x 1 p E r -> x 1 1 p e r
o F 9 ->
The right answer is: o f 9 9
The model return: o f 9
false
7 7 A O x -> 7 7 7 a o x
5 a R -> 5 5 a r
a R 0 i -> a r 0 0 i
p P 7 -> p p 7 7
Q X S o 7 ->
The right answer is: q x s o 7 7
The model return: Q X S o 7 7
false
**line number: 8
A X 7 k S -> a x 7 7 k s
A 0 o -> a 0 0 o
u 7 T -> u 7 7 t
x 1 p E r -> x 1 1 p e r
i O 6 -> i o 6 6
Q i 6 F -> q i 6 6 f
D 8 p g -> d 8 8 p g
1 Z g 7 -> 1 1 z g 7
o F 9 ->
The right answer is: o f 9 9
The model return: o f 9 9
right
7 7 A O x -> 7 7 7 a o x
5 a R -> 5 5 a r
a R 0 i -> a r 0 0 i
p P 7 -> p p 7 7
7 S l 3 -> 7 7 s l 3
4 v G -> 4 4 v g
C y 8 -> c y 8 8
T 6 z -> t 6 6 z
Q X S o 7 ->
The right answer is: q x s o 7 7
The model return: q x s o 7 7
right
4 n E -> 4 4 n e
0 w K -> 0 0 w k
0 S t I -> 0 0 s t i
d r F 7 7 -> d r f 7 7 7
9 g 1 e B -> 9 9 g 1 e b
f 4 L -> f 4 4 l
P G 3 m 5 -> p g 3 3 m 5
1 a P -> 1 1 a p
c v 7 L 1 ->
The right answer is: c v 7 7 l 1
The model return: c v 7 7 l 1
right
F 2 B K a -> f 2 2 b k a
k 1 U 8 z -> k 1 1 u 8 z
m X 8 -> m x 8 8
X 8 g Z -> x 8 8 g z
r A 6 O C -> r a 6 6 o c
f 9 V -> f 9 9 v
W n 2 -> w n 2 2
F m 8 Q -> f m 8 8 q
7 c u A ->
The right answer is: 7 7 c u a
The model return: 7 c u a
false
7 l C -> 7 7 l c
g 7 7 S 3 -> g 7 7 7 s 3
y p 3 G -> y p 3 3 g
H q 3 -> h q 3 3
E 7 u T -> e 7 7 u t
8 u 9 3 Z -> 8 8 u 9 3 z
l 3 A -> l 3 3 a
L 0 F g -> l 0 0 f g
y 1 G ->
The right answer is: y 1 1 g
The model return: y 1 1 g
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], 8]
==========================================================================
64
**line number: 4
Y u 9 a -> 9
1 R 2 r z -> 1
r g 4 I -> 4
s w R 4 -> 4
z M 6 d V ->
The right answer is: 6
The model return: 6
right
l 8 R 0 a -> 8
3 8 U a G -> 3
W c 9 -> 9
T 5 D m -> 5
1 w d f C ->
The right answer is: 1
The model return: 1
right
p D 0 -> 0
U q B 5 -> 5
1 G P u -> 1
6 Y f -> 6
5 P t ->
The right answer is: 5
The model return: 5
right
2 D l 4 1 -> 2
7 4 l I q -> 7
4 L k B -> 4
A O r 0 -> 0
l G t 6 ->
The right answer is: 6
The model return: 6
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], 4]
==========================================================================
65
**line number: 4
M g 4 r q -> m g 4 4 r q
9 6 p R w -> 9 6 6 p r w
o g 2 G -> o g 2 2 g
0 o D -> 0 0 o d
3 p t H ->
The right answer is: 3 3 p t h
The model return: 3 p t 3
false
y C 9 I -> y c 9 9 i
8 A N 2 c -> 8 a n 2 2 c
0 c Q c 0 -> 0 c q c 0 0
0 g D p -> 0 0 g d p
1 2 x H b ->
The right answer is: 1 2 2 x h b
The model return: 1 2 x h b
false
**line number: 8
M g 4 r q -> m g 4 4 r q
9 6 p R w -> 9 6 6 p r w
o g 2 G -> o g 2 2 g
0 o D -> 0 0 o d
z 7 R -> z 7 7 r
n H 9 g Y -> n h 9 9 g y
o V 8 K B -> o v 8 8 k b
R 6 u 6 H -> r 6 u 6 6 h
3 p t H ->
The right answer is: 3 3 p t h
The model return: 3 p t 3 h
false
y C 9 I -> y c 9 9 i
8 A N 2 c -> 8 a n 2 2 c
0 c Q c 0 -> 0 c q c 0 0
0 g D p -> 0 0 g d p
9 s E -> 9 9 s e
q v 9 S -> q v 9 9 s
u F X T 7 -> u f x t 7 7
6 h z 3 E -> 6 h z 3 3 e
1 2 x H b ->
The right answer is: 1 2 2 x h b
The model return: 1 2 x h b
false
**line number: 16
M g 4 r q -> m g 4 4 r q
9 6 p R w -> 9 6 6 p r w
o g 2 G -> o g 2 2 g
0 o D -> 0 0 o d
z 7 R -> z 7 7 r
n H 9 g Y -> n h 9 9 g y
o V 8 K B -> o v 8 8 k b
R 6 u 6 H -> r 6 u 6 6 h
1 i Y -> 1 1 i y
3 e e Y -> 3 3 e e y
O r h 5 A -> o r h 5 5 a
Y k R 4 -> y k r 4 4
I 4 e Q -> i 4 4 e q
r S a 4 8 -> r s a 4 8 8
P s 0 -> p s 0 0
D g 7 -> d g 7 7
3 p t H ->
The right answer is: 3 3 p t h
The model return: 3 3 p t h
right
y C 9 I -> y c 9 9 i
8 A N 2 c -> 8 a n 2 2 c
0 c Q c 0 -> 0 c q c 0 0
0 g D p -> 0 0 g d p
9 s E -> 9 9 s e
q v 9 S -> q v 9 9 s
u F X T 7 -> u f x t 7 7
6 h z 3 E -> 6 h z 3 3 e
b B 8 G -> b b 8 8 g
o H 8 T -> o h 8 8 t
4 v L -> 4 4 v l
8 F r H -> 8 8 f r h
1 X 2 q -> 1 x 2 2 q
G t 3 C -> g t 3 3 c
7 Z 3 1 n -> 7 z 3 1 1 n
8 g 2 V G -> 8 g 2 2 v g
1 2 x H b ->
The right answer is: 1 2 2 x h b
The model return: 1 2 x h b
false
g V 8 -> g v 8 8
W u 5 -> w u 5 5
H W g 3 T -> h w g 3 3 t
p 6 6 B 8 -> p 6 6 b 8 8
x Y 9 -> x y 9 9
z e 8 Z D -> z e 8 8 z d
C 9 o -> c 9 9 o
i g I 4 7 -> i g i 4 7 7
0 G e -> 0 0 g e
f Q 3 -> f q 3 3
i e 6 U -> i e 6 6 u
9 I B t -> 9 9 i b t
8 I 0 m Y -> 8 i 0 0 m y
2 V Q Q z -> 2 2 v q q z
0 f N -> 0 0 f n
6 S w -> 6 6 s w
Y 7 G h ->
The right answer is: y 7 7 g h
The model return: y 7 7 g h
right
Q g 3 -> q g 3 3
1 Y r -> 1 1 y r
S 1 3 u 4 -> s 1 3 u 4 4
E 2 x w -> e 2 2 x w
0 K z -> 0 0 k z
a I 1 -> a i 1 1
k B 8 -> k b 8 8
3 8 l X -> 3 8 8 l x
s G H 5 i -> s g h 5 5 i
I P g 0 -> i p g 0 0
F I i 7 -> f i i 7 7
4 W b -> 4 4 w b
7 Q g -> 7 7 q g
f V 4 -> f v 4 4
U i 0 -> u i 0 0
2 E t -> 2 2 e t
P 4 W e M ->
The right answer is: p 4 4 w e m
The model return: 2 2 4 w e m
false
**line number: 32
M g 4 r q -> m g 4 4 r q
9 6 p R w -> 9 6 6 p r w
o g 2 G -> o g 2 2 g
0 o D -> 0 0 o d
z 7 R -> z 7 7 r
n H 9 g Y -> n h 9 9 g y
o V 8 K B -> o v 8 8 k b
R 6 u 6 H -> r 6 u 6 6 h
1 i Y -> 1 1 i y
3 e e Y -> 3 3 e e y
O r h 5 A -> o r h 5 5 a
Y k R 4 -> y k r 4 4
I 4 e Q -> i 4 4 e q
r S a 4 8 -> r s a 4 8 8
P s 0 -> p s 0 0
D g 7 -> d g 7 7
Z w 6 5 -> z w 6 5 5
1 1 n Q -> 1 1 1 n q
8 1 M o -> 8 1 1 m o
2 u C -> 2 2 u c
9 p B -> 9 9 p b
U k 3 0 X -> u k 3 0 0 x
v 2 u K -> v 2 2 u k
w 4 q H K -> w 4 4 q h k
Y i h u 6 -> y i h u 6 6
H 6 8 z -> h 6 8 8 z
8 f s W -> 8 8 f s w
L e 6 -> l e 6 6
p 3 M 7 g -> p 3 m 7 7 g
m H 7 -> m h 7 7
9 u D q -> 9 9 u d q
9 G r -> 9 9 g r
3 p t H ->
The right answer is: 3 3 p t h
The model return: 3 3 p t h
right
y C 9 I -> y c 9 9 i
8 A N 2 c -> 8 a n 2 2 c
0 c Q c 0 -> 0 c q c 0 0
0 g D p -> 0 0 g d p
9 s E -> 9 9 s e
q v 9 S -> q v 9 9 s
u F X T 7 -> u f x t 7 7
6 h z 3 E -> 6 h z 3 3 e
b B 8 G -> b b 8 8 g
o H 8 T -> o h 8 8 t
4 v L -> 4 4 v l
8 F r H -> 8 8 f r h
1 X 2 q -> 1 x 2 2 q
G t 3 C -> g t 3 3 c
7 Z 3 1 n -> 7 z 3 1 1 n
8 g 2 V G -> 8 g 2 2 v g
f 2 W -> f 2 2 w
f 5 G -> f 5 5 g
6 L x -> 6 6 l x
e 3 4 8 X -> e 3 4 8 8 x
t 3 R -> t 3 3 r
6 8 I Z l -> 6 8 8 i z l
T 0 A t C -> t 0 0 a t c
8 4 O w -> 8 4 4 o w
A 6 w x -> a 6 6 w x
5 N p 7 o -> 5 n p 7 7 o
8 F n -> 8 8 f n
s V 9 Y -> s v 9 9 y
l 5 K -> l 5 5 k
1 d E 5 7 -> 1 d e 5 7 7
i 0 W V -> i 0 0 w v
R G u 8 -> r g u 8 8
1 2 x H b ->
The right answer is: 1 2 2 x h b
The model return: 1 2 x h b
false
g V 8 -> g v 8 8
W u 5 -> w u 5 5
H W g 3 T -> h w g 3 3 t
p 6 6 B 8 -> p 6 6 b 8 8
x Y 9 -> x y 9 9
z e 8 Z D -> z e 8 8 z d
C 9 o -> c 9 9 o
i g I 4 7 -> i g i 4 7 7
0 G e -> 0 0 g e
f Q 3 -> f q 3 3
i e 6 U -> i e 6 6 u
9 I B t -> 9 9 i b t
8 I 0 m Y -> 8 i 0 0 m y
2 V Q Q z -> 2 2 v q q z
0 f N -> 0 0 f n
6 S w -> 6 6 s w
3 7 S e C -> 3 7 7 s e c
3 y w L G -> 3 3 y w l g
R U 2 y -> r u 2 2 y
7 W c -> 7 7 w c
4 3 P u 3 -> 4 3 p u 3 3
m 5 p W -> m 5 5 p w
V 5 f -> v 5 5 f
4 9 Q k d -> 4 9 9 q k d
o 9 y L 7 -> o 9 y l 7 7
0 m k E -> 0 0 m k e
c G 3 -> c g 3 3
u B 2 -> u b 2 2
Y f W 7 -> y f w 7 7
3 1 q Z S -> 3 1 1 q z s
X 9 v 7 x -> x 9 v 7 7 x
h 5 P -> h 5 5 p
Y 7 G h ->
The right answer is: y 7 7 g h
The model return: y 7 7 h
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
==========================================================================
66
**line number: 4
o C n -> o o c n
Z z e X -> z z z e x
d a e l F -> d d a e l f
a I G y -> a a i g y
I P f L T ->
The right answer is: i i p f l t
The model return: i i p f l t
right
D x F -> d d x f
h y W -> h h y w
n h g Q -> n n h g q
k Z u i k -> k k z u i k
C u V p ->
The right answer is: c c u v p
The model return: c c u v p
right
m A G f -> m m a g f
C s N t -> c c s n t
K g m c -> k k g m c
D z u -> d d z u
m h c c U ->
The right answer is: m m h c c u
The model return: m m h c c U
false
A C k F E -> a a c k f e
b g v K W -> b b g v k w
L O t -> l l o t
e T B w -> e e t b w
U g f x ->
The right answer is: u u g f x
The model return: u u g f x
right
d O y x -> d d o y x
g L F -> g g l f
e n m Q t -> e e n m q t
F X T s p -> f f x t s p
p c x Z ->
The right answer is: p p c x z
The model return: p p c x z
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], 4]
==========================================================================
67
**line number: 4
k B o n -> k
n Z g -> n
e s G -> e
a o G f -> a
P p d ->
The right answer is: p
The model return: P
false
z m F o d -> z
q M k -> q
n r T F -> n
R E g S H -> r
H o h ->
The right answer is: h
The model return: h
right
o b T g x -> o
P r g -> p
M K G w y -> m
s c l D -> s
l w H s ->
The right answer is: l
The model return: l
right
W r B -> w
b i Z -> b
K f g e -> k
D S n -> d
v E v ->
The right answer is: v
The model return: v
right
l L v -> l
H V i y -> h
c k G z v -> c
f d M T -> f
q g H u b ->
The right answer is: q
The model return: q
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], 4]
==========================================================================
68
**line number: 4
i X C -> c
e R u -> u
L I v Y u -> u
t n g X l -> l
F A W i ->
The right answer is: i
The model return: i
right
u T P h A -> a
H p e -> e
d Z I Y -> y
O F r M -> m
y p e G g ->
The right answer is: g
The model return: g
right
h M H K V -> v
T R x Y V -> v
Q g p -> p
n e F m -> m
s z B ->
The right answer is: b
The model return: b
right
i w E -> e
D x l -> l
x d d s N -> n
i N t C O -> o
g Y G ->
The right answer is: g
The model return: g
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 4]
==========================================================================
69
**line number: 4
P W o -> p W p
F k b -> f k c
m A g G -> m a g H
l W A -> l w B
n P x U ->
The right answer is: n p x V
The model return: n p x V
right
I r g -> i r h
i Y p k -> i y p l
O V g -> o V h
g w u l N -> g w u l o
u o i S ->
The right answer is: u o i t
The model return: u o i S
false
h H k -> h h l
U p z a -> u p z b
F p y M -> f p y N
P l x -> p l y
q b k A h ->
The right answer is: q b k a i
The model return: q b k B h
false
**line number: 8
P W o -> p W p
F k b -> f k c
m A g G -> m a g H
l W A -> l w B
q q F X -> q q f Y
v A f -> v a g
u N z m y -> u n z m z
d G A g y -> d g A g z
n P x U ->
The right answer is: n p x V
The model return: n p x V
right
I r g -> i r h
i Y p k -> i y p l
O V g -> o V h
g w u l N -> g w u l o
L Q n z P -> l Q n z Q
V x H -> v x I
Z y d S -> z y d T
w O H P -> w o H Q
u o i S ->
The right answer is: u o i t
The model return: u o i T
false
h H k -> h h l
U p z a -> u p z b
F p y M -> f p y N
P l x -> p l y
Y B g L D -> y B g L E
P u Y G D -> p u Y G E
o v Z n -> o v z o
N g Q -> n g R
q b k A h ->
The right answer is: q b k a i
The model return: q b k A i
false
**line number: 16
P W o -> p W p
F k b -> f k c
m A g G -> m a g H
l W A -> l w B
q q F X -> q q f Y
v A f -> v a g
u N z m y -> u n z m z
d G A g y -> d g A g z
w n K r H -> w n k r I
P l q -> p l r
K l V -> k l W
b B g p -> b b g q
X M A i -> x M A j
q v B -> q v c
v C w -> v c x
n A o K h -> n a o K i
n P x U ->
The right answer is: n p x V
The model return: n p x V
right
I r g -> i r h
i Y p k -> i y p l
O V g -> o V h
g w u l N -> g w u l o
L Q n z P -> l Q n z Q
V x H -> v x I
Z y d S -> z y d T
w O H P -> w o H Q
k E B Z -> k e B A
C d K I -> c d K J
z c Q d n -> z c q d o
T N e O -> t N e P
O r Y M -> o r Y N
R Z y g v -> r Z y g w
V O Y U v -> v O Y U w
R Y Z v T -> r Y Z v U
u o i S ->
The right answer is: u o i t
The model return: u o i T
false
h H k -> h h l
U p z a -> u p z b
F p y M -> f p y N
P l x -> p l y
Y B g L D -> y B g L E
P u Y G D -> p u Y G E
o v Z n -> o v z o
N g Q -> n g R
z T g -> z t h
x C d -> x c e
G V I b Q -> g V I b R
G Y i U -> g Y i V
u N V i h -> u n V i i
B K w P I -> b K w P J
z u P g o -> z u p g p
I Z l -> i Z m
q b k A h ->
The right answer is: q b k a i
The model return: q b k A i
false
**line number: 32
P W o -> p W p
F k b -> f k c
m A g G -> m a g H
l W A -> l w B
q q F X -> q q f Y
v A f -> v a g
u N z m y -> u n z m z
d G A g y -> d g A g z
w n K r H -> w n k r I
P l q -> p l r
K l V -> k l W
b B g p -> b b g q
X M A i -> x M A j
q v B -> q v c
v C w -> v c x
n A o K h -> n a o K i
m d M A G -> m d m A H
g C L -> g c M
u u U C -> u u u D
Z A n k I -> z A n k J
a f K -> a f l
d p w o Y -> d p w o z
D n d v -> d n d w
p h C T -> p h c U
s h H U F -> s h h U G
O D b Y W -> o D b Y X
k L T H -> k l T I
m C Y -> m c Z
o G U -> o g V
z T m -> z t n
W w h P H -> w w h P I
M H m -> m H n
n P x U ->
The right answer is: n p x V
The model return: n p x V
right
I r g -> i r h
i Y p k -> i y p l
O V g -> o V h
g w u l N -> g w u l o
L Q n z P -> l Q n z Q
V x H -> v x I
Z y d S -> z y d T
w O H P -> w o H Q
k E B Z -> k e B A
C d K I -> c d K J
z c Q d n -> z c q d o
T N e O -> t N e P
O r Y M -> o r Y N
R Z y g v -> r Z y g w
V O Y U v -> v O Y U w
R Y Z v T -> r Y Z v U
e B O d A -> e b O d B
z G P a x -> z g P a y
D e L -> d e M
k D y u a -> k d y u b
D Z b q -> d Z b r
O x Y H W -> o x Y H X
n W g N u -> n w g N v
Y u A X -> y u A Y
Y A f A -> y A f B
S G p -> s G q
Y d B q d -> y d B q e
m k P t T -> m k p t U
L D g d -> l D g e
I t o u d -> i t o u e
g P v -> g p w
d G K -> d g L
u o i S ->
The right answer is: u o i t
The model return: u o i T
false
h H k -> h h l
U p z a -> u p z b
F p y M -> f p y N
P l x -> p l y
Y B g L D -> y B g L E
P u Y G D -> p u Y G E
o v Z n -> o v z o
N g Q -> n g R
z T g -> z t h
x C d -> x c e
G V I b Q -> g V I b R
G Y i U -> g Y i V
u N V i h -> u n V i i
B K w P I -> b K w P J
z u P g o -> z u p g p
I Z l -> i Z m
U W g Z -> u W g A
x w C O H -> x w c O I
W m b R -> w m b S
I o E -> i o F
S F w p D -> s F w p E
n E s -> n e t
g q Y O -> g q y P
p F x M p -> p f x M q
Y u P -> y u Q
h w E -> h w f
X i r x z -> x i r x a
R C w -> r C x
M b C -> m b D
q Z q c F -> q z q c G
C G P y -> c G P z
Y g M -> y g N
q b k A h ->
The right answer is: q b k a i
The model return: q b k A i
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], -1]
==========================================================================
70
**line number: 4
R O M v U -> r O M v U U
d D v -> d d v v
x K g G -> x k g G G
Z o e -> z o e e
A m E ->
The right answer is: a m E E
The model return: A m E E
false
U t L -> u t L L
A g K -> a g K K
r Y O z O -> r y O z O O
h W g -> h w g g
M M y M ->
The right answer is: m M y M M
The model return: m m y M M
false
**line number: 8
R O M v U -> r O M v U U
d D v -> d d v v
x K g G -> x k g G G
Z o e -> z o e e
F Q A a -> f Q A a a
F l a -> f l a a
z f W -> z f w w
F o F -> f o F F
A m E ->
The right answer is: a m E E
The model return: a m E E
right
U t L -> u t L L
A g K -> a g K K
r Y O z O -> r y O z O O
h W g -> h w g g
P q b -> p q b b
o H K -> o h K K
U v Y T -> u v Y T T
a Y m k -> a y m k k
M M y M ->
The right answer is: m M y M M
The model return: m M y M M
right
a I t q w -> a i t q w w
a Q L d -> a q L d d
h d V N -> h d v N N
t P o p c -> t p o p c c
Q S v -> q S v v
m W h -> m w h h
i y U v l -> i y u v l l
S B z -> s B z z
C L o ->
The right answer is: c L o o
The model return: c L o o
right
D y D D -> d y D D D
Y c K -> y c K K
i f p Z v -> i f p z v v
A v H M -> a v H M M
T y G b M -> t y G b M M
O Q e -> o Q e e
z n d R d -> z n d r d d
F T H W z -> f T H W z z
v V b ->
The right answer is: v v b b
The model return: v V b b
false
l p h M L -> l p h m L L
Y D w B t -> y D w B t t
W C N I y -> w C N I y y
g U B l H -> g u B l H H
k N O -> k n O O
D D c -> d D c c
h p W -> h p w w
D t r z x -> d t r z x x
f S T ->
The right answer is: f s T T
The model return: f s T T
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], 8]
==========================================================================
71
**line number: 4
s a Y S O -> O
w K B D U -> U
C s R m -> m
C c P P -> P
o H S v ->
The right answer is: v
The model return: v
right
K w g -> g
q R S Y -> Y
T g t -> t
s Z C c -> c
A D o h P ->
The right answer is: P
The model return: h
false
g q D W q -> q
a t L -> l
U o g -> g
V v G -> G
x D B ->
The right answer is: B
The model return: B
right
X C a s -> s
i x i e T -> t
B u r C -> C
o g M M e -> e
n w C ->
The right answer is: c
The model return: C
false
**line number: 8
s a Y S O -> O
w K B D U -> U
C s R m -> m
C c P P -> P
O m w k O -> O
V c t -> t
f G a e -> e
L m g h -> h
o H S v ->
The right answer is: v
The model return: v
right
K w g -> g
q R S Y -> Y
T g t -> t
s Z C c -> c
u t B m y -> y
F E q -> q
u P F -> F
k b p Q s -> s
A D o h P ->
The right answer is: P
The model return: h
false
g q D W q -> q
a t L -> l
U o g -> g
V v G -> G
W V p L -> L
P a T -> T
C l t -> t
C r f -> f
x D B ->
The right answer is: B
The model return: B
right
X C a s -> s
i x i e T -> t
B u r C -> C
o g M M e -> e
U Z e h g -> g
g q c a T -> t
f O y A i -> i
C e y -> y
n w C ->
The right answer is: c
The model return: C
false
**line number: 16
s a Y S O -> O
w K B D U -> U
C s R m -> m
C c P P -> P
O m w k O -> O
V c t -> t
f G a e -> e
L m g h -> h
d C S E -> E
E e y d -> d
L I l I -> I
n m M w I -> I
a O G -> G
f G C F -> F
w X l s -> s
m n O -> o
o H S v ->
The right answer is: v
The model return: v
right
K w g -> g
q R S Y -> Y
T g t -> t
s Z C c -> c
u t B m y -> y
F E q -> q
u P F -> F
k b p Q s -> s
x Z b -> b
g G z -> z
t G n i p -> p
D l s Z m -> m
n S v B -> B
C m m v -> v
n N g q b -> b
n G Q -> Q
A D o h P ->
The right answer is: P
The model return: P
right
g q D W q -> q
a t L -> l
U o g -> g
V v G -> G
W V p L -> L
P a T -> T
C l t -> t
C r f -> f
q O k b -> b
g S C -> C
B k n -> n
Z l m -> m
Y m e -> e
i H s g y -> y
d y v I S -> S
S W S O x -> x
x D B ->
The right answer is: B
The model return: B
right
X C a s -> s
i x i e T -> t
B u r C -> C
o g M M e -> e
U Z e h g -> g
g q c a T -> t
f O y A i -> i
C e y -> y
P U W g -> g
s b u A -> a
e D n k -> k
h U Q n Y -> Y
c z H -> h
Q o d -> d
p B t x N -> N
i b R -> r
n w C ->
The right answer is: c
The model return: c
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 16]
==========================================================================
72
**line number: 4
e Y i -> e y i
W d Y P G -> w d Y P G
P l r -> p l r
k n D G y -> k n d G y
A L s N ->
The right answer is: a L s N
The model return: A L s N
false
I k I u C -> i k I u C
u A U -> u a U
S x e r -> s x e r
T A e W M -> t A e W M
S k D O B ->
The right answer is: s k D O B
The model return: s k D O B
right
M n g -> m n g
o h F -> o h f
p V d -> p v d
Y y H -> y y H
C w N e ->
The right answer is: c w N e
The model return: C w N e
false
**line number: 8
e Y i -> e y i
W d Y P G -> w d Y P G
P l r -> p l r
k n D G y -> k n d G y
A e V -> a e V
V Z e G -> v Z e G
o G U B -> o g U B
s B g v -> s b g v
A L s N ->
The right answer is: a L s N
The model return: a L s N
right
I k I u C -> i k I u C
u A U -> u a U
S x e r -> s x e r
T A e W M -> t A e W M
O e b B g -> o e b B g
N w t -> n w t
z d H n v -> z d h n v
p B D -> p b D
S k D O B ->
The right answer is: s k D O B
The model return: s k D O B
right
M n g -> m n g
o h F -> o h f
p V d -> p v d
Y y H -> y y H
R D B x -> r D B x
d v Q -> d v q
B r G Z -> b r G Z
k b c K S -> k b c k S
C w N e ->
The right answer is: c w N e
The model return: c w N e
right
v A C m L -> v a C m L
h v Y p q -> h v y p q
Q F g m -> q F g m
h Q g n -> h q g n
Z w g -> z w g
v c o l F -> v c o l f
O t E -> o t E
w Y T -> w y T
d W i ->
The right answer is: d w i
The model return: d w i
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 8]
==========================================================================
73
**line number: 4
L r 2 0 -> l r 0 2
Z 4 s r -> z 4 s r
9 A 2 b G -> 2 a 9 b G
b 9 2 V B -> b 2 9 v B
F g 2 ->
The right answer is: f g 2
The model return: F g 2
false
7 i Z 7 -> 7 i z 7
G 7 5 g -> g 5 7 g
m 1 S Q -> m 1 s Q
P x 9 -> p x 9
5 9 k M ->
The right answer is: 9 5 k m
The model return: 5 9 k M
false
**line number: 8
L r 2 0 -> l r 0 2
Z 4 s r -> z 4 s r
9 A 2 b G -> 2 a 9 b G
b 9 2 V B -> b 2 9 v B
5 P k -> 5 p k
M q 8 -> m q 8
q H 0 -> q h 0
8 c E -> 8 c e
F g 2 ->
The right answer is: f g 2
The model return: f g 2
right
7 i Z 7 -> 7 i z 7
G 7 5 g -> g 5 7 g
m 1 S Q -> m 1 s Q
P x 9 -> p x 9
h 6 t A m -> h 6 t a m
1 d 3 N -> 3 d 1 n
o 0 Q -> o 0 q
D 7 n -> d 7 n
5 9 k M ->
The right answer is: 9 5 k m
The model return: 5 9 k M
false
9 r B S 8 -> 8 r b S 9
k P T 1 -> k p T 1
8 g x e B -> 8 g x e b
b K i 8 C -> b k i 8 C
T R 4 p 0 -> t R 0 p 4
M 6 a -> m 6 a
g U 4 6 -> g u 6 4
x 0 D -> x 0 d
x 7 a C 3 ->
The right answer is: x 3 a c 7
The model return: x 7 a c 3
false
**line number: 16
L r 2 0 -> l r 0 2
Z 4 s r -> z 4 s r
9 A 2 b G -> 2 a 9 b G
b 9 2 V B -> b 2 9 v B
5 P k -> 5 p k
M q 8 -> m q 8
q H 0 -> q h 0
8 c E -> 8 c e
F 2 7 w R -> f 7 2 w R
w Y 5 -> w y 5
7 A w 3 t -> 3 a w 7 t
b F 9 -> b f 9
2 h L -> 2 h l
C m 2 7 A -> c m 7 2 A
o U i y 8 -> o u i y 8
l v U 8 -> l v u 8
F g 2 ->
The right answer is: f g 2
The model return: f g 2
right
7 i Z 7 -> 7 i z 7
G 7 5 g -> g 5 7 g
m 1 S Q -> m 1 s Q
P x 9 -> p x 9
h 6 t A m -> h 6 t a m
1 d 3 N -> 3 d 1 n
o 0 Q -> o 0 q
D 7 n -> d 7 n
B T i n 7 -> b T i n 7
H o 1 -> h o 1
8 4 a V -> 4 8 a v
3 T w -> 3 t w
C 4 F d -> c 4 F d
A 5 b -> a 5 b
4 z u R S -> 4 z u r S
g 6 M R -> g 6 m R
5 9 k M ->
The right answer is: 9 5 k m
The model return: 5 9 k m
false
9 r B S 8 -> 8 r b S 9
k P T 1 -> k p T 1
8 g x e B -> 8 g x e b
b K i 8 C -> b k i 8 C
T R 4 p 0 -> t R 0 p 4
M 6 a -> m 6 a
g U 4 6 -> g u 6 4
x 0 D -> x 0 d
f 3 X -> f 3 x
K v 9 -> k v 9
X 8 q -> x 8 q
n 6 N s -> n 6 n s
1 O w -> 1 o w
4 K w u q -> 4 k w u q
7 Y y -> 7 y y
5 C u -> 5 c u
x 7 a C 3 ->
The right answer is: x 3 a c 7
The model return: x 7 a c 3
false
**line number: 32
L r 2 0 -> l r 0 2
Z 4 s r -> z 4 s r
9 A 2 b G -> 2 a 9 b G
b 9 2 V B -> b 2 9 v B
5 P k -> 5 p k
M q 8 -> m q 8
q H 0 -> q h 0
8 c E -> 8 c e
F 2 7 w R -> f 7 2 w R
w Y 5 -> w y 5
7 A w 3 t -> 3 a w 7 t
b F 9 -> b f 9
2 h L -> 2 h l
C m 2 7 A -> c m 7 2 A
o U i y 8 -> o u i y 8
l v U 8 -> l v u 8
H 7 e 3 -> h 3 e 7
B 3 p -> b 3 p
9 h p U -> 9 h p u
0 m r Z Z -> 0 m r z Z
8 8 U f F -> 8 8 u f F
k 4 L -> k 4 l
i N 7 5 5 -> i n 5 5 7
c H 7 -> c h 7
5 o Y -> 5 o y
y 0 I -> y 0 i
F g W 3 z -> f g W 3 z
4 a D -> 4 a d
2 B q z -> 2 b q z
L 1 e u -> l 1 e u
4 l M v 8 -> 8 l m v 4
O k 0 -> o k 0
F g 2 ->
The right answer is: f g 2
The model return: f g 2
right
7 i Z 7 -> 7 i z 7
G 7 5 g -> g 5 7 g
m 1 S Q -> m 1 s Q
P x 9 -> p x 9
h 6 t A m -> h 6 t a m
1 d 3 N -> 3 d 1 n
o 0 Q -> o 0 q
D 7 n -> d 7 n
B T i n 7 -> b T i n 7
H o 1 -> h o 1
8 4 a V -> 4 8 a v
3 T w -> 3 t w
C 4 F d -> c 4 F d
A 5 b -> a 5 b
4 z u R S -> 4 z u r S
g 6 M R -> g 6 m R
G 7 5 w -> g 5 7 w
Q 7 F k e -> q 7 F k e
W 0 b -> w 0 b
N a 1 N W -> n a 1 N W
7 Q K z -> 7 q K z
5 E L e h -> 5 e L e h
4 7 V w -> 7 4 v w
V a P q 0 -> v a P q 0
Y 7 w -> y 7 w
4 E w -> 4 e w
Y g 0 -> y g 0
k D 3 -> k d 3
M n 2 -> m n 2
2 K 4 F k -> 4 k 2 F k
q U 5 -> q u 5
4 s m x X -> 4 s m x x
5 9 k M ->
The right answer is: 9 5 k m
The model return: 5 9 k m
false
9 r B S 8 -> 8 r b S 9
k P T 1 -> k p T 1
8 g x e B -> 8 g x e b
b K i 8 C -> b k i 8 C
T R 4 p 0 -> t R 0 p 4
M 6 a -> m 6 a
g U 4 6 -> g u 6 4
x 0 D -> x 0 d
f 3 X -> f 3 x
K v 9 -> k v 9
X 8 q -> x 8 q
n 6 N s -> n 6 n s
1 O w -> 1 o w
4 K w u q -> 4 k w u q
7 Y y -> 7 y y
5 C u -> 5 c u
0 a E -> 0 a e
4 6 9 c R -> 9 6 4 c r
X x 3 -> x x 3
Z 6 4 k -> z 4 6 k
2 Z y -> 2 z y
7 c U -> 7 c u
0 2 9 Q g -> 9 2 0 q g
N g 9 -> n g 9
v e K 0 -> v e k 0
4 7 X b -> 7 4 x b
W b 7 L F -> w b 7 L F
3 Q h E -> 3 q h E
q 7 2 C -> q 2 7 c
A O x 9 W -> a O x 9 W
8 G l -> 8 g l
H 5 e f p -> h 5 e f p
x 7 a C 3 ->
The right answer is: x 3 a c 7
The model return: x 7 a c 3
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
==========================================================================
74
**line number: 4
e 9 T -> 9
i 7 M 2 -> 7 2
h 4 Q -> 4
c 4 w h I -> 4
l Y 6 ->
The right answer is: 6
The model return: 6
right
S 7 W 3 i -> 7 3
G 7 5 g 2 -> 7 5 2
G F 4 n G -> 4
5 m 8 3 U -> 5 8 3
2 s Y P ->
The right answer is: 2
The model return: 2 Y P
false
d A 8 S 8 -> 8 8
L 2 r 5 4 -> 2 5 4
o 2 S -> 2
3 b m I H -> 3
8 T x r 6 ->
The right answer is: 8 6
The model return: 8
false
**line number: 8
e 9 T -> 9
i 7 M 2 -> 7 2
h 4 Q -> 4
c 4 w h I -> 4
a 2 H -> 2
A O E 8 c -> 8
s 5 O -> 5
3 R 1 x F -> 3 1
l Y 6 ->
The right answer is: 6
The model return: 6
right
S 7 W 3 i -> 7 3
G 7 5 g 2 -> 7 5 2
G F 4 n G -> 4
5 m 8 3 U -> 5 8 3
p 6 H -> 6
O K 8 1 w -> 8 1
U 8 z -> 8
K 9 3 w -> 9 3
2 s Y P ->
The right answer is: 2
The model return: 2 Y P
false
d A 8 S 8 -> 8 8
L 2 r 5 4 -> 2 5 4
o 2 S -> 2
3 b m I H -> 3
8 O d -> 8
G 2 9 m 3 -> 2 9 3
4 f Z P 8 -> 4 8
k T v 1 a -> 1
8 T x r 6 ->
The right answer is: 8 6
The model return: 8
false
**line number: 16
e 9 T -> 9
i 7 M 2 -> 7 2
h 4 Q -> 4
c 4 w h I -> 4
a 2 H -> 2
A O E 8 c -> 8
s 5 O -> 5
3 R 1 x F -> 3 1
7 m Q -> 7
5 R a 6 0 -> 5 6 0
o q 4 M -> 4
q E 1 r -> 1
w P 4 O T -> 4
e 5 D -> 5
d V B 4 A -> 4
5 V q 3 L -> 5 3
l Y 6 ->
The right answer is: 6
The model return: 6
right
S 7 W 3 i -> 7 3
G 7 5 g 2 -> 7 5 2
G F 4 n G -> 4
5 m 8 3 U -> 5 8 3
p 6 H -> 6
O K 8 1 w -> 8 1
U 8 z -> 8
K 9 3 w -> 9 3
Q 8 p -> 8
0 g Q -> 0
r X 4 d -> 4
q 9 H -> 9
F r Y 0 4 -> 0 4
2 g G -> 2
l 1 X 8 Z -> 1 8
E 7 l -> 7
2 s Y P ->
The right answer is: 2
The model return: 2
right
d A 8 S 8 -> 8 8
L 2 r 5 4 -> 2 5 4
o 2 S -> 2
3 b m I H -> 3
8 O d -> 8
G 2 9 m 3 -> 2 9 3
4 f Z P 8 -> 4 8
k T v 1 a -> 1
H 6 m -> 6
4 S Z r s -> 4
a 0 P -> 0
9 G 1 z -> 9 1
a 4 A -> 4
T k F 0 -> 0
1 q Y O Z -> 1
D 7 Y n -> 7
8 T x r 6 ->
The right answer is: 8 6
The model return: 8 6
right
3 R A 4 o -> 3 4
5 Y Z I w -> 5
z L 2 -> 2
X h 4 F -> 4
F w W 2 Z -> 2
m F 9 3 l -> 9 3
8 k N A -> 8
2 E 9 d -> 2 9
8 Q x -> 8
Q z 4 y -> 4
3 S A m -> 3
p 4 Y -> 4
7 r I 1 D -> 7 1
z 3 I -> 3
z 2 G -> 2
7 y 7 i Y -> 7 7
0 P h ->
The right answer is: 0
The model return: 0
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], 16]
==========================================================================
75
**line number: 4
v 7 x n U -> 4
I x 0 Q -> 3
m Z 4 S l -> 4
N W k 7 q -> 4
e 1 b m F ->
The right answer is: 4
The model return: 4
right
9 k X u -> 3
2 m F -> 2
n 1 h R -> 3
f B 0 -> 2
9 1 6 o O ->
The right answer is: 2
The model return: 3
false
H H 5 y Q -> 4
2 W a -> 2
e 4 R -> 2
5 B x b -> 3
O 5 i 8 ->
The right answer is: 2
The model return: 3
false
**line number: 8
v 7 x n U -> 4
I x 0 Q -> 3
m Z 4 S l -> 4
N W k 7 q -> 4
o 9 9 r B -> 3
4 e E -> 2
1 a S 5 -> 2
h L 2 -> 2
e 1 b m F ->
The right answer is: 4
The model return: 2
false
9 k X u -> 3
2 m F -> 2
n 1 h R -> 3
f B 0 -> 2
n P 9 Z -> 3
5 P k -> 2
X h 2 O 5 -> 3
v O 6 -> 2
9 1 6 o O ->
The right answer is: 2
The model return: 3
false
**line number: 16
v 7 x n U -> 4
I x 0 Q -> 3
m Z 4 S l -> 4
N W k 7 q -> 4
o 9 9 r B -> 3
4 e E -> 2
1 a S 5 -> 2
h L 2 -> 2
Y g 7 7 -> 2
F g 7 -> 2
n 0 H 2 -> 2
1 8 P v n -> 3
1 B X u -> 3
C t 1 l 1 -> 3
C 6 0 g -> 2
9 v X -> 2
e 1 b m F ->
The right answer is: 4
The model return: 2
false
9 k X u -> 3
2 m F -> 2
n 1 h R -> 3
f B 0 -> 2
n P 9 Z -> 3
5 P k -> 2
X h 2 O 5 -> 3
v O 6 -> 2
R Y 6 b T -> 4
O 7 v W -> 3
x 2 W -> 2
A 8 L t -> 3
U s 4 -> 2
1 3 c C -> 2
R v 5 -> 2
7 E V m -> 3
9 1 6 o O ->
The right answer is: 2
The model return: 2
right
H H 5 y Q -> 4
2 W a -> 2
e 4 R -> 2
5 B x b -> 3
E r H 7 -> 3
E 9 e l -> 3
p 9 I F v -> 4
4 d Y E Z -> 4
u S 1 -> 2
8 D h 3 -> 2
8 b C p -> 3
5 B c S -> 3
s G 1 -> 2
a 3 3 Y -> 2
h P 0 6 -> 2
B 8 K h -> 3
O 5 i 8 ->
The right answer is: 2
The model return: 2
right
A 0 x m -> 3
S l 9 -> 2
B 8 9 d -> 2
L T 6 g -> 3
x V 4 V q -> 4
Q 4 y m -> 3
k q v D 8 -> 4
L i P 8 0 -> 3
G A 3 o m -> 4
X 5 d -> 2
6 Y w n y -> 4
0 A 8 l -> 2
6 g V 1 -> 2
z g 3 P -> 3
4 U 6 r -> 2
B 5 Z c -> 3
7 b N d z ->
The right answer is: 4
The model return: 4
right
8 X y -> 2
S z i h 4 -> 4
e s u V 4 -> 4
1 H i -> 2
2 m c D Y -> 4
2 l D -> 2
x 3 E -> 2
7 B D z -> 3
1 O h -> 2
e U 4 -> 2
H e n 9 -> 3
2 d g R d -> 4
B x S u 1 -> 4
2 6 N t -> 2
9 e 2 T b -> 3
n 5 T 3 3 -> 2
T 0 4 f 3 ->
The right answer is: 2
The model return: 2
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], 16]
==========================================================================
76
**line number: 4
5 l 9 L -> 5 9
4 l Y -> 4
w h 0 C -> 0
8 d M -> 8
x 1 B r l ->
The right answer is: 1
The model return: 1
right
D y O 0 d -> 0
b 4 N 2 -> 4 2
T q H 2 e -> 2
0 f V a U -> 0
n V O 9 ->
The right answer is: 9
The model return: 9
right
d Q O 4 -> 4
s 8 S 9 -> 8 9
3 i U -> 3
I r 9 F -> 9
2 P E Y d ->
The right answer is: 2
The model return: 2
right
1 t n G v -> 1
e 2 l N -> 2
n A 4 8 Y -> 4 8
g 7 I -> 7
B 9 g ->
The right answer is: 9
The model return: 9
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
==========================================================================
77
**line number: 4
Q n i c -> q n i c
i k D C -> i k d
v n l b E -> v n l b e
W b e a w -> w b e a w
H q g l ->
The right answer is: h q g l
The model return: h q g l
right
h P t -> h p t
x A V x -> x a x
s Y u -> s y u
B u w Q B -> b u w
S c E ->
The right answer is: s c
The model return: s c
right
X r n v B -> x r n v
H E V S d -> h d
b X D -> b x
G v I G M -> g v
t p G ->
The right answer is: t p g
The model return: t p
false
X M r P A -> x r
E L p k -> e p k
x g v a P -> x g v a p
R n z b -> r n z b
U t H e ->
The right answer is: u t e
The model return: t H e
false
**line number: 8
Q n i c -> q n i c
i k D C -> i k d
v n l b E -> v n l b e
W b e a w -> w b e a w
d D i M -> d d i
I g M x -> i g x
t v F h -> t v f h
C r L R -> c r
H q g l ->
The right answer is: h q g l
The model return: h q g l
right
h P t -> h p t
x A V x -> x a x
s Y u -> s y u
B u w Q B -> b u w
k L V V Y -> k l
v C P n -> v c n
R u R G F -> r u
f A o S -> f a o
S c E ->
The right answer is: s c
The model return: s c
right
X r n v B -> x r n v
H E V S d -> h d
b X D -> b x
G v I G M -> g v
L y o y t -> l y o y t
O r y z -> o r y z
b Q d o O -> b q d o
m e u K -> m e u k
t p G ->
The right answer is: t p g
The model return: t p g
right
X M r P A -> x r
E L p k -> e p k
x g v a P -> x g v a p
R n z b -> r n z b
g H y f x -> g h y f x
W w m y g -> w w m y g
H a l -> h a l
U R t d -> u t d
U t H e ->
The right answer is: u t e
The model return: u t h e
false
b O l m h -> b o l m h
d e P u l -> d e p u l
i N P V E -> i n
N S l y K -> n l y
V R t -> v t
y m T w -> y m t w
O g h -> o g h
q U W -> q u
r Q P o c ->
The right answer is: r q o c
The model return: r q p o c
false
**line number: 16
Q n i c -> q n i c
i k D C -> i k d
v n l b E -> v n l b e
W b e a w -> w b e a w
d D i M -> d d i
I g M x -> i g x
t v F h -> t v f h
C r L R -> c r
C r a G -> c r a
w u U -> w u u
F g x x w -> f g x x w
X X Z a -> x a
R f N -> r f
p U u -> p u u
Z b p P -> z b p
a F n C a -> a f n a
H q g l ->
The right answer is: h q g l
The model return: h q g
false
h P t -> h p t
x A V x -> x a x
s Y u -> s y u
B u w Q B -> b u w
k L V V Y -> k l
v C P n -> v c n
R u R G F -> r u
f A o S -> f a o
Z o m -> z o m
d c c N -> d c c n
U g N s g -> u g s g
d Z A -> d z
x F I U D -> x f
s W a b Z -> s w a b
s g z k T -> s g z k t
o F e -> o f e
S c E ->
The right answer is: s c
The model return: s c
right
X r n v B -> x r n v
H E V S d -> h d
b X D -> b x
G v I G M -> g v
L y o y t -> l y o y t
O r y z -> o r y z
b Q d o O -> b q d o
m e u K -> m e u k
u l V z i -> u l v z i
p O x a -> p o x a
w h U o -> w h u o
i u G -> i u g
F K m G -> f m
r E i e -> r e i e
t O U B -> t o
g y P -> g y p
t p G ->
The right answer is: t p g
The model return: t p g
right
X M r P A -> x r
E L p k -> e p k
x g v a P -> x g v a p
R n z b -> r n z b
g H y f x -> g h y f x
W w m y g -> w w m y g
H a l -> h a l
U R t d -> u t d
G k x -> g k x
y G x -> y g x
g V f w m -> g v f w m
I Z c a -> i c a
v n Y -> v n y
X v X -> x v
M e R -> m e
T B z -> t z
U t H e ->
The right answer is: u t e
The model return: u t h
false
**line number: 32
Q n i c -> q n i c
i k D C -> i k d
v n l b E -> v n l b e
W b e a w -> w b e a w
d D i M -> d d i
I g M x -> i g x
t v F h -> t v f h
C r L R -> c r
C r a G -> c r a
w u U -> w u u
F g x x w -> f g x x w
X X Z a -> x a
R f N -> r f
p U u -> p u u
Z b p P -> z b p
a F n C a -> a f n a
x A w -> x a w
m R Z -> m r
V z W -> v z
f S y O t -> f s y t
E y k l -> e y k l
i Z H P C -> i z
y m S V t -> y m s t
B U s T k -> b s k
V n n W -> v n n
A i p k -> a i p k
n x C -> n x c
A e O U -> a e
I K H g P -> i g
V d H X K -> v d
g F x s -> g f x s
d W o -> d w o
H q g l ->
The right answer is: h q g l
The model return: h q g l
right
h P t -> h p t
x A V x -> x a x
s Y u -> s y u
B u w Q B -> b u w
k L V V Y -> k l
v C P n -> v c n
R u R G F -> r u
f A o S -> f a o
Z o m -> z o m
d c c N -> d c c n
U g N s g -> u g s g
d Z A -> d z
x F I U D -> x f
s W a b Z -> s w a b
s g z k T -> s g z k t
o F e -> o f e
F t I -> f t
z Y o -> z y o
P K g -> p g
q H r -> q h r
L V o V B -> l o
c T Y P -> c t
X u f L P -> x u f
l A B k -> l a k
N k V -> n k
Q L T T p -> q p
M t m -> m t m
m n V -> m n v
q W D -> q w
i e K A g -> i e k g
a C c o i -> a c c o i
H K i N -> h i
S c E ->
The right answer is: s c
The model return: s c
right
X r n v B -> x r n v
H E V S d -> h d
b X D -> b x
G v I G M -> g v
L y o y t -> l y o y t
O r y z -> o r y z
b Q d o O -> b q d o
m e u K -> m e u k
u l V z i -> u l v z i
p O x a -> p o x a
w h U o -> w h u o
i u G -> i u g
F K m G -> f m
r E i e -> r e i e
t O U B -> t o
g y P -> g y p
i p Z E -> i p z
H P H r B -> h r
C F p K G -> c p
o S a p x -> o s a p x
g g E -> g g e
n E s -> n e s
F N g z s -> f g z s
y V L z t -> y v z t
Q m B -> q m
s y O -> s y o
G w T P p -> g w p
T w H I -> t w
l M v P -> l m v
p L P -> p l
f C t c q -> f c t c q
K F M x -> k x
t p G ->
The right answer is: t p g
The model return: t p g
right
X M r P A -> x r
E L p k -> e p k
x g v a P -> x g v a p
R n z b -> r n z b
g H y f x -> g h y f x
W w m y g -> w w m y g
H a l -> h a l
U R t d -> u t d
G k x -> g k x
y G x -> y g x
g V f w m -> g v f w m
I Z c a -> i c a
v n Y -> v n y
X v X -> x v
M e R -> m e
T B z -> t z
Q Q u D Q -> q u
N n T -> n n
R H z R -> r z
s p M K -> s p m
W n f I -> w n f
p a t Y -> p a t y
K z b m t -> k z b m t
i w X T w -> i w x w
M M u p -> m u p
g Y O K -> g y
r W I c -> r w c
q u W l d -> q u w l d
V V d G -> v d
g o Z -> g o z
L e g -> l e g
m L y e -> m l y e
U t H e ->
The right answer is: u t e
The model return: u t h e
false
b O l m h -> b o l m h
d e P u l -> d e p u l
i N P V E -> i n
N S l y K -> n l y
V R t -> v t
y m T w -> y m t w
O g h -> o g h
q U W -> q u
q V a v -> q v a v
L R T g -> l g
z u Z R g -> z u z g
v Y f i -> v y f i
l c X -> l c x
A K v Y F -> a v
G K R n -> g n
M t T -> m t
p u v O p -> p u v o p
S g G W g -> s g g
Q Q N x -> q x
Y G o -> y o
X V Y b f -> x b f
b T I N -> b t
n x o M v -> n x o m v
e R x v p -> e r x v p
w P T P -> w p
Z O a -> z a
U H b l E -> u b l
p U W -> p u
M C K u T -> m u
r K T -> r k
A g B r -> a g r
w d K -> w d k
r Q P o c ->
The right answer is: r q o c
The model return: r q
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
==========================================================================
78
**line number: 4
e V D -> 1
L G g -> 1
W O w o s -> 1
C r G N -> 2
P i U ->
The right answer is: 1
The model return: 1
right
t F h -> 0
k Q H s -> 1
e Q Z -> 1
l R G F -> 2
y v N Y ->
The right answer is: 1
The model return: 2
false
z G O M P -> 3
q H k g Z -> 1
y b Z -> 0
W I f -> 1
d o K w ->
The right answer is: 0
The model return: 1
false
**line number: 8
e V D -> 1
L G g -> 1
W O w o s -> 1
C r G N -> 2
b e k E -> 0
x L y f -> 0
q S b B -> 1
A O I L t -> 3
P i U ->
The right answer is: 1
The model return: 1
right
t F h -> 0
k Q H s -> 1
e Q Z -> 1
l R G F -> 2
O P n g q -> 1
X y g b -> 0
u o D y m -> 0
o X V -> 1
y v N Y ->
The right answer is: 1
The model return: 0
false
z G O M P -> 3
q H k g Z -> 1
y b Z -> 0
W I f -> 1
x i G s -> 0
G A W z -> 2
t x i o I -> 0
t Y H r -> 1
d o K w ->
The right answer is: 0
The model return: 1
false
**line number: 16
e V D -> 1
L G g -> 1
W O w o s -> 1
C r G N -> 2
b e k E -> 0
x L y f -> 0
q S b B -> 1
A O I L t -> 3
e y m D G -> 1
t E U -> 1
i r L -> 0
v w H L v -> 1
G l i n -> 0
s o H i L -> 1
m b C -> 0
Q I p -> 1
P i U ->
The right answer is: 1
The model return: 1
right
t F h -> 0
k Q H s -> 1
e Q Z -> 1
l R G F -> 2
O P n g q -> 1
X y g b -> 0
u o D y m -> 0
o X V -> 1
g T S -> 1
w l b K -> 0
B W z F k -> 2
T m H Z O -> 3
n d M p i -> 0
R x W o A -> 2
I g e -> 0
Q K Z L x -> 3
y v N Y ->
The right answer is: 1
The model return: 0
false
z G O M P -> 3
q H k g Z -> 1
y b Z -> 0
W I f -> 1
x i G s -> 0
G A W z -> 2
t x i o I -> 0
t Y H r -> 1
q F B E -> 2
V n c c -> 0
H y q -> 0
i z L z c -> 0
H B u i -> 1
V U s -> 1
m h C r W -> 1
A t K -> 1
d o K w ->
The right answer is: 0
The model return: 0
right
l x D R t -> 1
K h D B h -> 2
E B T M x -> 3
e m x u Z -> 0
r X m -> 0
b Y g x D -> 1
y L y -> 0
x S h A A -> 2
f p M -> 0
m a A l -> 0
C g u -> 0
Y v F p e -> 1
l f w I L -> 1
L b n y -> 0
z H N q T -> 2
G z H l v -> 1
H z g n b ->
The right answer is: 0
The model return: 2
false
**line number: 32
e V D -> 1
L G g -> 1
W O w o s -> 1
C r G N -> 2
b e k E -> 0
x L y f -> 0
q S b B -> 1
A O I L t -> 3
e y m D G -> 1
t E U -> 1
i r L -> 0
v w H L v -> 1
G l i n -> 0
s o H i L -> 1
m b C -> 0
Q I p -> 1
H p n -> 0
q r E -> 0
X r W K -> 2
O w R p -> 1
g B s s -> 0
r h g N -> 0
g m P -> 0
K Y m D -> 2
G i l P y -> 1
U w k -> 0
i C i k y -> 0
C d u -> 0
z P p g -> 0
T S o c F -> 2
i P z n -> 0
s l K -> 0
P i U ->
The right answer is: 1
The model return: 0
false
t F h -> 0
k Q H s -> 1
e Q Z -> 1
l R G F -> 2
O P n g q -> 1
X y g b -> 0
u o D y m -> 0
o X V -> 1
g T S -> 1
w l b K -> 0
B W z F k -> 2
T m H Z O -> 3
n d M p i -> 0
R x W o A -> 2
I g e -> 0
Q K Z L x -> 3
X a k -> 0
F b v K g -> 1
P G k -> 1
p C K -> 1
C S t -> 1
g Q V c N -> 2
e K r -> 0
S o H i C -> 2
Z m W g -> 1
H u n g L -> 1
a G C -> 1
s V D b -> 1
W e M w f -> 1
q n A -> 0
z O u m s -> 0
C T G U o -> 3
y v N Y ->
The right answer is: 1
The model return: 2
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], -1]
==========================================================================
79
**line number: 4
u p n e Z -> u z
u T g P t -> u t
T F d F -> t F
g F a d -> g d
S w t ->
The right answer is: s t
The model return: w t
false
o G w -> o w
p Y A E X -> p X
y P Q -> y Q
n D s V -> n V
k D d ->
The right answer is: k d
The model return: k d
right
l r b y X -> l x
N r s a K -> n K
q F g -> q g
m G R -> m R
L W p v ->
The right answer is: l v
The model return: L p v
false
**line number: 8
u p n e Z -> u z
u T g P t -> u t
T F d F -> t F
g F a d -> g d
Z L F r Q -> z Q
A d r s -> a s
P h v -> p v
t A E -> t E
S w t ->
The right answer is: s t
The model return: s t
right
o G w -> o w
p Y A E X -> p X
y P Q -> y Q
n D s V -> n V
V p k O -> v O
W n o a -> w a
b X m x -> b x
v T M r -> v r
k D d ->
The right answer is: k d
The model return: k d
right
l r b y X -> l x
N r s a K -> n K
q F g -> q g
m G R -> m R
i f H k -> i k
C W z -> c z
n g N E -> n E
W l A -> w A
L W p v ->
The right answer is: l v
The model return: l p v
false
R w s z Q -> r Q
p h Z t -> p t
S t e -> s e
c K F W Y -> c Y
w w i E -> w e
y N g Y c -> y c
n Y S E V -> n V
l X g -> l g
O m K n K ->
The right answer is: o K
The model return: m n
false
**line number: 16
u p n e Z -> u z
u T g P t -> u t
T F d F -> t F
g F a d -> g d
Z L F r Q -> z Q
A d r s -> a s
P h v -> p v
t A E -> t E
m A U -> m U
C N P r V -> c V
L L c B e -> l e
d f O -> d o
C y o -> c o
Z K y L h -> z h
k N z -> k z
n X Y O O -> n O
S w t ->
The right answer is: s t
The model return: s t
right
o G w -> o w
p Y A E X -> p X
y P Q -> y Q
n D s V -> n V
V p k O -> v O
W n o a -> w a
b X m x -> b x
v T M r -> v r
w o B -> w b
u R q v -> u v
b S n g G -> b G
r S e l -> r l
W Q k -> w k
h H E v i -> h i
h h I g p -> h p
w t H f -> w f
k D d ->
The right answer is: k d
The model return: k d
right
l r b y X -> l x
N r s a K -> n K
q F g -> q g
m G R -> m R
i f H k -> i k
C W z -> c z
n g N E -> n E
W l A -> w A
c S e -> c e
Z R x N c -> z c
E N a -> e a
k N C -> k C
B Z z Z B -> b B
i T v W -> i W
V f t n -> v n
G p C x -> g x
L W p v ->
The right answer is: l v
The model return: l v
right
R w s z Q -> r Q
p h Z t -> p t
S t e -> s e
c K F W Y -> c Y
w w i E -> w e
y N g Y c -> y c
n Y S E V -> n V
l X g -> l g
w I G I -> w I
G g M K H -> g H
C k W a -> c a
m G a -> m a
L w E -> l E
O g I -> o I
G I v q o -> g o
P v K H -> p H
O m K n K ->
The right answer is: o K
The model return: o n
false
F S g R M -> f M
l d A P C -> l C
C d S O -> c O
Q e I B -> q B
T m L -> t L
G L h -> g h
Q E h -> q h
W M I G m -> w m
c T p W -> c W
U V G w -> u w
K p q g v -> k v
O v G -> o G
T d X I c -> t c
Y t O W g -> y g
w D K d -> w d
o a Y v H -> o H
w X M P ->
The right answer is: w P
The model return: w P
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], 16]
==========================================================================
80
**line number: 4
C Q 9 5 z -> c Q 9 5 5 z
4 R F h -> 4 4 r F h
f L 3 -> f l 3 3
4 U u -> 4 4 u u
o 3 F ->
The right answer is: o 3 3 f
The model return: o 3 3 F
false
A i m 7 -> a i m 7 7
o 4 O -> o 4 4 o
0 Q 8 4 w -> 0 q 8 4 4 w
3 L m 4 -> 3 l m 4 4
y M 0 ->
The right answer is: y m 0 0
The model return: y m 0 0
right
z H 0 D 2 -> z h 0 D 2 2
0 p E C I -> 0 0 p e C I
I c 1 V -> i c 1 1 V
A o 9 -> a o 9 9
E e 5 0 R ->
The right answer is: e e 5 0 0 R
The model return: e e 5 0 R
false
**line number: 8
C Q 9 5 z -> c Q 9 5 5 z
4 R F h -> 4 4 r F h
f L 3 -> f l 3 3
4 U u -> 4 4 u u
o Q V 5 b -> o q V 5 5 b
P i 4 -> p i 4 4
N 8 o N -> n 8 8 o N
I 0 w -> i 0 0 w
o 3 F ->
The right answer is: o 3 3 f
The model return: o 3 3 F
false
A i m 7 -> a i m 7 7
o 4 O -> o 4 4 o
0 Q 8 4 w -> 0 q 8 4 4 w
3 L m 4 -> 3 l m 4 4
H 7 g 7 -> h 7 g 7 7
n w 8 D -> n w 8 8 d
o p K 1 -> o p k 1 1
y 2 C -> y 2 2 c
y M 0 ->
The right answer is: y m 0 0
The model return: y m 0 0
right
z H 0 D 2 -> z h 0 D 2 2
0 p E C I -> 0 0 p e C I
I c 1 V -> i c 1 1 V
A o 9 -> a o 9 9
K b 6 5 9 -> k b 6 5 9 9
9 F F w -> 9 9 f F w
8 i L -> 8 8 i l
n 7 M -> n 7 7 m
E e 5 0 R ->
The right answer is: e e 5 0 0 R
The model return: e e 5 0 R 0
false
**line number: 16
C Q 9 5 z -> c Q 9 5 5 z
4 R F h -> 4 4 r F h
f L 3 -> f l 3 3
4 U u -> 4 4 u u
o Q V 5 b -> o q V 5 5 b
P i 4 -> p i 4 4
N 8 o N -> n 8 8 o N
I 0 w -> i 0 0 w
K u 1 -> k u 1 1
0 T u v -> 0 0 t u v
B k 8 R -> b k 8 8 R
L 6 g o X -> l 6 6 g o X
G V c 0 -> g V c 0 0
s 8 Z b m -> s 8 8 z b m
d 7 5 E -> d 7 5 5 e
h N 5 0 2 -> h n 5 0 2 2
o 3 F ->
The right answer is: o 3 3 f
The model return: o 3 3 F
false
A i m 7 -> a i m 7 7
o 4 O -> o 4 4 o
0 Q 8 4 w -> 0 q 8 4 4 w
3 L m 4 -> 3 l m 4 4
H 7 g 7 -> h 7 g 7 7
n w 8 D -> n w 8 8 d
o p K 1 -> o p k 1 1
y 2 C -> y 2 2 c
P a u 7 7 -> p a u 7 7 7
R 7 n E u -> r 7 7 n E u
O b 7 6 T -> o b 7 6 6 T
o y 2 P -> o y 2 2 p
F i 2 U i -> f i 2 2 U i
A 0 f o -> a 0 0 f o
K t 6 -> k t 6 6
3 e L -> 3 3 e l
y M 0 ->
The right answer is: y m 0 0
The model return: y m 0 0
right
z H 0 D 2 -> z h 0 D 2 2
0 p E C I -> 0 0 p e C I
I c 1 V -> i c 1 1 V
A o 9 -> a o 9 9
K b 6 5 9 -> k b 6 5 9 9
9 F F w -> 9 9 f F w
8 i L -> 8 8 i l
n 7 M -> n 7 7 m
3 G p 7 6 -> 3 g p 7 6 6
2 T c O -> 2 2 t c O
d 5 R -> d 5 5 r
u 0 n F -> u 0 0 n f
t G 8 -> t g 8 8
8 M b m -> 8 8 m b m
1 w H Q -> 1 1 w h Q
H U 8 7 x -> h U 8 7 7 x
E e 5 0 R ->
The right answer is: e e 5 0 0 R
The model return: e e 5 0 5 R
false
**line number: 32
C Q 9 5 z -> c Q 9 5 5 z
4 R F h -> 4 4 r F h
f L 3 -> f l 3 3
4 U u -> 4 4 u u
o Q V 5 b -> o q V 5 5 b
P i 4 -> p i 4 4
N 8 o N -> n 8 8 o N
I 0 w -> i 0 0 w
K u 1 -> k u 1 1
0 T u v -> 0 0 t u v
B k 8 R -> b k 8 8 R
L 6 g o X -> l 6 6 g o X
G V c 0 -> g V c 0 0
s 8 Z b m -> s 8 8 z b m
d 7 5 E -> d 7 5 5 e
h N 5 0 2 -> h n 5 0 2 2
6 h 1 G n -> 6 h 1 1 g n
2 U 6 8 d -> 2 u 6 8 8 d
1 t 1 5 S -> 1 t 1 5 5 s
q O H 5 -> q o H 5 5
k Z 6 -> k z 6 6
Q s 9 6 -> q s 9 6 6
i b 8 C -> i b 8 8 c
I x 8 -> i x 8 8
g O o 0 8 -> g o o 0 8 8
2 8 G f b -> 2 8 8 g f b
l G G B 9 -> l g G B 9 9
C 6 m -> c 6 6 m
N m 6 2 -> n m 6 2 2
l L G 5 -> l l G 5 5
i 4 B 2 -> i 4 b 2 2
W g 4 -> w g 4 4
o 3 F ->
The right answer is: o 3 3 f
The model return: o 3 3 f
right
A i m 7 -> a i m 7 7
o 4 O -> o 4 4 o
0 Q 8 4 w -> 0 q 8 4 4 w
3 L m 4 -> 3 l m 4 4
H 7 g 7 -> h 7 g 7 7
n w 8 D -> n w 8 8 d
o p K 1 -> o p k 1 1
y 2 C -> y 2 2 c
P a u 7 7 -> p a u 7 7 7
R 7 n E u -> r 7 7 n E u
O b 7 6 T -> o b 7 6 6 T
o y 2 P -> o y 2 2 p
F i 2 U i -> f i 2 2 U i
A 0 f o -> a 0 0 f o
K t 6 -> k t 6 6
3 e L -> 3 3 e l
L d 2 d -> l d 2 2 d
6 k F -> 6 6 k f
I 4 5 b -> i 4 5 5 b
1 U g -> 1 1 u g
8 B 2 q -> 8 b 2 2 q
n p Z 5 -> n p z 5 5
R 1 d G -> r 1 1 d G
i t g 8 N -> i t g 8 8 n
w T N i 1 -> w t N i 1 1
m 6 Z 2 -> m 6 z 2 2
n 2 X -> n 2 2 x
l V 9 p -> l v 9 9 p
0 7 K q -> 0 7 7 k q
W 9 o W -> w 9 9 o W
W b 7 7 -> w b 7 7 7
4 N g -> 4 4 n g
y M 0 ->
The right answer is: y m 0 0
The model return: y m 0 0
right
z H 0 D 2 -> z h 0 D 2 2
0 p E C I -> 0 0 p e C I
I c 1 V -> i c 1 1 V
A o 9 -> a o 9 9
K b 6 5 9 -> k b 6 5 9 9
9 F F w -> 9 9 f F w
8 i L -> 8 8 i l
n 7 M -> n 7 7 m
3 G p 7 6 -> 3 g p 7 6 6
2 T c O -> 2 2 t c O
d 5 R -> d 5 5 r
u 0 n F -> u 0 0 n f
t G 8 -> t g 8 8
8 M b m -> 8 8 m b m
1 w H Q -> 1 1 w h Q
H U 8 7 x -> h U 8 7 7 x
0 4 z M -> 0 4 4 z m
v 1 K -> v 1 1 k
5 B R o H -> 5 5 b R o H
0 G 4 y -> 0 g 4 4 y
6 1 G y -> 6 1 1 g y
M x 4 -> m x 4 4
I r 9 -> i r 9 9
N 3 f -> n 3 3 f
R U z 8 s -> r U z 8 8 s
3 R p -> 3 3 r p
0 r l O n -> 0 0 r l o n
E p s 6 -> e p s 6 6
4 B r W -> 4 4 b r W
V o x u 4 -> v o x u 4 4
Y 9 c -> y 9 9 c
I b H 2 -> i b H 2 2
E e 5 0 R ->
The right answer is: e e 5 0 0 R
The model return: e e 5 0 5 R
false
r 4 0 R -> r 4 0 0 r
t 5 M i -> t 5 5 m i
U 7 q -> u 7 7 q
7 l B 9 L -> 7 l b 9 9 L
T 5 g 6 b -> t 5 g 6 6 b
N 6 6 b 5 -> n 6 6 b 5 5
2 Q n -> 2 2 q n
7 2 b 4 O -> 7 2 b 4 4 o
Z e H 3 4 -> z e H 3 4 4
Y a 9 -> y a 9 9
e 2 e K S -> e 2 2 e k S
9 0 W m -> 9 0 0 w m
S 3 o t r -> s 3 3 o t r
h 0 n L -> h 0 0 n l
N 4 c -> n 4 4 c
n 4 L -> n 4 4 l
t A 8 3 z -> t a 8 3 3 z
t 1 I G -> t 1 1 i G
1 r V -> 1 1 r v
6 0 K E o -> 6 0 0 k E o
9 v z H S -> 9 9 v z h S
a 1 S -> a 1 1 s
C u 6 U -> c u 6 6 U
i N c 7 -> i n c 7 7
L u 5 8 A -> l u 5 8 8 A
7 Y T a 6 -> 7 y T a 6 6
Y k 8 p -> y k 8 8 p
n 2 x Y g -> n 2 2 x y g
2 4 I i -> 2 4 4 i i
5 L t -> 5 5 l t
7 3 8 c H -> 7 3 8 8 c h
8 A h q t -> 8 8 a h q t
m P e 0 V ->
The right answer is: m p e 0 0 V
The model return: m p e 0 0 v
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
==========================================================================
81
**line number: 4
3 f P -> 3 f p p
U 8 d 1 x -> u 8 d 1 x x
1 m 8 G -> 1 m 8 g g
s F l 9 -> s f l l 9
9 F f ->
The right answer is: 9 f f f
The model return: 9 f f
false
D b 1 -> d b b 1
R 9 6 r E -> r 9 6 r E E
a V 8 9 w -> a v 8 9 w w
0 d N -> 0 d n n
i 4 Z 7 ->
The right answer is: i 4 z z 7
The model return: i 4 z 7 z
false
**line number: 8
3 f P -> 3 f p p
U 8 d 1 x -> u 8 d 1 x x
1 m 8 G -> 1 m 8 g g
s F l 9 -> s f l l 9
I i 3 o -> i i 3 o o
3 o N y -> 3 o n y y
M 0 Q m -> m 0 Q m m
F 7 9 s -> f 7 9 s s
9 F f ->
The right answer is: 9 f f f
The model return: 9 f f f
right
D b 1 -> d b b 1
R 9 6 r E -> r 9 6 r E E
a V 8 9 w -> a v 8 9 w w
0 d N -> 0 d n n
A 5 W 1 x -> a 5 W 1 x x
3 9 1 O g -> 3 9 1 o g g
6 V g 8 z -> 6 v g 8 z z
4 t D -> 4 t d d
i 4 Z 7 ->
The right answer is: i 4 z z 7
The model return: i 4 z 7 7
false
5 H g g -> 5 h g g g
S S c 4 F -> s S c 4 F F
B 5 q -> b 5 q q
x 1 k V V -> x 1 k v V V
2 M k m -> 2 m k m m
X f i 7 -> x f i i 7
Y 5 z -> y 5 z z
x 6 O -> x 6 o o
t 3 r u E ->
The right answer is: t 3 r u e e
The model return: t 3 r u e E
false
**line number: 16
3 f P -> 3 f p p
U 8 d 1 x -> u 8 d 1 x x
1 m 8 G -> 1 m 8 g g
s F l 9 -> s f l l 9
I i 3 o -> i i 3 o o
3 o N y -> 3 o n y y
M 0 Q m -> m 0 Q m m
F 7 9 s -> f 7 9 s s
t K K 4 -> t k K K 4
D f 2 p -> d f 2 p p
V i 7 -> v i i 7
9 l 5 D -> 9 l 5 d d
b T o x 3 -> b t o x x 3
u 2 q I -> u 2 q i i
4 V m -> 4 v m m
G 4 a -> g 4 a a
9 F f ->
The right answer is: 9 f f f
The model return: 9 f f
false
D b 1 -> d b b 1
R 9 6 r E -> r 9 6 r E E
a V 8 9 w -> a v 8 9 w w
0 d N -> 0 d n n
A 5 W 1 x -> a 5 W 1 x x
3 9 1 O g -> 3 9 1 o g g
6 V g 8 z -> 6 v g 8 z z
4 t D -> 4 t d d
V l 5 -> v l l 5
3 m r X -> 3 m r x x
L d 8 -> l d d 8
n k E 5 y -> n k e 5 y y
s a 2 L -> s a 2 l l
1 n C -> 1 n c c
7 W l -> 7 w l l
f X a 3 g -> f x a 3 g g
i 4 Z 7 ->
The right answer is: i 4 z z 7
The model return: i 4 z 7 7
false
**line number: 32
3 f P -> 3 f p p
U 8 d 1 x -> u 8 d 1 x x
1 m 8 G -> 1 m 8 g g
s F l 9 -> s f l l 9
I i 3 o -> i i 3 o o
3 o N y -> 3 o n y y
M 0 Q m -> m 0 Q m m
F 7 9 s -> f 7 9 s s
t K K 4 -> t k K K 4
D f 2 p -> d f 2 p p
V i 7 -> v i i 7
9 l 5 D -> 9 l 5 d d
b T o x 3 -> b t o x x 3
u 2 q I -> u 2 q i i
4 V m -> 4 v m m
G 4 a -> g 4 a a
T g 4 m V -> t g 4 m V V
D I A 2 l -> d I A 2 l l
G q g 3 -> g q g g 3
y D n 9 -> y d n n 9
4 Z 9 l 3 -> 4 z 9 l l 3
W 8 q t -> w 8 q t t
2 6 s H -> 2 6 s h h
F d 9 l 8 -> f d 9 l l 8
9 O T T x -> 9 o T T x x
o t Y 1 W -> o t y 1 W W
2 E g N -> 2 e g N N
O z 1 -> o z z 1
P 2 u g -> p 2 u g g
f C 7 O -> f c 7 O O
X R 8 x -> x R 8 x x
1 M z -> 1 m z z
9 F f ->
The right answer is: 9 f f f
The model return: 9 f f
false
D b 1 -> d b b 1
R 9 6 r E -> r 9 6 r E E
a V 8 9 w -> a v 8 9 w w
0 d N -> 0 d n n
A 5 W 1 x -> a 5 W 1 x x
3 9 1 O g -> 3 9 1 o g g
6 V g 8 z -> 6 v g 8 z z
4 t D -> 4 t d d
V l 5 -> v l l 5
3 m r X -> 3 m r x x
L d 8 -> l d d 8
n k E 5 y -> n k e 5 y y
s a 2 L -> s a 2 l l
1 n C -> 1 n c c
7 W l -> 7 w l l
f X a 3 g -> f x a 3 g g
f 0 P -> f 0 p p
Q z D 4 -> q z D D 4
v N 9 -> v n n 9
g d 2 S -> g d 2 s s
0 q D -> 0 q d d
6 y 9 P -> 6 y 9 p p
o K A 1 -> o k A A 1
L 3 Q l -> l 3 Q l l
2 Q 4 i -> 2 q 4 i i
4 O 8 h -> 4 o 8 h h
r K b 9 t -> r k b 9 t t
g u W 4 S -> g u w 4 S S
W w 8 9 -> w w w 8 9
n H 7 -> n h h 7
u 0 9 N -> u 0 9 n n
2 r B -> 2 r b b
i 4 Z 7 ->
The right answer is: i 4 z z 7
The model return: i 4 z 7 z
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
==========================================================================
82
**line number: 4
3 H 2 o -> o
3 L g F A -> A
b D 4 -> d
1 Z q 0 -> q
9 0 A i N ->
The right answer is: N
The model return: N
right
h 5 G Q z -> z
3 s Y -> y
4 x B -> b
0 C B 6 x -> x
s p P 3 ->
The right answer is: p
The model return: p
right
4 p O 8 -> o
U y 5 -> y
W i 7 -> i
8 K b o -> o
o P 5 ->
The right answer is: p
The model return: 5
false
9 T q -> q
z U 2 -> u
i m 3 k X -> x
I 8 K w -> w
3 B y ->
The right answer is: y
The model return: y
right
8 S m S -> S
2 a F 9 8 -> f
7 p O 2 -> o
V 7 2 q p -> p
X r 6 u ->
The right answer is: u
The model return: u
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], 4]
==========================================================================
83
**line number: 4
W E d -> d
z c U K G -> u
b z B F M -> b
o q i B -> b
X s A ->
The right answer is: s
The model return: b
false
k m F S -> f
C G S u O -> u
G G s l G -> l
A i x I -> x
Y d s E ->
The right answer is: s
The model return: e
false
**line number: 8
W E d -> d
z c U K G -> u
b z B F M -> b
o q i B -> b
E u W -> u
y D r A -> r
f M H q w -> w
h Q A -> q
X s A ->
The right answer is: s
The model return: s
right
k m F S -> f
C G S u O -> u
G G s l G -> l
A i x I -> x
g h R -> r
u G O q -> q
l C m K -> m
c w m f F -> f
Y d s E ->
The right answer is: s
The model return: e
false
x N p -> p
G l c -> c
a I A g q -> q
X p B -> p
b Z c h n -> n
P x B -> x
O x c -> c
F S n -> n
g p N m K ->
The right answer is: m
The model return: m
right
m a f K -> k
e F p -> p
n e H d -> d
L f X -> f
F P U l -> l
K B r -> r
B F g E g -> g
z D O -> d
o H t k ->
The right answer is: k
The model return: t
false
**line number: 16
W E d -> d
z c U K G -> u
b z B F M -> b
o q i B -> b
E u W -> u
y D r A -> r
f M H q w -> w
h Q A -> q
P m R A -> m
N N z G n -> n
A g R -> g
p F S p -> p
A H w f -> f
Z f A V -> f
n R T V -> r
T O N L u -> u
X s A ->
The right answer is: s
The model return: s
right
k m F S -> f
C G S u O -> u
G G s l G -> l
A i x I -> x
g h R -> r
u G O q -> q
l C m K -> m
c w m f F -> f
W a k -> k
u F B -> f
F T N I r -> r
c T l n S -> n
M I q -> q
h b k Z -> z
E R q -> q
b e R -> r
Y d s E ->
The right answer is: s
The model return: s
right
x N p -> p
G l c -> c
a I A g q -> q
X p B -> p
b Z c h n -> n
P x B -> x
O x c -> c
F S n -> n
A W d -> d
o X R -> x
G h Z Y -> h
D r P B -> r
E W U q -> q
i G I -> g
e D S g -> g
F b f -> f
g p N m K ->
The right answer is: m
The model return: p
false
m a f K -> k
e F p -> p
n e H d -> d
L f X -> f
F P U l -> l
K B r -> r
B F g E g -> g
z D O -> d
M d k p g -> g
x q U -> u
L V g r k -> k
z R p -> p
g O m -> m
Z g o -> o
u y u l D -> d
Y k Y h -> h
o H t k ->
The right answer is: k
The model return: k
right
Z s E -> s
C G q -> q
d F G o -> o
Q S u -> u
I y r D -> r
T h V f -> f
B N o -> o
t D Z G -> d
d g T -> t
T d z -> z
z Y c -> c
m F S V -> f
x O m -> m
w b E V i -> i
e I Q O H -> i
t x O -> o
d g A I ->
The right answer is: a
The model return: d
false
**line number: 32
W E d -> d
z c U K G -> u
b z B F M -> b
o q i B -> b
E u W -> u
y D r A -> r
f M H q w -> w
h Q A -> q
P m R A -> m
N N z G n -> n
A g R -> g
p F S p -> p
A H w f -> f
Z f A V -> f
n R T V -> r
T O N L u -> u
q H q r -> r
d u I -> i
t x R u -> u
V X f -> f
F n l -> l
A e D G -> e
P Q m G -> m
y Z C w A -> w
m W w U -> w
x t m l G -> g
P m a o b -> b
H y S -> y
T S l -> l
V w L M -> w
k V s -> s
Y s F f m -> m
X s A ->
The right answer is: s
The model return: a
false
k m F S -> f
C G S u O -> u
G G s l G -> l
A i x I -> x
g h R -> r
u G O q -> q
l C m K -> m
c w m f F -> f
W a k -> k
u F B -> f
F T N I r -> r
c T l n S -> n
M I q -> q
h b k Z -> z
E R q -> q
b e R -> r
n E n -> n
x L B -> l
M h c -> c
k g W w -> w
S q a -> a
q l h G -> g
E u v z -> z
Y r R -> r
B m G -> m
R c Y -> c
f U q L -> q
x z S -> s
z k f s G -> g
Z t n s R -> s
w H n g -> g
T z G -> z
Y d s E ->
The right answer is: s
The model return: s
right
x N p -> p
G l c -> c
a I A g q -> q
X p B -> p
b Z c h n -> n
P x B -> x
O x c -> c
F S n -> n
A W d -> d
o X R -> x
G h Z Y -> h
D r P B -> r
E W U q -> q
i G I -> g
e D S g -> g
F b f -> f
s H N l -> l
f D F W n -> n
S p m -> m
r W l -> l
v W y -> y
K A S C q -> q
z w O T b -> b
f b f C F -> c
s n C -> c
Q u M d r -> r
G h u V -> u
d p F -> f
g W d L L -> d
U G m q k -> k
y U P -> u
g x G -> g
g p N m K ->
The right answer is: m
The model return: m
right
m a f K -> k
e F p -> p
n e H d -> d
L f X -> f
F P U l -> l
K B r -> r
B F g E g -> g
z D O -> d
M d k p g -> g
x q U -> u
L V g r k -> k
z R p -> p
g O m -> m
Z g o -> o
u y u l D -> d
Y k Y h -> h
Q q s v -> v
F U T Q d -> d
Z C H O w -> w
C M o -> o
u b g O W -> o
g y O b I -> b
L u Q -> u
I N U U h -> h
M a Y -> a
i K T c m -> m
T q V R P -> q
q G u -> u
c O m a z -> z
G F P p -> p
L E c C F -> c
B O G a G -> a
o H t k ->
The right answer is: k
The model return: t
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
==========================================================================
84
**line number: 4
k k y -> k k k z
h y k a -> h h y k b
h n u p -> h h n u q
k q v -> k k q w
e g s b ->
The right answer is: e e g s c
The model return: e e g s c
right
k a g o -> k k a g p
h b a i x -> h h b a i y
e g z m g -> e e g z m h
x w m q -> x x w m r
l g h ->
The right answer is: l l g i
The model return: l l g h
false
w s v -> w w s w
y z o q -> y y z o r
q m y q i -> q q m y q j
k b u l -> k k b u m
g k b r ->
The right answer is: g g k b s
The model return: g g k b r
false
**line number: 8
k k y -> k k k z
h y k a -> h h y k b
h n u p -> h h n u q
k q v -> k k q w
t o o u w -> t t o o u x
h f d q -> h h f d r
d y d -> d d y e
g z t n a -> g g z t n b
e g s b ->
The right answer is: e e g s c
The model return: e e g s c
right
k a g o -> k k a g p
h b a i x -> h h b a i y
e g z m g -> e e g z m h
x w m q -> x x w m r
o e c f -> o o e c g
s l o s -> s s l o t
l d f -> l l d g
n k d b r -> n n k d b s
l g h ->
The right answer is: l l g i
The model return: l l g i
right
w s v -> w w s w
y z o q -> y y z o r
q m y q i -> q q m y q j
k b u l -> k k b u m
r k c -> r r k d
u r e -> u u r f
m p s -> m m p t
m p b b b -> m m p b b c
g k b r ->
The right answer is: g g k b s
The model return: g g k b s
right
t c z r -> t t c z s
a i v -> a a i w
q v v -> q q v w
q f n y -> q q f n z
l t m v -> l l t m w
t c s a -> t t c s b
h l x q -> h h l x r
x n n h f -> x x n n h g
s w p z ->
The right answer is: s s w p a
The model return: s s w p a
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], 8]
==========================================================================
85
**line number: 4
n t o x n -> n n t o x n n
l w b r t -> l l w b r t t
v t z v -> v v t z v v
g d s e y -> g g d s e y y
u i q ->
The right answer is: u u i q q
The model return: u u i q q
right
9 4 6 -> 9 9 4 6 6
1 2 8 -> 1 1 2 8 8
5 4 4 -> 5 5 4 4 4
4 7 5 5 -> 4 4 7 5 5 5
4 8 5 5 5 ->
The right answer is: 4 4 8 5 5 5 5
The model return: 4 4 8 5 5 5 5
right
Y U M F -> Y Y U M F F
M W O -> M M W O O
G W W -> G G W W W
L O H E -> L L O H E E
F T U ->
The right answer is: F F T U U
The model return: F F T U U
right
c o v k -> c c o v k k
y z u q -> y y z u q q
g f p n -> g g f p n n
o d h f a -> o o d h f a a
y h g ->
The right answer is: y y h g g
The model return: y y h g g
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], 4]
==========================================================================
86
**line number: 4
1 3 9 7 -> 7
3 3 5 -> 5
3 3 2 8 -> 8
7 1 4 -> 4
6 9 7 ->
The right answer is: 7
The model return: 7
right
9 3 0 2 -> 2
3 6 7 4 5 -> 5
6 9 2 1 -> 1
9 6 3 -> 3
1 8 4 7 8 ->
The right answer is: 8
The model return: 8
right
L E Y R Y -> Y
X M R Q I -> I
B A O S C -> C
N L X C G -> G
H B M Q ->
The right answer is: Q
The model return: Q
right
R U R -> R
G U B Y R -> R
M Y S I I -> I
Q O S -> S
S H U ->
The right answer is: U
The model return: U
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], 4]
==========================================================================
87
**line number: 4
m t s l -> m m t s l
q x h l c -> q q x h l c
r x e -> r r x e
g m u b -> g g m u b
h i x l i ->
The right answer is: h h i x l i
The model return: h h i x l i
right
6 8 4 -> 6 6 8 4
8 6 1 2 7 -> 8 8 6 1 2 7
6 1 0 7 5 -> 6 6 1 0 7 5
8 9 9 -> 8 8 9 9
0 0 1 9 ->
The right answer is: 0 0 0 1 9
The model return: 0 0 0 1 9
right
i i k -> i i i k
w d s y m -> w w d s y m
q s c u -> q q s c u
x v o -> x x v o
k x g o q ->
The right answer is: k k x g o q
The model return: k k x g o q
right
0 0 0 -> 0 0 0 0
4 9 6 7 7 -> 4 4 9 6 7 7
4 8 5 -> 4 4 8 5
3 0 6 -> 3 3 0 6
6 2 1 4 ->
The right answer is: 6 6 2 1 4
The model return: 6 6 2 1 4
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
==========================================================================
88
**line number: 4
B M g 5 -> B B M g 5
4 8 l Y d -> 8 4 4 l Y d
K S L 2 k -> K K S L 2 k
P d 2 -> P P d 2
N 8 3 f 3 ->
The right answer is: N N 3 3 f 8
The model return: N N 8 3 f 3
false
0 l 0 p 0 -> 0 0 l 0 p 0
s f 6 -> s s f 6
7 b 2 -> 2 7 b 7
g z 2 r m -> g g z 2 r m
8 3 7 b ->
The right answer is: 7 3 8 8 b
The model return: 8 3 7 b
false
**line number: 8
B M g 5 -> B B M g 5
4 8 l Y d -> 8 4 4 l Y d
K S L 2 k -> K K S L 2 k
P d 2 -> P P d 2
S p 5 n -> S S p 5 n
0 A f W Y -> 0 0 A f W Y
t P p V 4 -> t t P p V 4
7 M i X -> 7 7 M i X
N 8 3 f 3 ->
The right answer is: N N 3 3 f 8
The model return: N N 8 3 f 3
false
0 l 0 p 0 -> 0 0 l 0 p 0
s f 6 -> s s f 6
7 b 2 -> 2 7 b 7
g z 2 r m -> g g z 2 r m
b g 1 6 e -> b b g 6 1 e
7 1 2 k 6 -> 6 2 1 7 k 7
o i 2 -> o o i 2
q 3 4 -> q q 4 3
8 3 7 b ->
The right answer is: 7 3 8 8 b
The model return: 3 8 7 b 3
false
**line number: 16
B M g 5 -> B B M g 5
4 8 l Y d -> 8 4 4 l Y d
K S L 2 k -> K K S L 2 k
P d 2 -> P P d 2
S p 5 n -> S S p 5 n
0 A f W Y -> 0 0 A f W Y
t P p V 4 -> t t P p V 4
7 M i X -> 7 7 M i X
9 e X K -> 9 9 e X K
n P u p 5 -> n n P u p 5
5 4 l E -> 4 5 5 l E
M C 9 m -> M M C 9 m
0 r M l -> 0 0 r M l
3 n P -> 3 3 n P
L r q 8 e -> L L r q 8 e
R b 6 -> R R b 6
N 8 3 f 3 ->
The right answer is: N N 3 3 f 8
The model return: N N 8 3 f 3 -> N N 8
false
0 l 0 p 0 -> 0 0 l 0 p 0
s f 6 -> s s f 6
7 b 2 -> 2 7 b 7
g z 2 r m -> g g z 2 r m
b g 1 6 e -> b b g 6 1 e
7 1 2 k 6 -> 6 2 1 7 k 7
o i 2 -> o o i 2
q 3 4 -> q q 4 3
d 0 0 5 -> d d 5 0 0
0 p 2 -> 2 0 p 0
i 7 b q n -> i i 7 b q n
p 9 7 -> p p 7 9
7 w o 2 -> 2 7 w o 7
9 8 g 7 4 -> 4 7 8 g 9 9
7 f 8 -> 8 7 f 7
3 7 c -> 7 3 3 c
8 3 7 b ->
The right answer is: 7 3 8 8 b
The model return: 7 3 8 b
false
**line number: 32
B M g 5 -> B B M g 5
4 8 l Y d -> 8 4 4 l Y d
K S L 2 k -> K K S L 2 k
P d 2 -> P P d 2
S p 5 n -> S S p 5 n
0 A f W Y -> 0 0 A f W Y
t P p V 4 -> t t P p V 4
7 M i X -> 7 7 M i X
9 e X K -> 9 9 e X K
n P u p 5 -> n n P u p 5
5 4 l E -> 4 5 5 l E
M C 9 m -> M M C 9 m
0 r M l -> 0 0 r M l
3 n P -> 3 3 n P
L r q 8 e -> L L r q 8 e
R b 6 -> R R b 6
e o 1 O -> e e o 1 O
g T 2 3 -> g g T 3 2
4 A y q -> 4 4 A y q
S 3 y -> S S 3 y
7 G e v A -> 7 7 G e v A
y H L 1 -> y y H L 1
c 3 a B -> c c 3 a B
y O 4 -> y y O 4
i G 5 u -> i i G 5 u
m U 4 -> m m U 4
9 U u -> 9 9 U u
s u 0 T -> s s u 0 T
p p D 1 -> p p p D 1
o 1 G T D -> o o 1 G T D
Z i 1 -> Z Z i 1
s 4 G I -> s s 4 G I
N 8 3 f 3 ->
The right answer is: N N 3 3 f 8
The model return: N N 8 3 f 3
false
0 l 0 p 0 -> 0 0 l 0 p 0
s f 6 -> s s f 6
7 b 2 -> 2 7 b 7
g z 2 r m -> g g z 2 r m
b g 1 6 e -> b b g 6 1 e
7 1 2 k 6 -> 6 2 1 7 k 7
o i 2 -> o o i 2
q 3 4 -> q q 4 3
d 0 0 5 -> d d 5 0 0
0 p 2 -> 2 0 p 0
i 7 b q n -> i i 7 b q n
p 9 7 -> p p 7 9
7 w o 2 -> 2 7 w o 7
9 8 g 7 4 -> 4 7 8 g 9 9
7 f 8 -> 8 7 f 7
3 7 c -> 7 3 3 c
f 6 u d -> f f 6 u d
e 2 o 3 -> e e 3 o 2
h l m 0 e -> h h l m 0 e
f h 6 k -> f f h 6 k
6 7 w -> 7 6 6 w
1 i g 8 s -> 8 1 i g 1 s
1 f w -> 1 1 f w
s 6 2 -> s s 2 6
3 p b -> 3 3 p b
5 4 r -> 4 5 5 r
9 0 3 5 h -> 5 3 0 9 9 h
z w 5 -> z z w 5
d q p s 6 -> d d q p s 6
1 2 e r -> 2 1 1 e r
5 9 i 3 -> 3 9 5 i 5
0 h o -> 0 0 h o
8 3 7 b ->
The right answer is: 7 3 8 8 b
The model return: 7 3 8 3
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], -1]
==========================================================================
89
**line number: 4
o 6 g -> 6
4 d m 2 2 -> 4 4 2 2
o 4 p -> 4
6 4 2 p -> 6 6 4 2
y z 2 ->
The right answer is: 2
The model return: y
false
S 6 y -> 6
N 6 4 b -> 6 4
1 e X -> 1 1
2 5 A Q y -> 2 2 5
0 W 5 8 u ->
The right answer is: 0 0 5 8
The model return: 0 0 5
false
**line number: 8
o 6 g -> 6
4 d m 2 2 -> 4 4 2 2
o 4 p -> 4
6 4 2 p -> 6 6 4 2
6 s 0 8 n -> 6 6 0 8
4 n o 0 -> 4 4 0
t o l 0 -> 0
k 2 7 8 -> 2 7 8
y z 2 ->
The right answer is: 2
The model return: 2
right
S 6 y -> 6
N 6 4 b -> 6 4
1 e X -> 1 1
2 5 A Q y -> 2 2 5
b U 9 -> 9
R 2 7 s -> 2 7
U 1 w s Y -> 1
T f 0 -> 0
0 W 5 8 u ->
The right answer is: 0 0 5 8
The model return: 5
false
f 1 4 N -> 1 4
g V 2 F -> 2
c 5 D -> 5
c o 2 l L -> 2
9 9 N a -> 9 9 9
0 G n -> 0 0
3 N e -> 3 3
Y g 3 -> 3
g 3 g V a ->
The right answer is: 3
The model return: 3
right
2 n 0 -> 2 2 0
b b 7 o -> 7
8 b 3 9 i -> 8 8 3 9
7 7 l -> 7 7 7
5 s l -> 5 5
8 7 g -> 8 8 7
7 k u -> 7 7
y w 5 h h -> 5
h d 8 6 ->
The right answer is: 8 6
The model return: 8
false
**line number: 16
o 6 g -> 6
4 d m 2 2 -> 4 4 2 2
o 4 p -> 4
6 4 2 p -> 6 6 4 2
6 s 0 8 n -> 6 6 0 8
4 n o 0 -> 4 4 0
t o l 0 -> 0
k 2 7 8 -> 2 7 8
w i x 4 -> 4
9 4 7 l 3 -> 9 9 4 7 3
8 3 0 5 g -> 8 8 3 0 5
f f f 5 7 -> 5 7
g 3 1 b 3 -> 3 1 3
7 m d w c -> 7 7
d 0 7 -> 0 7
7 b 5 -> 7 7 5
y z 2 ->
The right answer is: 2
The model return: 2
right
S 6 y -> 6
N 6 4 b -> 6 4
1 e X -> 1 1
2 5 A Q y -> 2 2 5
b U 9 -> 9
R 2 7 s -> 2 7
U 1 w s Y -> 1
T f 0 -> 0
5 S k x -> 5 5
0 F U p w -> 0 0
4 I d D -> 4 4
k N 3 2 7 -> 3 2 7
q m 0 S 0 -> 0 0
F a f 9 4 -> 9 4
G 1 Q h S -> 1
Q U r 1 -> 1
0 W 5 8 u ->
The right answer is: 0 0 5 8
The model return: 0
false
f 1 4 N -> 1 4
g V 2 F -> 2
c 5 D -> 5
c o 2 l L -> 2
9 9 N a -> 9 9 9
0 G n -> 0 0
3 N e -> 3 3
Y g 3 -> 3
5 i X -> 5 5
M l 0 k -> 0
x Z t 3 -> 3
8 M h -> 8 8
G w U 5 -> 5
o 0 O -> 0
c i R 5 8 -> 5 8
O n 6 q s -> 6
g 3 g V a ->
The right answer is: 3
The model return: a
false
**line number: 32
o 6 g -> 6
4 d m 2 2 -> 4 4 2 2
o 4 p -> 4
6 4 2 p -> 6 6 4 2
6 s 0 8 n -> 6 6 0 8
4 n o 0 -> 4 4 0
t o l 0 -> 0
k 2 7 8 -> 2 7 8
w i x 4 -> 4
9 4 7 l 3 -> 9 9 4 7 3
8 3 0 5 g -> 8 8 3 0 5
f f f 5 7 -> 5 7
g 3 1 b 3 -> 3 1 3
7 m d w c -> 7 7
d 0 7 -> 0 7
7 b 5 -> 7 7 5
1 2 p 6 -> 1 1 2 6
z 6 q a q -> 6
4 3 e l -> 4 4 3
7 w 8 -> 7 7 8
2 w 7 -> 2 2 7
i g n 0 t -> 0
7 d 8 g k -> 7 7 8
d l 8 1 -> 8 1
7 3 i -> 7 7 3
c 1 1 2 0 -> 1 1 2 0
n l 3 m g -> 3
h 4 y g e -> 4
0 l k p 7 -> 0 0 7
3 n 9 0 6 -> 3 3 9 0 6
y s c 4 a -> 4
0 0 d 0 0 -> 0 0 0 0 0
y z 2 ->
The right answer is: 2
The model return: 2
right
S 6 y -> 6
N 6 4 b -> 6 4
1 e X -> 1 1
2 5 A Q y -> 2 2 5
b U 9 -> 9
R 2 7 s -> 2 7
U 1 w s Y -> 1
T f 0 -> 0
5 S k x -> 5 5
0 F U p w -> 0 0
4 I d D -> 4 4
k N 3 2 7 -> 3 2 7
q m 0 S 0 -> 0 0
F a f 9 4 -> 9 4
G 1 Q h S -> 1
Q U r 1 -> 1
W 2 e w 1 -> 2 1
6 x N -> 6 6
8 m Q 6 2 -> 8 8 6 2
M 4 n 3 -> 4 3
s V 3 -> 3
4 G a -> 4 4
x 8 r P F -> 8
B 9 s m -> 9
u B 1 V B -> 1
8 7 m C G -> 8 8 7
p 0 r N -> 0
U P u 7 Q -> 7
o 7 O G -> 7
4 Q e -> 4 4
z 1 E a -> 1
d G 7 -> 7
0 W 5 8 u ->
The right answer is: 0 0 5 8
The model return: 0
false
f 1 4 N -> 1 4
g V 2 F -> 2
c 5 D -> 5
c o 2 l L -> 2
9 9 N a -> 9 9 9
0 G n -> 0 0
3 N e -> 3 3
Y g 3 -> 3
5 i X -> 5 5
M l 0 k -> 0
x Z t 3 -> 3
8 M h -> 8 8
G w U 5 -> 5
o 0 O -> 0
c i R 5 8 -> 5 8
O n 6 q s -> 6
S x 2 -> 2
o 6 A 8 R -> 6 8
d 3 H p e -> 3
W 4 g W -> 4
F G 6 u U -> 6
R S 7 u -> 7
Y o 8 p -> 8
n Q h 1 r -> 1
I 8 t -> 8
l 7 G U g -> 7
8 V l -> 8 8
g 2 H a -> 2
C 0 g r I -> 0
u O 9 -> 9
7 2 E h 5 -> 7 7 2 5
v 5 O -> 5
g 3 g V a ->
The right answer is: 3
The model return: 3
right
2 n 0 -> 2 2 0
b b 7 o -> 7
8 b 3 9 i -> 8 8 3 9
7 7 l -> 7 7 7
5 s l -> 5 5
8 7 g -> 8 8 7
7 k u -> 7 7
y w 5 h h -> 5
z 0 i t r -> 0
4 3 2 z v -> 4 4 3 2
d 1 x -> 1
2 r q -> 2 2
3 2 q -> 3 3 2
p 5 3 9 l -> 5 3 9
8 2 9 k 1 -> 8 8 2 9 1
z 9 1 1 -> 9 1 1
i w 1 z g -> 1
t 3 8 1 1 -> 3 8 1 1
1 q n -> 1 1
u b m 5 -> 5
2 0 k 5 5 -> 2 2 0 5 5
1 u u -> 1 1
4 e 9 -> 4 4 9
0 b 0 -> 0 0 0
4 q w o -> 4 4
c 5 7 d -> 5 7
q 5 k v 1 -> 5 1
a 5 8 k d -> 5 8
d d 6 -> 6
7 4 6 n -> 7 7 4 6
4 p t -> 4 4
i 0 9 -> 0 9
h d 8 6 ->
The right answer is: 8 6
The model return: 8 6
right
R O 9 X -> 9
7 I 0 -> 7 7 0
T 3 9 -> 3 9
7 U U T -> 7 7
8 G 0 -> 8 8 0
0 3 O 3 0 -> 0 0 3 3 0
5 B 4 D G -> 5 5 4
3 G 2 4 6 -> 3 3 2 4 6
3 N 6 1 1 -> 3 3 6 1 1
5 H B 9 -> 5 5 9
8 1 W -> 8 8 1
H 2 Q M -> 2
A F 9 6 -> 9 6
0 V 6 U V -> 0 0 6
D 7 D -> 7
2 3 E G -> 2 2 3
G D 9 3 0 -> 9 3 0
I 1 0 8 -> 1 0 8
O X K 2 7 -> 2 7
0 0 Q H -> 0 0 0
F 3 F 5 4 -> 3 5 4
S 3 N -> 3
8 G 7 3 -> 8 8 7 3
X 2 3 -> 2 3
Q 2 G -> 2
1 5 7 S G -> 1 1 5 7
E H 9 D -> 9
F 9 Y 3 9 -> 9 3 9
L H 6 -> 6
6 L 4 E Y -> 6 6 4
I 6 6 -> 6 6
G B 2 4 3 -> 2 4 3
1 T 4 ->
The right answer is: 1 1 4
The model return: 1
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
==========================================================================
90
**line number: 4
e 4 0 s 7 -> 3
c r 1 -> 3
3 4 h -> 1
w 7 p -> 3
0 3 8 6 t ->
The right answer is: 1
The model return: 3
false
W M 0 H -> 4
G M 4 A E -> 5
8 9 X 3 0 -> 1
Q 6 5 9 H -> 3
7 N 1 ->
The right answer is: 1
The model return: 8
false
**line number: 8
e 4 0 s 7 -> 3
c r 1 -> 3
3 4 h -> 1
w 7 p -> 3
h 3 a -> 3
8 y h 7 9 -> 2
2 r 8 b -> 2
i 6 w -> 3
0 3 8 6 t ->
The right answer is: 1
The model return: 3
false
W M 0 H -> 4
G M 4 A E -> 5
8 9 X 3 0 -> 1
Q 6 5 9 H -> 3
5 G X -> 2
M D 8 E 1 -> 4
6 Y I -> 2
6 2 0 7 Z -> 1
7 N 1 ->
The right answer is: 1
The model return: 4
false
**line number: 16
e 4 0 s 7 -> 3
c r 1 -> 3
3 4 h -> 1
w 7 p -> 3
h 3 a -> 3
8 y h 7 9 -> 2
2 r 8 b -> 2
i 6 w -> 3
b 6 8 5 1 -> 2
u d 6 9 w -> 4
c w o 8 0 -> 4
3 h 6 3 6 -> 1
b 0 0 -> 2
m 5 6 3 -> 2
q 1 z g a -> 5
u f 4 7 -> 3
0 3 8 6 t ->
The right answer is: 1
The model return: 3
false
W M 0 H -> 4
G M 4 A E -> 5
8 9 X 3 0 -> 1
Q 6 5 9 H -> 3
5 G X -> 2
M D 8 E 1 -> 4
6 Y I -> 2
6 2 0 7 Z -> 1
T K H 6 0 -> 4
5 W D 6 6 -> 2
8 1 O -> 1
6 G T 3 Z -> 3
1 K U 6 -> 2
K 3 C X -> 4
I 1 9 5 L -> 3
8 G N L -> 3
7 N 1 ->
The right answer is: 1
The model return: 1
right
1 K 9 6 6 -> 1
N Q V 8 -> 4
F 3 2 -> 2
Q P W 6 4 -> 4
1 7 N -> 1
1 0 8 N -> 1
B 2 L -> 3
V M 4 -> 3
O 5 Y 1 7 -> 3
U 6 R B I -> 5
Z 5 0 9 R -> 3
1 H 2 Y -> 2
T V X 8 2 -> 4
3 B 8 -> 1
F A K 1 Y -> 5
1 S R -> 2
E 8 U D S ->
The right answer is: 5
The model return: 3
false
**line number: 32
e 4 0 s 7 -> 3
c r 1 -> 3
3 4 h -> 1
w 7 p -> 3
h 3 a -> 3
8 y h 7 9 -> 2
2 r 8 b -> 2
i 6 w -> 3
b 6 8 5 1 -> 2
u d 6 9 w -> 4
c w o 8 0 -> 4
3 h 6 3 6 -> 1
b 0 0 -> 2
m 5 6 3 -> 2
q 1 z g a -> 5
u f 4 7 -> 3
o 5 b p 4 -> 4
g t 7 -> 3
8 g 2 -> 1
l 6 h -> 3
g 1 r -> 3
p s 6 2 -> 3
b h 0 -> 3
y 6 0 g -> 3
7 3 3 1 m -> 1
x 5 8 2 2 -> 2
0 9 p v -> 2
s 2 3 4 -> 2
0 t w -> 2
i r 8 r w -> 5
4 b e -> 2
b s 2 -> 3
0 3 8 6 t ->
The right answer is: 1
The model return: 2
false
W M 0 H -> 4
G M 4 A E -> 5
8 9 X 3 0 -> 1
Q 6 5 9 H -> 3
5 G X -> 2
M D 8 E 1 -> 4
6 Y I -> 2
6 2 0 7 Z -> 1
T K H 6 0 -> 4
5 W D 6 6 -> 2
8 1 O -> 1
6 G T 3 Z -> 3
1 K U 6 -> 2
K 3 C X -> 4
I 1 9 5 L -> 3
8 G N L -> 3
M P C 0 G -> 5
1 G P D -> 3
5 F 5 4 -> 1
5 5 5 M 3 -> 1
5 L P -> 2
5 R 2 -> 1
D 1 L -> 3
7 2 8 R -> 1
N 4 7 D -> 3
P 8 8 9 -> 2
I 5 R -> 3
M O Y 3 2 -> 4
5 Y B R Z -> 4
2 U K 8 H -> 3
5 6 G 0 -> 1
T O 2 -> 3
7 N 1 ->
The right answer is: 1
The model return: 2
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
==========================================================================
91
**line number: 4
2 g g z t -> 2 2
9 o 8 f m -> 9 9 8
n 5 r 2 -> 5 2
h 7 9 -> 7 9
a r 0 w 6 ->
The right answer is: 0 6
The model return: 0 6
right
D 0 Y -> 0
5 4 Q -> 5 5 4
G K R 1 -> 1
5 8 3 P -> 5 5 8 3
W 7 6 D ->
The right answer is: 7 6
The model return: 7 7 6 D
false
5 3 g 5 8 -> 5 5 3 5 8
3 w a -> 3 3
0 y n b g -> 0 0
o 2 m 2 -> 2 2
u 2 3 a ->
The right answer is: 2 3
The model return: 2 2
false
**line number: 8
2 g g z t -> 2 2
9 o 8 f m -> 9 9 8
n 5 r 2 -> 5 2
h 7 9 -> 7 9
5 5 o 0 -> 5 5 5 0
3 o 3 -> 3 3 3
l 7 k -> 7
e 2 6 9 -> 2 6 9
a r 0 w 6 ->
The right answer is: 0 6
The model return: 6
false
D 0 Y -> 0
5 4 Q -> 5 5 4
G K R 1 -> 1
5 8 3 P -> 5 5 8 3
G 4 0 E -> 4 0
K 5 6 G -> 5 6
Q D N 7 6 -> 7 6
3 V N -> 3 3
W 7 6 D ->
The right answer is: 7 6
The model return: 7 6
right
5 3 g 5 8 -> 5 5 3 5 8
3 w a -> 3 3
0 y n b g -> 0 0
o 2 m 2 -> 2 2
z 3 o -> 3
7 b 7 -> 7 7 7
0 v 1 -> 0 0 1
y z 4 -> 4
u 2 3 a ->
The right answer is: 2 3
The model return: 2 3
right
V 5 l 1 o -> 5 1
l 2 X -> 2
M 6 o i -> 6
D c 3 -> 3
K 6 I p -> 6
B 5 3 H g -> 5 3
7 i V Z -> 7 7
i Q 2 C 9 -> 2 9
d 1 F ->
The right answer is: 1
The model return: 1
right
0 2 E -> 0 0 2
9 1 2 D L -> 9 9 1 2
7 M 2 9 R -> 7 7 2 9
0 I 4 1 0 -> 0 0 4 1 0
3 E H -> 3 3
7 K 7 -> 7 7 7
0 A 3 G 7 -> 0 0 3 7
0 R 6 1 -> 0 0 6 1
B N 3 1 U ->
The right answer is: 3 1
The model return: B B N 3 1 U
false
**line number: 16
2 g g z t -> 2 2
9 o 8 f m -> 9 9 8
n 5 r 2 -> 5 2
h 7 9 -> 7 9
5 5 o 0 -> 5 5 5 0
3 o 3 -> 3 3 3
l 7 k -> 7
e 2 6 9 -> 2 6 9
3 5 0 w -> 3 3 5 0
7 v u e 0 -> 7 7 0
k 8 b -> 8
k 5 b -> 5
4 t q -> 4 4
h 6 7 5 8 -> 6 7 5 8
t 7 t s g -> 7
6 7 g 3 7 -> 6 6 7 3 7
a r 0 w 6 ->
The right answer is: 0 6
The model return: a r 0 w 6
false
D 0 Y -> 0
5 4 Q -> 5 5 4
G K R 1 -> 1
5 8 3 P -> 5 5 8 3
G 4 0 E -> 4 0
K 5 6 G -> 5 6
Q D N 7 6 -> 7 6
3 V N -> 3 3
I L 6 Q E -> 6
T 7 H T 1 -> 7 1
1 M P A -> 1 1
7 0 A 6 7 -> 7 7 0 6 7
D V N 3 -> 3
4 G 4 -> 4 4 4
9 6 H 4 -> 9 9 6 4
3 I 8 -> 3 3 8
W 7 6 D ->
The right answer is: 7 6
The model return: 7 6
right
5 3 g 5 8 -> 5 5 3 5 8
3 w a -> 3 3
0 y n b g -> 0 0
o 2 m 2 -> 2 2
z 3 o -> 3
7 b 7 -> 7 7 7
0 v 1 -> 0 0 1
y z 4 -> 4
1 i 9 5 -> 1 1 9 5
0 p w v n -> 0 0
z w 5 -> 5
a 5 0 -> 5 0
9 w h g b -> 9 9
5 c 9 b 1 -> 5 5 9 1
1 5 s 6 u -> 1 1 5 6
l 8 m -> 8
u 2 3 a ->
The right answer is: 2 3
The model return: 2 3
right
V 5 l 1 o -> 5 1
l 2 X -> 2
M 6 o i -> 6
D c 3 -> 3
K 6 I p -> 6
B 5 3 H g -> 5 3
7 i V Z -> 7 7
i Q 2 C 9 -> 2 9
L b 1 -> 1
6 s G -> 6 6
W 7 q -> 7
l 1 8 G -> 1 8
7 l A -> 7 7
e 6 o D -> 6
N c 6 V -> 6
4 o B -> 4 4
d 1 F ->
The right answer is: 1
The model return: 1
right
0 2 E -> 0 0 2
9 1 2 D L -> 9 9 1 2
7 M 2 9 R -> 7 7 2 9
0 I 4 1 0 -> 0 0 4 1 0
3 E H -> 3 3
7 K 7 -> 7 7 7
0 A 3 G 7 -> 0 0 3 7
0 R 6 1 -> 0 0 6 1
B F 2 4 1 -> 2 4 1
E I 0 -> 0
X 1 M -> 1
E 1 5 -> 1 5
T 0 1 -> 0 1
7 Q I -> 7 7
A 2 K -> 2
W 0 4 4 C -> 0 4 4
B N 3 1 U ->
The right answer is: 3 1
The model return: 3 1 U
false
**line number: 32
2 g g z t -> 2 2
9 o 8 f m -> 9 9 8
n 5 r 2 -> 5 2
h 7 9 -> 7 9
5 5 o 0 -> 5 5 5 0
3 o 3 -> 3 3 3
l 7 k -> 7
e 2 6 9 -> 2 6 9
3 5 0 w -> 3 3 5 0
7 v u e 0 -> 7 7 0
k 8 b -> 8
k 5 b -> 5
4 t q -> 4 4
h 6 7 5 8 -> 6 7 5 8
t 7 t s g -> 7
6 7 g 3 7 -> 6 6 7 3 7
r g 0 r -> 0
r 8 h q f -> 8
9 k h q -> 9 9
9 4 3 q -> 9 9 4 3
9 3 c 7 u -> 9 9 3 7
8 5 u o 4 -> 8 8 5 4
1 4 b 1 -> 1 1 4 1
g d 9 a e -> 9
9 0 r -> 9 9 0
g b 2 v y -> 2
s g g 7 v -> 7
7 0 x 5 -> 7 7 0 5
w 8 6 3 -> 8 6 3
r 5 0 8 e -> 5 0 8
7 3 0 1 c -> 7 7 3 0 1
6 v 6 h 4 -> 6 6 6 4
a r 0 w 6 ->
The right answer is: 0 6
The model return: 0
false
D 0 Y -> 0
5 4 Q -> 5 5 4
G K R 1 -> 1
5 8 3 P -> 5 5 8 3
G 4 0 E -> 4 0
K 5 6 G -> 5 6
Q D N 7 6 -> 7 6
3 V N -> 3 3
I L 6 Q E -> 6
T 7 H T 1 -> 7 1
1 M P A -> 1 1
7 0 A 6 7 -> 7 7 0 6 7
D V N 3 -> 3
4 G 4 -> 4 4 4
9 6 H 4 -> 9 9 6 4
3 I 8 -> 3 3 8
X B Q 4 -> 4
U B 3 W 9 -> 3 9
9 A P L S -> 9 9
9 7 6 B I -> 9 9 7 6
D 1 4 -> 1 4
I 6 1 L 0 -> 6 1 0
6 P 4 5 -> 6 6 4 5
G L 8 X 9 -> 8 9
T A V 2 4 -> 2 4
1 U H Z T -> 1 1
Q D G 1 1 -> 1 1
A 6 2 -> 6 2
7 Y H 0 M -> 7 7 0
T 1 K L -> 1
Q L 9 X -> 9
H B 2 6 -> 2 6
W 7 6 D ->
The right answer is: 7 6
The model return: 7 6
right
5 3 g 5 8 -> 5 5 3 5 8
3 w a -> 3 3
0 y n b g -> 0 0
o 2 m 2 -> 2 2
z 3 o -> 3
7 b 7 -> 7 7 7
0 v 1 -> 0 0 1
y z 4 -> 4
1 i 9 5 -> 1 1 9 5
0 p w v n -> 0 0
z w 5 -> 5
a 5 0 -> 5 0
9 w h g b -> 9 9
5 c 9 b 1 -> 5 5 9 1
1 5 s 6 u -> 1 1 5 6
l 8 m -> 8
g 2 l e -> 2
k s u 0 7 -> 0 7
k 8 v x -> 8
h x 3 -> 3
8 b d 0 -> 8 8 0
v 3 g 9 -> 3 9
p 3 5 g -> 3 5
g 9 i 4 x -> 9 4
3 h 5 2 -> 3 3 5 2
d 9 u 7 -> 9 7
s 5 7 -> 5 7
o z 2 -> 2
t 0 8 4 b -> 0 8 4
2 n n e u -> 2 2
y 6 2 -> 6 2
l s 9 -> 9
u 2 3 a ->
The right answer is: 2 3
The model return: 2 3
right
V 5 l 1 o -> 5 1
l 2 X -> 2
M 6 o i -> 6
D c 3 -> 3
K 6 I p -> 6
B 5 3 H g -> 5 3
7 i V Z -> 7 7
i Q 2 C 9 -> 2 9
L b 1 -> 1
6 s G -> 6 6
W 7 q -> 7
l 1 8 G -> 1 8
7 l A -> 7 7
e 6 o D -> 6
N c 6 V -> 6
4 o B -> 4 4
f 0 K V -> 0
c 8 Y 0 -> 8 0
3 c K -> 3 3
G s 8 a g -> 8
a C 6 G -> 6
0 H w -> 0 0
P A c 1 v -> 1
y 7 Q 1 -> 7 1
E 3 w 9 i -> 3 9
r 8 h P -> 8
4 e 2 N -> 4 4 2
x R 7 Q M -> 7
l 1 V -> 1
I 8 t e 7 -> 8 7
l 5 6 A -> 5 6
e 9 b T -> 9
d 1 F ->
The right answer is: 1
The model return: 1
right
0 2 E -> 0 0 2
9 1 2 D L -> 9 9 1 2
7 M 2 9 R -> 7 7 2 9
0 I 4 1 0 -> 0 0 4 1 0
3 E H -> 3 3
7 K 7 -> 7 7 7
0 A 3 G 7 -> 0 0 3 7
0 R 6 1 -> 0 0 6 1
B F 2 4 1 -> 2 4 1
E I 0 -> 0
X 1 M -> 1
E 1 5 -> 1 5
T 0 1 -> 0 1
7 Q I -> 7 7
A 2 K -> 2
W 0 4 4 C -> 0 4 4
7 6 Q -> 7 7 6
N 9 1 -> 9 1
Y 8 7 5 S -> 8 7 5
1 I T 4 -> 1 1 4
6 3 W -> 6 6 3
9 B I 3 -> 9 9 3
V 4 8 1 9 -> 4 8 1 9
6 7 F 9 G -> 6 6 7 9
S 8 2 5 5 -> 8 2 5 5
A W 1 5 D -> 1 5
S 5 6 8 -> 5 6 8
1 R 3 O 6 -> 1 1 3 6
0 2 Y 8 5 -> 0 0 2 8 5
E B 1 F 9 -> 1 9
5 L 5 -> 5 5 5
4 L Z -> 4 4
B N 3 1 U ->
The right answer is: 3 1
The model return: 3 1
right
@@@@@@@@@@@@ 32 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], 32]
==========================================================================
92
**line number: 4
W n P H L -> n
U h m -> h m
S D m -> m
D Z l I E -> l
h r D ->
The right answer is: h h r
The model return: r
false
Q g O H -> g
M C R w v -> w v
t K L -> t t
w d a V -> w w d a
X c p ->
The right answer is: c p
The model return: X c p
false
**line number: 8
W n P H L -> n
U h m -> h m
S D m -> m
D Z l I E -> l
c t a p L -> c c t a p
Z t s S -> t s
e g L -> e e g
k M b -> k k b
h r D ->
The right answer is: h h r
The model return: h h r
right
Q g O H -> g
M C R w v -> w v
t K L -> t t
w d a V -> w w d a
I x E C -> x
V Q v -> v
U g n M B -> g n
g V G N O -> g g
X c p ->
The right answer is: c p
The model return: c p
right
h Q V Q k -> h h k
u A R -> u u
d C U x -> d d x
a z G a -> a a z a
A I f b q -> f b q
b T o I L -> b b o
g i W -> g g i
K w Y -> w
A H r ->
The right answer is: r
The model return: A A H r
false
x p o H -> x x p o
q g D -> q q g
V v z -> v z
w D v -> w w v
n q d G h -> n n q d h
G z B -> z
x I Z -> x x
G h t c -> h t c
R T B K c ->
The right answer is: c
The model return: R T B c
false
**line number: 16
W n P H L -> n
U h m -> h m
S D m -> m
D Z l I E -> l
c t a p L -> c c t a p
Z t s S -> t s
e g L -> e e g
k M b -> k k b
D h S H -> h
c s c E -> c c s c
U z A V -> z
H T C U x -> x
l n H U C -> l l n
Y K l -> l
B X d I -> d
E N g Q Z -> g
h r D ->
The right answer is: h h r
The model return: h
false
Q g O H -> g
M C R w v -> w v
t K L -> t t
w d a V -> w w d a
I x E C -> x
V Q v -> v
U g n M B -> g n
g V G N O -> g g
v n l N -> v v n l
u p E c v -> u u p c v
h H i U -> h h i
S e Q M R -> e
g F q H -> g g q
R O n C w -> n w
g N I -> g g
B k G d q -> k d q
X c p ->
The right answer is: c p
The model return: x
false
**line number: 32
W n P H L -> n
U h m -> h m
S D m -> m
D Z l I E -> l
c t a p L -> c c t a p
Z t s S -> t s
e g L -> e e g
k M b -> k k b
D h S H -> h
c s c E -> c c s c
U z A V -> z
H T C U x -> x
l n H U C -> l l n
Y K l -> l
B X d I -> d
E N g Q Z -> g
e W D P -> e e
V r G l B -> r l
U H g Q -> g
y C W -> y y
i f S -> i i f
R z y -> z y
V G H y -> y
C g s H H -> g s
r H Y u -> r r u
n Z E -> n n
d W Z p -> d d p
z C q -> z z q
U L A o -> o
g X i u -> g g i u
o y y m H -> o o y y m
v K x -> v v x
h r D ->
The right answer is: h h r
The model return: h h r
right
Q g O H -> g
M C R w v -> w v
t K L -> t t
w d a V -> w w d a
I x E C -> x
V Q v -> v
U g n M B -> g n
g V G N O -> g g
v n l N -> v v n l
u p E c v -> u u p c v
h H i U -> h h i
S e Q M R -> e
g F q H -> g g q
R O n C w -> n w
g N I -> g g
B k G d q -> k d q
Z I h r -> h r
u H a -> u u a
E B U w -> w
g u G G U -> g g u
V g I W M -> g
F v o -> v o
i x W w r -> i i x w r
e a m P n -> e e a m n
F h g -> h g
K D I P d -> d
h e o V w -> h h e o w
T N t P C -> t
b i g A -> b b i g
O x Y Y a -> x a
R L L i P -> i
R m M -> m
X c p ->
The right answer is: c p
The model return: c
false
h Q V Q k -> h h k
u A R -> u u
d C U x -> d d x
a z G a -> a a z a
A I f b q -> f b q
b T o I L -> b b o
g i W -> g g i
K w Y -> w
S y o o c -> y o o c
x k O -> x x k
E U C Y n -> n
O u l -> u l
F K c -> c
s Q h -> s s h
a h S x -> a a h x
h Y g f g -> h h g f g
y C Z F -> y y
I E m f T -> m f
q S y D Y -> q q y
U u i g -> u i g
O G o H p -> o p
t P B -> t t
m D o -> m m o
S g K Q S -> g
p U u -> p p u
M Z i H a -> i a
W m Q -> m
m X d B -> m m d
Z P H I x -> x
Y H W r -> r
P U r -> r
Z K a D -> a
A H r ->
The right answer is: r
The model return: a
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
==========================================================================
93
**line number: 4
z v C -> 1
P w O B A -> 5
A k N k X -> 4
t i K w z -> 1
H u G ->
The right answer is: 3
The model return: 1
false
M P S y B -> 5
l H x p D -> 2
I q f -> 2
i Y e a l -> 1
v Q A B ->
The right answer is: 3
The model return: 1
false
**line number: 8
z v C -> 1
P w O B A -> 5
A k N k X -> 4
t i K w z -> 1
C k W X -> 4
Y k X I -> 4
p L S c -> 2
c c S -> 1
H u G ->
The right answer is: 3
The model return: 1
false
M P S y B -> 5
l H x p D -> 2
I q f -> 2
i Y e a l -> 1
T l a E -> 3
m v r X W -> 2
P w f u -> 2
D c n Z -> 3
v Q A B ->
The right answer is: 3
The model return: 2
false
**line number: 16
z v C -> 1
P w O B A -> 5
A k N k X -> 4
t i K w z -> 1
C k W X -> 4
Y k X I -> 4
p L S c -> 2
c c S -> 1
C g I -> 3
y D V -> 2
G p e -> 2
X K u I p -> 4
D h U -> 3
l I w E -> 2
u M W I V -> 4
R G g -> 3
H u G ->
The right answer is: 3
The model return: 2
false
M P S y B -> 5
l H x p D -> 2
I q f -> 2
i Y e a l -> 1
T l a E -> 3
m v r X W -> 2
P w f u -> 2
D c n Z -> 3
P I C d -> 4
h k D c A -> 2
r S I -> 2
x x H t -> 1
C t c -> 2
P q e G -> 3
G H n e -> 3
M i Z -> 3
v Q A B ->
The right answer is: 3
The model return: 2
false
**line number: 32
z v C -> 1
P w O B A -> 5
A k N k X -> 4
t i K w z -> 1
C k W X -> 4
Y k X I -> 4
p L S c -> 2
c c S -> 1
C g I -> 3
y D V -> 2
G p e -> 2
X K u I p -> 4
D h U -> 3
l I w E -> 2
u M W I V -> 4
R G g -> 3
I B x X T -> 5
O W Y w n -> 4
O U e w e -> 3
u R t N -> 2
Q X c b R -> 4
c H U G D -> 4
E N z -> 3
p U S Q -> 3
X A g r -> 3
y P Z U H -> 4
I s K Q -> 4
K m w o -> 2
i P f G -> 2
a U p -> 1
x f W G -> 2
x A h r -> 1
H u G ->
The right answer is: 3
The model return: 1
false
M P S y B -> 5
l H x p D -> 2
I q f -> 2
i Y e a l -> 1
T l a E -> 3
m v r X W -> 2
P w f u -> 2
D c n Z -> 3
P I C d -> 4
h k D c A -> 2
r S I -> 2
x x H t -> 1
C t c -> 2
P q e G -> 3
G H n e -> 3
M i Z -> 3
I M g x Z -> 4
H i S -> 3
l v Q -> 1
x g B -> 1
v Q h a -> 1
v P i -> 1
M l g A -> 3
S g O Y M -> 5
F S a -> 3
P F m m g -> 3
L o L Y -> 4
H T q u -> 3
G q C -> 3
A p B W E -> 5
w c D t -> 1
k P u v m -> 1
v Q A B ->
The right answer is: 3
The model return: 1
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
==========================================================================
94
**line number: 4
U K O -> U O
O F W -> O W
I X X Y -> I Y
R G O T Y -> R Y
D R M V ->
The right answer is: D V
The model return: D V
right
4 4 9 5 -> 4 5
7 5 2 -> 7 2
8 0 5 0 0 -> 8 0
8 3 3 -> 8 3
2 1 4 8 4 ->
The right answer is: 2 4
The model return: 2 1
false
0 2 5 -> 0 5
8 1 7 1 7 -> 8 7
3 4 2 0 -> 3 0
9 3 6 3 1 -> 9 1
5 2 2 ->
The right answer is: 5 2
The model return: 5 2
right
u y z t -> u t
w r w -> w w
b u a x w -> b w
t r c -> t c
f p c ->
The right answer is: f c
The model return: f c
right
3 3 7 -> 3 7
4 8 3 1 -> 4 1
1 6 1 5 -> 1 5
8 0 5 8 -> 8 8
5 2 6 ->
The right answer is: 5 6
The model return: 5 6
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], 4]
==========================================================================
95
**line number: 4
M M B 6 L -> M M M B 6 6 L
K 9 4 I 0 -> K K 9 4 I 0 0
H X Y 1 -> H H X Y 1 1
O 7 X -> O O 7 7 X
D 1 4 2 ->
The right answer is: D D 1 4 2 2
The model return: D D 1 4 2 2
right
f 2 z g -> f f 2 2 z g
8 d 1 -> 8 8 d 1 1
2 v f w -> 2 2 2 v f w
v c g 8 l -> v v c g 8 8 l
m 0 x ->
The right answer is: m m 0 0 x
The model return: m m 0 x
false
6 h 6 -> 6 6 h 6 6
z 5 y g 7 -> z z 5 y g 7 7
5 7 1 9 h -> 5 5 7 1 9 9 h
0 u o 1 9 -> 0 0 u o 1 9 9
4 8 4 m 5 ->
The right answer is: 4 4 8 4 m 5 5
The model return: 4 4 8 4 m 5 5
right
7 H 8 6 U -> 7 7 H 8 6 6 U
2 D N 5 -> 2 2 D N 5 5
4 D A 6 7 -> 4 4 D A 6 7 7
M 2 6 T 0 -> M M 2 6 T 0 0
M 9 E U ->
The right answer is: M M 9 9 E U
The model return: M M 9 E U U
false
**line number: 8
M M B 6 L -> M M M B 6 6 L
K 9 4 I 0 -> K K 9 4 I 0 0
H X Y 1 -> H H X Y 1 1
O 7 X -> O O 7 7 X
G 1 N S C -> G G 1 1 N S C
5 C Q 9 -> 5 5 C Q 9 9
W F 2 1 U -> W W F 2 1 1 U
Y S 7 M K -> Y Y S 7 7 M K
D 1 4 2 ->
The right answer is: D D 1 4 2 2
The model return: D D 1 4 2 2
right
f 2 z g -> f f 2 2 z g
8 d 1 -> 8 8 d 1 1
2 v f w -> 2 2 2 v f w
v c g 8 l -> v v c g 8 8 l
k o 9 -> k k o 9 9
m 7 o i a -> m m 7 7 o i a
1 t 9 5 -> 1 1 t 9 5 5
m w u 2 -> m m w u 2 2
m 0 x ->
The right answer is: m m 0 0 x
The model return: m m 0 x 0
false
6 h 6 -> 6 6 h 6 6
z 5 y g 7 -> z z 5 y g 7 7
5 7 1 9 h -> 5 5 7 1 9 9 h
0 u o 1 9 -> 0 0 u o 1 9 9
k 2 6 n t -> k k 2 6 6 n t
m 1 m 6 7 -> m m 1 m 6 7 7
0 4 i 0 b -> 0 0 4 i 0 0 b
a w 4 3 o -> a a w 4 3 3 o
4 8 4 m 5 ->
The right answer is: 4 4 8 4 m 5 5
The model return: 4 4 8 4 m 5 5
right
7 H 8 6 U -> 7 7 H 8 6 6 U
2 D N 5 -> 2 2 D N 5 5
4 D A 6 7 -> 4 4 D A 6 7 7
M 2 6 T 0 -> M M 2 6 T 0 0
C O 0 -> C C O 0 0
W B W 2 -> W W B W 2 2
2 2 B 3 -> 2 2 2 B 3 3
G 7 F M 0 -> G G 7 F M 0 0
M 9 E U ->
The right answer is: M M 9 9 E U
The model return: M M 9 E U 0
false
**line number: 16
M M B 6 L -> M M M B 6 6 L
K 9 4 I 0 -> K K 9 4 I 0 0
H X Y 1 -> H H X Y 1 1
O 7 X -> O O 7 7 X
G 1 N S C -> G G 1 1 N S C
5 C Q 9 -> 5 5 C Q 9 9
W F 2 1 U -> W W F 2 1 1 U
Y S 7 M K -> Y Y S 7 7 M K
2 G 7 1 X -> 2 2 G 7 1 1 X
2 6 K D 0 -> 2 2 6 K D 0 0
1 F 9 N G -> 1 1 F 9 9 N G
9 L Y -> 9 9 9 L Y
8 Z N -> 8 8 8 Z N
5 0 D W -> 5 5 0 0 D W
5 A Z 5 -> 5 5 A Z 5 5
4 2 M 7 O -> 4 4 2 M 7 7 O
D 1 4 2 ->
The right answer is: D D 1 4 2 2
The model return: D D 1 4 2 2
right
f 2 z g -> f f 2 2 z g
8 d 1 -> 8 8 d 1 1
2 v f w -> 2 2 2 v f w
v c g 8 l -> v v c g 8 8 l
k o 9 -> k k o 9 9
m 7 o i a -> m m 7 7 o i a
1 t 9 5 -> 1 1 t 9 5 5
m w u 2 -> m m w u 2 2
q i 8 8 g -> q q i 8 8 8 g
4 6 4 g -> 4 4 6 4 4 g
8 x c u -> 8 8 8 x c u
4 w t -> 4 4 4 w t
0 r t 4 r -> 0 0 r t 4 4 r
4 v o r u -> 4 4 4 v o r u
6 s w -> 6 6 6 s w
6 v u t d -> 6 6 6 v u t d
m 0 x ->
The right answer is: m m 0 0 x
The model return: m m 0 x x
false
6 h 6 -> 6 6 h 6 6
z 5 y g 7 -> z z 5 y g 7 7
5 7 1 9 h -> 5 5 7 1 9 9 h
0 u o 1 9 -> 0 0 u o 1 9 9
k 2 6 n t -> k k 2 6 6 n t
m 1 m 6 7 -> m m 1 m 6 7 7
0 4 i 0 b -> 0 0 4 i 0 0 b
a w 4 3 o -> a a w 4 3 3 o
7 7 l -> 7 7 7 7 l
6 8 f z w -> 6 6 8 8 f z w
7 2 n -> 7 7 2 2 n
3 d 0 5 -> 3 3 d 0 5 5
3 6 8 t -> 3 3 6 8 8 t
5 2 q h p -> 5 5 2 2 q h p
7 m 7 8 -> 7 7 m 7 8 8
l 6 4 8 -> l l 6 4 8 8
4 8 4 m 5 ->
The right answer is: 4 4 8 4 m 5 5
The model return: 4 4 8 4 5 m
false
**line number: 32
M M B 6 L -> M M M B 6 6 L
K 9 4 I 0 -> K K 9 4 I 0 0
H X Y 1 -> H H X Y 1 1
O 7 X -> O O 7 7 X
G 1 N S C -> G G 1 1 N S C
5 C Q 9 -> 5 5 C Q 9 9
W F 2 1 U -> W W F 2 1 1 U
Y S 7 M K -> Y Y S 7 7 M K
2 G 7 1 X -> 2 2 G 7 1 1 X
2 6 K D 0 -> 2 2 6 K D 0 0
1 F 9 N G -> 1 1 F 9 9 N G
9 L Y -> 9 9 9 L Y
8 Z N -> 8 8 8 Z N
5 0 D W -> 5 5 0 0 D W
5 A Z 5 -> 5 5 A Z 5 5
4 2 M 7 O -> 4 4 2 M 7 7 O
1 R A I V -> 1 1 1 R A I V
3 0 M 8 -> 3 3 0 M 8 8
P 4 V O -> P P 4 4 V O
1 R 9 1 -> 1 1 R 9 1 1
U D 5 -> U U D 5 5
M 8 S W 8 -> M M 8 S W 8 8
3 T W -> 3 3 3 T W
S R T 2 -> S S R T 2 2
S Q 2 H E -> S S Q 2 2 H E
O Q 0 G -> O O Q 0 0 G
8 1 L -> 8 8 1 1 L
0 I 0 E -> 0 0 I 0 0 E
4 K 6 -> 4 4 K 6 6
M 2 S -> M M 2 2 S
M 7 4 -> M M 7 4 4
3 T H K 9 -> 3 3 T H K 9 9
D 1 4 2 ->
The right answer is: D D 1 4 2 2
The model return: D D 1 4 2 2
right
f 2 z g -> f f 2 2 z g
8 d 1 -> 8 8 d 1 1
2 v f w -> 2 2 2 v f w
v c g 8 l -> v v c g 8 8 l
k o 9 -> k k o 9 9
m 7 o i a -> m m 7 7 o i a
1 t 9 5 -> 1 1 t 9 5 5
m w u 2 -> m m w u 2 2
q i 8 8 g -> q q i 8 8 8 g
4 6 4 g -> 4 4 6 4 4 g
8 x c u -> 8 8 8 x c u
4 w t -> 4 4 4 w t
0 r t 4 r -> 0 0 r t 4 4 r
4 v o r u -> 4 4 4 v o r u
6 s w -> 6 6 6 s w
6 v u t d -> 6 6 6 v u t d
5 2 4 t 7 -> 5 5 2 4 t 7 7
d u 9 x l -> d d u 9 9 x l
7 2 3 f 4 -> 7 7 2 3 f 4 4
4 f s -> 4 4 4 f s
h 3 3 -> h h 3 3 3
4 u b 7 -> 4 4 u b 7 7
s 2 7 -> s s 2 7 7
4 g 0 -> 4 4 g 0 0
q 5 3 t m -> q q 5 3 3 t m
s 7 c w -> s s 7 7 c w
8 v 1 6 8 -> 8 8 v 1 6 8 8
n o g 9 -> n n o g 9 9
v 4 6 -> v v 4 6 6
2 o t p 9 -> 2 2 o t p 9 9
0 o o -> 0 0 0 o o
a g 2 f -> a a g 2 2 f
m 0 x ->
The right answer is: m m 0 0 x
The model return: m m 0 0 x
right
6 h 6 -> 6 6 h 6 6
z 5 y g 7 -> z z 5 y g 7 7
5 7 1 9 h -> 5 5 7 1 9 9 h
0 u o 1 9 -> 0 0 u o 1 9 9
k 2 6 n t -> k k 2 6 6 n t
m 1 m 6 7 -> m m 1 m 6 7 7
0 4 i 0 b -> 0 0 4 i 0 0 b
a w 4 3 o -> a a w 4 3 3 o
7 7 l -> 7 7 7 7 l
6 8 f z w -> 6 6 8 8 f z w
7 2 n -> 7 7 2 2 n
3 d 0 5 -> 3 3 d 0 5 5
3 6 8 t -> 3 3 6 8 8 t
5 2 q h p -> 5 5 2 2 q h p
7 m 7 8 -> 7 7 m 7 8 8
l 6 4 8 -> l l 6 4 8 8
2 6 o b -> 2 2 6 6 o b
o d 2 -> o o d 2 2
o g 1 m -> o o g 1 1 m
q b r 9 -> q q b r 9 9
n 7 k 8 -> n n 7 k 8 8
7 c 2 -> 7 7 c 2 2
s 1 4 4 6 -> s s 1 4 4 6 6
d m g 6 -> d d m g 6 6
p f 8 p -> p p f 8 8 p
h x 0 q -> h h x 0 0 q
k 4 w v f -> k k 4 4 w v f
r s v t 4 -> r r s v t 4 4
g g 7 g -> g g g 7 7 g
g 6 2 -> g g 6 2 2
7 5 q -> 7 7 5 5 q
7 6 3 c -> 7 7 6 3 3 c
4 8 4 m 5 ->
The right answer is: 4 4 8 4 m 5 5
The model return: 4 4 8 4 5 m
false
7 H 8 6 U -> 7 7 H 8 6 6 U
2 D N 5 -> 2 2 D N 5 5
4 D A 6 7 -> 4 4 D A 6 7 7
M 2 6 T 0 -> M M 2 6 T 0 0
C O 0 -> C C O 0 0
W B W 2 -> W W B W 2 2
2 2 B 3 -> 2 2 2 B 3 3
G 7 F M 0 -> G G 7 F M 0 0
S X 1 5 R -> S S X 1 5 5 R
0 3 1 Z 4 -> 0 0 3 1 Z 4 4
U K 4 0 F -> U U K 4 0 0 F
1 9 8 R -> 1 1 9 8 8 R
Q H 0 -> Q Q H 0 0
0 Y 3 8 -> 0 0 Y 3 8 8
Q I W 7 -> Q Q I W 7 7
1 8 4 U D -> 1 1 8 4 4 U D
9 U Y 3 U -> 9 9 U Y 3 3 U
F 7 I Q -> F F 7 7 I Q
K 6 9 -> K K 6 9 9
O 8 0 G B -> O O 8 0 0 G B
3 V Q -> 3 3 3 V Q
N Q 4 -> N N Q 4 4
L B 9 -> L L B 9 9
6 E 4 I -> 6 6 E 4 4 I
K A T 3 7 -> K K A T 3 7 7
Z K 0 -> Z Z K 0 0
6 P 5 -> 6 6 P 5 5
G 3 8 2 2 -> G G 3 8 2 2 2
2 P U 3 -> 2 2 P U 3 3
2 7 U -> 2 2 7 7 U
2 B 5 8 H -> 2 2 B 5 8 8 H
6 T B -> 6 6 6 T B
M 9 E U ->
The right answer is: M M 9 9 E U
The model return: M M 9 E U U
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
==========================================================================
96
**line number: 4
5 G A M X -> 5 5 G A M X X
4 D R 5 -> 4 4 D R R 5
4 2 6 V -> 4 4 2 6 V V
N 0 K -> N N 0 K K
5 2 4 G 0 ->
The right answer is: 5 5 2 4 G G 0
The model return: 5 5 2 4 G G
false
1 w 0 4 -> 1 1 w w 0 4
7 y 1 -> 7 7 y y 1
9 d 1 2 9 -> 9 9 d d 1 2 9
l 2 d -> l l 2 d d
7 o 8 ->
The right answer is: 7 7 o o 8
The model return: 7 7 o o 8
right
8 t w 4 6 -> 8 8 t w w 4 6
0 r 1 -> 0 0 r r 1
2 s 5 7 i -> 2 2 s 5 7 i i
h m z 4 1 -> h h m z z 4 1
g m i 2 y ->
The right answer is: g g m i 2 y y
The model return: g g m i 2 y
false
**line number: 8
5 G A M X -> 5 5 G A M X X
4 D R 5 -> 4 4 D R R 5
4 2 6 V -> 4 4 2 6 V V
N 0 K -> N N 0 K K
9 V R -> 9 9 V R R
2 V 1 F -> 2 2 V 1 F F
9 3 4 V -> 9 9 3 4 V V
5 D 9 -> 5 5 D D 9
5 2 4 G 0 ->
The right answer is: 5 5 2 4 G G 0
The model return: 5 5 2 4 G 0 G
false
1 w 0 4 -> 1 1 w w 0 4
7 y 1 -> 7 7 y y 1
9 d 1 2 9 -> 9 9 d d 1 2 9
l 2 d -> l l 2 d d
n e 3 3 z -> n n e 3 3 z z
2 8 a -> 2 2 8 a a
c i b 8 4 -> c c i b b 8 4
4 4 u -> 4 4 4 u u
7 o 8 ->
The right answer is: 7 7 o o 8
The model return: 7 7 o o 8
right
8 t w 4 6 -> 8 8 t w w 4 6
0 r 1 -> 0 0 r r 1
2 s 5 7 i -> 2 2 s 5 7 i i
h m z 4 1 -> h h m z z 4 1
7 5 w 2 f -> 7 7 5 w 2 f f
k 9 2 -> k k k 9 2
1 2 1 x e -> 1 1 2 1 x e e
7 0 2 e p -> 7 7 0 2 e p p
g m i 2 y ->
The right answer is: g g m i 2 y y
The model return: g g m i 2 y y
right
t 2 B 9 6 -> t t 2 B B 9 6
l 2 P -> l l 2 P P
M c 8 -> M M c c 8
M r G S 8 -> M M r G S S 8
m 8 r Y m -> m m 8 r Y m m
Z k 4 -> Z Z k k 4
4 q H X -> 4 4 q H X X
3 y C -> 3 3 y C C
0 Y p ->
The right answer is: 0 0 Y p p
The model return: 0 0 Y p p
right
d l l 5 w -> d d l l 5 w w
0 0 h -> 0 0 0 h h
p 1 n q 5 -> p p 1 n q q 5
8 e 1 4 g -> 8 8 e 1 4 g g
s 0 5 p -> s s 0 5 p p
2 w m 2 u -> 2 2 w m 2 u u
5 f 5 2 -> 5 5 f f 5 2
9 9 k g -> 9 9 9 k g g
g 3 1 g 2 ->
The right answer is: g g 3 1 g g 2
The model return: g g 3 1 g 2
false
**line number: 16
5 G A M X -> 5 5 G A M X X
4 D R 5 -> 4 4 D R R 5
4 2 6 V -> 4 4 2 6 V V
N 0 K -> N N 0 K K
9 V R -> 9 9 V R R
2 V 1 F -> 2 2 V 1 F F
9 3 4 V -> 9 9 3 4 V V
5 D 9 -> 5 5 D D 9
7 6 I 7 -> 7 7 6 I I 7
2 7 3 3 G -> 2 2 7 3 3 G G
6 0 L 4 7 -> 6 6 0 L L 4 7
3 H X 1 -> 3 3 H X X 1
2 S G 3 -> 2 2 S G G 3
9 E 0 -> 9 9 E E 0
4 0 2 Q O -> 4 4 0 2 Q O O
3 F 0 5 -> 3 3 F F 0 5
5 2 4 G 0 ->
The right answer is: 5 5 2 4 G G 0
The model return: 5 5 2 4 G G 0
right
1 w 0 4 -> 1 1 w w 0 4
7 y 1 -> 7 7 y y 1
9 d 1 2 9 -> 9 9 d d 1 2 9
l 2 d -> l l 2 d d
n e 3 3 z -> n n e 3 3 z z
2 8 a -> 2 2 8 a a
c i b 8 4 -> c c i b b 8 4
4 4 u -> 4 4 4 u u
x 7 0 -> x x x 7 0
n 0 h 1 p -> n n 0 h 1 p p
t 6 f -> t t 6 f f
i 5 4 -> i i i 5 4
9 7 b c 6 -> 9 9 7 b c c 6
l 8 h 6 -> l l 8 h h 6
0 e c -> 0 0 e c c
9 1 7 n 8 -> 9 9 1 7 n n 8
7 o 8 ->
The right answer is: 7 7 o o 8
The model return: 7 7 o o 8
right
8 t w 4 6 -> 8 8 t w w 4 6
0 r 1 -> 0 0 r r 1
2 s 5 7 i -> 2 2 s 5 7 i i
h m z 4 1 -> h h m z z 4 1
7 5 w 2 f -> 7 7 5 w 2 f f
k 9 2 -> k k k 9 2
1 2 1 x e -> 1 1 2 1 x e e
7 0 2 e p -> 7 7 0 2 e p p
3 v 7 2 3 -> 3 3 v v 7 2 3
5 0 1 g a -> 5 5 0 1 g a a
2 6 9 4 r -> 2 2 6 9 4 r r
8 m r a -> 8 8 m r a a
1 r y -> 1 1 r y y
n 0 m a -> n n 0 m a a
6 c x 3 m -> 6 6 c x 3 m m
3 f d a 5 -> 3 3 f d a a 5
g m i 2 y ->
The right answer is: g g m i 2 y y
The model return: g g m i 2 y y
right
t 2 B 9 6 -> t t 2 B B 9 6
l 2 P -> l l 2 P P
M c 8 -> M M c c 8
M r G S 8 -> M M r G S S 8
m 8 r Y m -> m m 8 r Y m m
Z k 4 -> Z Z k k 4
4 q H X -> 4 4 q H X X
3 y C -> 3 3 y C C
7 K I u V -> 7 7 K I u V V
z V 1 -> z z V V 1
2 k P 0 x -> 2 2 k P 0 x x
O K f s 9 -> O O K f s s 9
I o A 6 Y -> I I o A 6 Y Y
1 y R -> 1 1 y R R
T l 9 -> T T l l 9
Y O s T 0 -> Y Y O s T T 0
0 Y p ->
The right answer is: 0 0 Y p p
The model return: 0 0 Y p p
right
@@@@@@@@@@@@ 16 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], 16]
==========================================================================
97
**line number: 4
T T 9 8 -> T
3 5 3 1 Q -> Q
4 N S 8 -> S
D Z 4 -> Z
Y 9 G L ->
The right answer is: L
The model return: G
false
H c 1 X -> X
7 U r -> r
4 1 A 8 q -> q
1 p G -> G
1 P g ->
The right answer is: g
The model return: g
right
8 8 6 n -> n
w 1 9 l 6 -> l
2 k 2 9 -> k
q 6 c g -> g
e 8 3 ->
The right answer is: e
The model return: 3
false
**line number: 8
T T 9 8 -> T
3 5 3 1 Q -> Q
4 N S 8 -> S
D Z 4 -> Z
4 8 7 T 5 -> T
7 M 9 7 -> M
8 6 P 9 -> P
K 9 8 5 -> K
Y 9 G L ->
The right answer is: L
The model return: Y
false
H c 1 X -> X
7 U r -> r
4 1 A 8 q -> q
1 p G -> G
5 t O -> O
0 r W -> W
D 3 t s g -> g
N r 4 -> r
1 P g ->
The right answer is: g
The model return: g
right
8 8 6 n -> n
w 1 9 l 6 -> l
2 k 2 9 -> k
q 6 c g -> g
6 y 5 4 1 -> y
8 o 8 9 -> o
k 6 i -> i
4 9 1 s 9 -> s
e 8 3 ->
The right answer is: e
The model return: 3
false
**line number: 16
T T 9 8 -> T
3 5 3 1 Q -> Q
4 N S 8 -> S
D Z 4 -> Z
4 8 7 T 5 -> T
7 M 9 7 -> M
8 6 P 9 -> P
K 9 8 5 -> K
W 1 S -> S
C 8 B 6 1 -> B
D 1 4 -> D
4 H 0 A N -> N
R 9 3 D -> D
W 3 6 -> W
I 7 5 -> I
4 O 2 1 -> O
Y 9 G L ->
The right answer is: L
The model return: G
false
H c 1 X -> X
7 U r -> r
4 1 A 8 q -> q
1 p G -> G
5 t O -> O
0 r W -> W
D 3 t s g -> g
N r 4 -> r
4 f B -> B
W x 7 -> x
a w Q 8 -> Q
r G 1 7 -> G
1 z z L 9 -> L
X 3 K Z i -> i
8 5 S k S -> S
D 9 1 i -> i
1 P g ->
The right answer is: g
The model return: g
right
8 8 6 n -> n
w 1 9 l 6 -> l
2 k 2 9 -> k
q 6 c g -> g
6 y 5 4 1 -> y
8 o 8 9 -> o
k 6 i -> i
4 9 1 s 9 -> s
4 y 1 5 6 -> y
p 8 x 6 s -> s
t 3 n -> n
6 2 6 k -> k
9 3 5 s -> s
u 7 d y z -> z
2 2 0 y 0 -> y
6 9 g -> g
e 8 3 ->
The right answer is: e
The model return: 3
false
**line number: 32
T T 9 8 -> T
3 5 3 1 Q -> Q
4 N S 8 -> S
D Z 4 -> Z
4 8 7 T 5 -> T
7 M 9 7 -> M
8 6 P 9 -> P
K 9 8 5 -> K
W 1 S -> S
C 8 B 6 1 -> B
D 1 4 -> D
4 H 0 A N -> N
R 9 3 D -> D
W 3 6 -> W
I 7 5 -> I
4 O 2 1 -> O
Q B 4 X 1 -> X
6 9 L 4 3 -> L
9 8 R -> R
8 Y 5 H -> H
F 7 8 4 -> F
C R Y 7 -> Y
W U U 3 -> U
6 1 2 R -> R
0 6 Q 3 1 -> Q
C 6 9 -> C
Z 7 6 -> Z
G 5 P -> P
7 P 1 B -> B
Q 4 Y -> Y
O 9 S 6 8 -> S
2 6 G -> G
Y 9 G L ->
The right answer is: L
The model return: G
false
H c 1 X -> X
7 U r -> r
4 1 A 8 q -> q
1 p G -> G
5 t O -> O
0 r W -> W
D 3 t s g -> g
N r 4 -> r
4 f B -> B
W x 7 -> x
a w Q 8 -> Q
r G 1 7 -> G
1 z z L 9 -> L
X 3 K Z i -> i
8 5 S k S -> S
D 9 1 i -> i
I 2 k -> k
X 9 y 0 -> y
2 C z -> z
8 u E 3 -> E
9 e X g -> g
G 0 b -> b
u V 7 C -> C
b 1 2 M Z -> Z
2 H w 0 B -> B
g 2 G V -> V
o Z 0 -> Z
3 C e -> e
m U 1 -> U
D o 1 1 -> o
Z 7 a e -> e
G u 4 -> u
1 P g ->
The right answer is: g
The model return: g
right
8 8 6 n -> n
w 1 9 l 6 -> l
2 k 2 9 -> k
q 6 c g -> g
6 y 5 4 1 -> y
8 o 8 9 -> o
k 6 i -> i
4 9 1 s 9 -> s
4 y 1 5 6 -> y
p 8 x 6 s -> s
t 3 n -> n
6 2 6 k -> k
9 3 5 s -> s
u 7 d y z -> z
2 2 0 y 0 -> y
6 9 g -> g
x 2 9 8 -> x
9 m 3 -> m
t v v k 8 -> k
6 k l 1 6 -> l
l 7 5 7 -> l
4 8 n -> n
9 y 5 1 y -> y
2 7 r k 8 -> k
3 f t v f -> f
b h 8 z z -> z
s 4 4 -> s
4 5 p l d -> d
d g 2 -> g
q b 0 5 -> b
4 t a a -> a
6 p m b -> b
e 8 3 ->
The right answer is: e
The model return: e
right
G 3 Z S C -> C
R A Y 4 L -> L
5 V 1 -> V
4 0 R -> R
E 5 5 I -> I
E 8 R 2 3 -> R
3 U 5 4 2 -> U
P 6 P 7 -> P
Y 7 B -> B
7 P F 4 C -> C
3 X W A -> A
M 7 2 5 0 -> M
L 5 3 F V -> V
3 Z 5 1 -> Z
7 I Q 4 -> Q
H D 2 -> D
0 T I 1 1 -> I
E N 5 0 -> N
4 G S -> S
B Z 2 Q U -> U
5 F 4 6 1 -> F
5 3 L -> L
6 O L L K -> K
6 Q 3 I 5 -> I
5 K X R -> R
2 Y H -> H
T 6 I -> I
5 Y T I 1 -> I
A 0 K 9 -> K
K 3 9 7 -> K
E 4 3 0 -> E
2 Y V P -> P
0 A 0 2 N ->
The right answer is: N
The model return: N
right
m V 5 -> V
s 6 A -> A
l 0 n L -> L
l 9 A -> A
G 4 y -> y
0 b 2 n I -> I
K s 9 k -> k
l 3 G 7 T -> T
l P L 6 -> L
3 L a -> a
K 8 2 d z -> z
0 r N 2 -> N
p L 4 -> L
0 8 L a E -> E
H B p 8 -> p
m H n 5 -> n
E 7 R l -> l
5 R Z 9 f -> f
I s 7 -> s
Q a 7 b m -> m
7 S l -> l
I s 5 w -> w
b F f 9 -> f
H 3 i G -> G
u I 5 -> I
r L 7 -> L
O Y P 8 d -> d
8 K U 0 i -> i
6 Q m -> m
8 W n -> n
8 H e -> e
E G D z 5 -> z
u 2 D ->
The right answer is: D
The model return: D
right
@@@@@@@@@@@@ 32 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 32]
==========================================================================
98
**line number: 4
Q D Y h -> h
L G t N -> t
F g G -> g
g e p H Z -> p
L o g ->
The right answer is: g
The model return: log
false
S G t -> t
i q A -> q
m G x K X -> x
K I s -> s
l s k X ->
The right answer is: k
The model return: s
false
**line number: 8
Q D Y h -> h
L G t N -> t
F g G -> g
g e p H Z -> p
P z r C u -> u
t h A u -> u
t T N -> t
Z b W c i -> i
L o g ->
The right answer is: g
The model return: o
false
S G t -> t
i q A -> q
m G x K X -> x
K I s -> s
a N r D Q -> r
x Z N G -> x
u i P -> i
U l n S M -> n
l s k X ->
The right answer is: k
The model return: s
false
**line number: 16
Q D Y h -> h
L G t N -> t
F g G -> g
g e p H Z -> p
P z r C u -> u
t h A u -> u
t T N -> t
Z b W c i -> i
w H F T R -> w
H n d s k -> k
g k r H m -> m
V V G G a -> a
r z C K A -> z
s d n O C -> n
D b X T L -> b
L u h -> h
L o g ->
The right answer is: g
The model return: g
right
S G t -> t
i q A -> q
m G x K X -> x
K I s -> s
a N r D Q -> r
x Z N G -> x
u i P -> i
U l n S M -> n
b g a U P -> a
h g Y Z -> g
x C T B U -> x
a V X -> a
L h r I -> r
O e G -> e
h G Q Q -> h
U A C w -> w
l s k X ->
The right answer is: k
The model return: s
false
i R i a o -> o
R A D z -> z
F s Y I -> s
S s S p -> p
W F D f K -> f
i n K Z -> n
R h s -> s
R O w g E -> g
Q e X -> e
I H p -> p
d h C -> h
e D W Q D -> e
r I u D Q -> u
z C U -> z
C g B D I -> g
Z g f z -> z
G L g f z ->
The right answer is: z
The model return: g
false
**line number: 32
Q D Y h -> h
L G t N -> t
F g G -> g
g e p H Z -> p
P z r C u -> u
t h A u -> u
t T N -> t
Z b W c i -> i
w H F T R -> w
H n d s k -> k
g k r H m -> m
V V G G a -> a
r z C K A -> z
s d n O C -> n
D b X T L -> b
L u h -> h
A m g b g -> g
S P g G y -> y
v X P k -> k
R I V f -> f
F F f E -> f
g d S -> d
Q a L Z -> a
h g u X a -> a
c T F -> c
n U r q X -> q
G d C r -> r
L t I i U -> i
y s u P -> u
i g O -> g
F p e n -> n
v D I Q M -> v
L o g ->
The right answer is: g
The model return: g
right
S G t -> t
i q A -> q
m G x K X -> x
K I s -> s
a N r D Q -> r
x Z N G -> x
u i P -> i
U l n S M -> n
b g a U P -> a
h g Y Z -> g
x C T B U -> x
a V X -> a
L h r I -> r
O e G -> e
h G Q Q -> h
U A C w -> w
u G y -> y
F M d -> d
N x d T Y -> d
x Y s E r -> r
o M g -> g
C x C -> x
C N q G -> q
W B s v r -> r
s I f -> f
G k O u -> u
O k F z g -> g
D q S K G -> q
P a Z -> a
h I y N p -> p
E K p a v -> v
d T f R -> f
l s k X ->
The right answer is: k
The model return: k
right
i R i a o -> o
R A D z -> z
F s Y I -> s
S s S p -> p
W F D f K -> f
i n K Z -> n
R h s -> s
R O w g E -> g
Q e X -> e
I H p -> p
d h C -> h
e D W Q D -> e
r I u D Q -> u
z C U -> z
C g B D I -> g
Z g f z -> z
P e w x U -> x
S g g z -> z
S g y -> y
Z L b c -> c
T V X r -> r
e q q R F -> q
T z B S -> z
C R h Z -> h
Q n O m -> m
f S d -> d
G t W -> t
G k e D -> e
D G p -> p
M i t I -> t
M B f M a -> a
t s h L -> h
G L g f z ->
The right answer is: z
The model return: z
right
u t d t L -> t
B W i -> i
M z s N G -> s
P s f e u -> u
F c Z a -> a
y p Y U u -> u
P k T -> k
h g I G G -> g
P m z m -> m
r L p O -> p
G O F e -> e
C M g u -> u
w F N -> w
O b U z V -> z
Y a m -> m
Q F c -> c
w r n s U -> s
K y G w Q -> w
g B D P G -> g
T b f -> f
y U x -> x
y u P c D -> c
V g S -> g
P d G -> d
P v r -> r
m B p Y E -> p
p C A b -> b
P i P t K -> t
G v u e a -> a
P k U C U -> k
k B B -> k
R R H c g -> g
R W l ->
The right answer is: l
The model return: l
right
@@@@@@@@@@@@ 32 @@@@@@@@@@@@
###  [[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 32]
==========================================================================
99
**line number: 4
4 0 3 4 0 -> 0 3 4 1
0 7 3 5 3 -> 7 3 5 4
5 2 6 4 -> 2 6 5
9 2 3 8 8 -> 2 3 8 9
2 7 1 1 9 ->
The right answer is: 7 1 1 10
The model return: 2 7 1 2
false
k r c s -> r c t
d m f i -> m f j
g w v z a -> w v z b
n p t -> p u
g x u d ->
The right answer is: x u e
The model return: x u e
right
t y n e -> y n f
s e o -> e p
z h s -> h t
p p r t e -> p r t f
u r v q q ->
The right answer is: r v q r
The model return: u r q
false
**line number: 8
4 0 3 4 0 -> 0 3 4 1
0 7 3 5 3 -> 7 3 5 4
5 2 6 4 -> 2 6 5
9 2 3 8 8 -> 2 3 8 9
8 8 2 6 -> 8 2 7
7 6 4 7 -> 6 4 8
3 8 9 2 -> 8 9 3
4 8 9 -> 8 10
2 7 1 1 9 ->
The right answer is: 7 1 1 10
The model return: 7 1 1 10
right
k r c s -> r c t
d m f i -> m f j
g w v z a -> w v z b
n p t -> p u
y q p r -> q p s
d r l c p -> r l c q
f v f -> v g
d k f k g -> k f k h
g x u d ->
The right answer is: x u e
The model return: x u e
right
t y n e -> y n f
s e o -> e p
z h s -> h t
p p r t e -> p r t f
c h k g k -> h k g l
x d e -> d f
d k r o -> k r p
l t h s n -> t h s o
u r v q q ->
The right answer is: r v q r
The model return: v q r
false
G S G B K -> S G B L
P Q A -> Q B
V I T G D -> I T G E
L W G -> W H
E L C -> L D
A M V -> M W
Z L P -> L Q
M E T C E -> E T C F
B U C L W ->
The right answer is: U C L X
The model return: C L W G
false
**line number: 16
4 0 3 4 0 -> 0 3 4 1
0 7 3 5 3 -> 7 3 5 4
5 2 6 4 -> 2 6 5
9 2 3 8 8 -> 2 3 8 9
8 8 2 6 -> 8 2 7
7 6 4 7 -> 6 4 8
3 8 9 2 -> 8 9 3
4 8 9 -> 8 10
0 7 3 9 9 -> 7 3 9 10
3 6 9 1 8 -> 6 9 1 9
2 8 4 7 0 -> 8 4 7 1
5 0 8 1 9 -> 0 8 1 10
8 0 9 0 3 -> 0 9 0 4
6 3 4 -> 3 5
8 9 3 6 -> 9 3 7
9 8 5 6 2 -> 8 5 6 3
2 7 1 1 9 ->
The right answer is: 7 1 1 10
The model return: 1 1 9 2
false
k r c s -> r c t
d m f i -> m f j
g w v z a -> w v z b
n p t -> p u
y q p r -> q p s
d r l c p -> r l c q
f v f -> v g
d k f k g -> k f k h
n b a s -> b a t
r v z a -> v z b
r c u z m -> c u z n
c z a g -> z a h
z m r -> m s
f m u z -> m u a
f z x w d -> z x w e
q t i u -> t i v
g x u d ->
The right answer is: x u e
The model return: x u e
right
t y n e -> y n f
s e o -> e p
z h s -> h t
p p r t e -> p r t f
c h k g k -> h k g l
x d e -> d f
d k r o -> k r p
l t h s n -> t h s o
e l g k r -> l g k s
p h z m -> h z n
h z f x -> z f y
u p e p -> p e q
p b p k -> b p l
m r u -> r v
g l l v -> l l w
s e e p -> e e q
u r v q q ->
The right answer is: r v q r
The model return: v q r
false
**line number: 32
4 0 3 4 0 -> 0 3 4 1
0 7 3 5 3 -> 7 3 5 4
5 2 6 4 -> 2 6 5
9 2 3 8 8 -> 2 3 8 9
8 8 2 6 -> 8 2 7
7 6 4 7 -> 6 4 8
3 8 9 2 -> 8 9 3
4 8 9 -> 8 10
0 7 3 9 9 -> 7 3 9 10
3 6 9 1 8 -> 6 9 1 9
2 8 4 7 0 -> 8 4 7 1
5 0 8 1 9 -> 0 8 1 10
8 0 9 0 3 -> 0 9 0 4
6 3 4 -> 3 5
8 9 3 6 -> 9 3 7
9 8 5 6 2 -> 8 5 6 3
3 8 5 -> 8 6
0 9 5 -> 9 6
3 1 9 -> 1 10
8 5 9 -> 5 10
2 3 4 9 6 -> 3 4 9 7
2 1 5 4 -> 1 5 5
1 3 4 8 -> 3 4 9
2 8 7 -> 8 8
5 1 5 3 9 -> 1 5 3 10
6 9 3 3 -> 9 3 4
2 4 2 -> 4 3
4 9 7 7 -> 9 7 8
3 1 5 7 8 -> 1 5 7 9
1 6 9 5 -> 6 9 6
9 8 3 -> 8 4
1 3 3 1 7 -> 3 3 1 8
2 7 1 1 9 ->
The right answer is: 7 1 1 10
The model return: 7 1 1 10
right
k r c s -> r c t
d m f i -> m f j
g w v z a -> w v z b
n p t -> p u
y q p r -> q p s
d r l c p -> r l c q
f v f -> v g
d k f k g -> k f k h
n b a s -> b a t
r v z a -> v z b
r c u z m -> c u z n
c z a g -> z a h
z m r -> m s
f m u z -> m u a
f z x w d -> z x w e
q t i u -> t i v
c i p b c -> i p b d
k r u e n -> r u e o
m v o c -> v o d
a c n e -> c n f
y e c d -> e c e
k d c -> d d
h b t o h -> b t o i
v d o q -> d o r
e a r -> a s
z t x p x -> t x p y
w b p s -> b p t
a h d -> h e
o s z q u -> s z q v
f p p r s -> p p r t
a i e x -> i e y
e c o -> c p
g x u d ->
The right answer is: x u e
The model return: x u f
false
t y n e -> y n f
s e o -> e p
z h s -> h t
p p r t e -> p r t f
c h k g k -> h k g l
x d e -> d f
d k r o -> k r p
l t h s n -> t h s o
e l g k r -> l g k s
p h z m -> h z n
h z f x -> z f y
u p e p -> p e q
p b p k -> b p l
m r u -> r v
g l l v -> l l w
s e e p -> e e q
n k w g v -> k w g w
v i t w a -> i t w b
q a u -> a v
o p s -> p t
m y y -> y z
e l b x t -> l b x u
u y a h -> y a i
g n d h -> n d i
a c a -> c b
z c i w y -> c i w z
x a g -> a h
f a d x l -> a d x m
q i k -> i l
q k x w x -> k x w y
u c h -> c i
q i q r -> i q s
u r v q q ->
The right answer is: r v q r
The model return: r v q r
right
G S G B K -> S G B L
P Q A -> Q B
V I T G D -> I T G E
L W G -> W H
E L C -> L D
A M V -> M W
Z L P -> L Q
M E T C E -> E T C F
I V Z A -> V Z B
S O S Y R -> O S Y S
Y U O W I -> U O W J
P F Z C -> F Z D
K O Z -> O A
L S F -> S G
N F Q -> F R
G K F I -> K F J
L M R O L -> M R O M
A B R G -> B R H
W Y G Y -> Y G Z
C Z H -> Z I
Z P S Y U -> P S Y V
Z T N P -> T N Q
F H G U -> H G V
T I N H -> I N I
X Q C T -> Q C U
O C I X W -> C I X X
I X A Z P -> X A Z Q
B W P C -> W P D
E P I K -> P I L
U U H B Y -> U H B Z
Y N S -> N T
C G G V -> G G W
B U C L W ->
The right answer is: U C L X
The model return: C L X
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
==========================================================================
100
**line number: 4
y p o r i -> p o r i i
t d l q -> d l q q
m g a -> g a a
f v s -> v s s
g v w ->
The right answer is: v w w
The model return: v w w
right
R O L H N -> O L H N N
Q B P -> B P P
K H N -> H N N
A E A F I -> E A F I I
H V V B ->
The right answer is: V V B B
The model return: V V B B
right
S G T E -> G T E E
R O G A -> O G A A
L G D U H -> G D U H H
H A G -> A G G
P U C ->
The right answer is: U C C
The model return: C U C
false
d y s -> y s s
m u q k -> u q k k
g c r -> c r r
h l v -> l v v
k x w ->
The right answer is: x w w
The model return: x w w
right
k g y -> g y y
r d x -> d x x
m c d m t -> c d m t t
p s n s r -> s n s r r
c v u h ->
The right answer is: v u h h
The model return: v u h u
false
**line number: 8
y p o r i -> p o r i i
t d l q -> d l q q
m g a -> g a a
f v s -> v s s
v l n g g -> l n g g g
e o r -> o r r
d b k -> b k k
s b o y -> b o y y
g v w ->
The right answer is: v w w
The model return: v w w
right
R O L H N -> O L H N N
Q B P -> B P P
K H N -> H N N
A E A F I -> E A F I I
Z U Y O -> U Y O O
C K E E Q -> K E E Q Q
B D F C -> D F C C
S R R K -> R R K K
H V V B ->
The right answer is: V V B B
The model return: V V B B
right
S G T E -> G T E E
R O G A -> O G A A
L G D U H -> G D U H H
H A G -> A G G
Y X I T -> X I T T
R I H -> I H H
W L T -> L T T
E H T V -> H T V V
P U C ->
The right answer is: U C C
The model return: C C
false
d y s -> y s s
m u q k -> u q k k
g c r -> c r r
h l v -> l v v
u g k -> g k k
x u t p -> u t p p
k k n o -> k n o o
t m g n r -> m g n r r
k x w ->
The right answer is: x w w
The model return: x w w
right
k g y -> g y y
r d x -> d x x
m c d m t -> c d m t t
p s n s r -> s n s r r
i o b c n -> o b c n n
y p k w q -> p k w q q
g k n w o -> k n w o o
y f v -> f v v
c v u h ->
The right answer is: v u h h
The model return: v u h h
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 8]
==========================================================================
101
**line number: 4
g g g u -> u
m c n -> n
p k g -> g
r h l -> l
h h c r h ->
The right answer is: h
The model return: c r h
false
4 6 1 2 6 -> 6
6 3 3 -> 3
9 7 5 -> 5
0 3 3 -> 3
2 7 5 3 8 ->
The right answer is: 8
The model return: 5
false
**line number: 8
g g g u -> u
m c n -> n
p k g -> g
r h l -> l
i u z -> z
s i f s q -> q
d i m n -> n
q r e y -> y
h h c r h ->
The right answer is: h
The model return: r
false
4 6 1 2 6 -> 6
6 3 3 -> 3
9 7 5 -> 5
0 3 3 -> 3
4 8 8 5 8 -> 8
6 6 7 6 0 -> 0
7 3 6 7 -> 7
2 3 6 0 -> 0
2 7 5 3 8 ->
The right answer is: 8
The model return: 8
right
4 9 2 5 2 -> 2
2 9 3 -> 3
0 9 7 4 -> 4
0 2 3 -> 3
2 1 2 8 9 -> 9
9 1 9 8 -> 8
9 9 4 9 -> 9
0 8 4 9 -> 9
1 9 0 8 ->
The right answer is: 8
The model return: 8
right
S B G -> G
Z P F G Y -> Y
E H M K -> K
A L A K -> K
E I F -> F
O U Z X T -> T
M F D -> D
R V G A -> A
R D X B ->
The right answer is: B
The model return: B
right
8 9 7 6 4 -> 4
5 5 5 7 -> 7
0 4 0 -> 0
1 6 0 9 1 -> 1
7 8 1 2 6 -> 6
9 2 0 4 -> 4
0 1 1 7 4 -> 4
0 0 0 -> 0
6 4 5 9 ->
The right answer is: 9
The model return: 9
right
@@@@@@@@@@@@ 8 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], 8]
==========================================================================
102
**line number: 4
5 8 4 8 -> 8 4 8
3 8 4 5 5 -> 8 4 5 5
5 5 9 8 0 -> 5 9 8 0
2 3 9 1 8 -> 3 9 1 8
3 5 0 7 ->
The right answer is: 5 0 7
The model return: 3 5 0 7
false
k z i i -> z i i
l w f b k -> w f b k
w u f d u -> u f d u
x q t y d -> q t y d
z o p g q ->
The right answer is: o p g q
The model return: o p g q
right
T W T T U -> W T T U
M G I -> G I
L G A -> G A
Q W K H -> W K H
R N D M L ->
The right answer is: N D M L
The model return: N D M L
right
c a x y -> a x y
v k q -> k q
z b b f e -> b b f e
d e i -> e i
g t a g k ->
The right answer is: t a g k
The model return: t a g k
right
H G S I D -> G S I D
U X M G Q -> X M G Q
O E T -> E T
O H O W A -> H O W A
O X P ->
The right answer is: X P
The model return: X P
right
@@@@@@@@@@@@ 4 @@@@@@@@@@@@
###  [[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], 4]
==========================================================================
103
**line number: 4
I 0 i c -> 0 i c
5 x n y Y -> x n y Y
I p 3 G -> p 3 G
2 k h M -> k h M
d 4 L ->
The right answer is: 4 L
The model return: d 4 L
false
3 k 7 -> k 7
5 3 k -> 3 k
1 4 s 0 5 -> 5 s 0 4
6 x 2 q g -> x 2 q g
8 m g 1 ->
The right answer is: m g 1
The model return: m g 1
right
l X 5 0 -> X 0 5
F u 4 -> u 4
E Y E z 7 -> Y E z 7
Q 3 c -> 3 c
k W 9 ->
The right answer is: W 9
The model return: W 9
right
0 4 E -> 4 E
4 G Z 7 1 -> G Z 1 7
T H 9 -> H 9
4 7 P 8 3 -> 3 P 8 7
Z P 4 E ->
The right answer is: P 4 E
The model return: 4 E Z
false
**line number: 8
I 0 i c -> 0 i c
5 x n y Y -> x n y Y
I p 3 G -> p 3 G
2 k h M -> k h M
6 Q w -> Q w
G o 6 3 -> o 3 6
8 N e -> N e
q l 7 P 1 -> l 1 P 7
d 4 L ->
The right answer is: 4 L
The model return: d L 4
false
3 k 7 -> k 7
5 3 k -> 3 k
1 4 s 0 5 -> 5 s 0 4
6 x 2 q g -> x 2 q g
m 9 4 -> 4 9
r 5 0 -> 0 5
5 t e 9 -> t e 9
b 8 7 0 -> 0 7 8
8 m g 1 ->
The right answer is: m g 1
The model return: 1 g m
false
**line number: 16
I 0 i c -> 0 i c
5 x n y Y -> x n y Y
I p 3 G -> p 3 G
2 k h M -> k h M
6 Q w -> Q w
G o 6 3 -> o 3 6
8 N e -> N e
q l 7 P 1 -> l 1 P 7
L n 0 -> n 0
k 2 K g A -> 2 K g A
7 3 v E 6 -> 6 v E 3
R 2 a l -> 2 a l
R s 0 4 r -> s 4 0 r
d R o 1 -> R o 1
9 C G m -> C G m
3 S i 5 3 -> S i 3 5
d 4 L ->
The right answer is: 4 L
The model return: d L
false
3 k 7 -> k 7
5 3 k -> 3 k
1 4 s 0 5 -> 5 s 0 4
6 x 2 q g -> x 2 q g
m 9 4 -> 4 9
r 5 0 -> 0 5
5 t e 9 -> t e 9
b 8 7 0 -> 0 7 8
g g d n 6 -> g d n 6
7 e 8 -> e 8
9 8 w -> 8 w
9 7 8 i -> 8 7 i
2 p 4 2 -> p 2 4
5 l 0 -> l 0
7 n l -> n l
r f 4 a w -> f 4 a w
8 m g 1 ->
The right answer is: m g 1
The model return: g 1 m
false
**line number: 32
I 0 i c -> 0 i c
5 x n y Y -> x n y Y
I p 3 G -> p 3 G
2 k h M -> k h M
6 Q w -> Q w
G o 6 3 -> o 3 6
8 N e -> N e
q l 7 P 1 -> l 1 P 7
L n 0 -> n 0
k 2 K g A -> 2 K g A
7 3 v E 6 -> 6 v E 3
R 2 a l -> 2 a l
R s 0 4 r -> s 4 0 r
d R o 1 -> R o 1
9 C G m -> C G m
3 S i 5 3 -> S i 3 5
R n Q 4 B -> n Q 4 B
6 u B R -> u B R
1 4 x D l -> 4 x D l
x 7 T 4 -> 4 T 7
r 7 E -> 7 E
D Q 8 R l -> Q 8 R l
h 1 G -> 1 G
2 u 1 X 5 -> u 5 X 1
d 4 z I -> 4 z I
4 U k -> U k
2 g W -> g W
M 3 2 n -> 2 3 n
g 5 A -> 5 A
2 3 4 Z h -> 4 3 Z h
H t L Z 9 -> t L Z 9
3 S g w o -> S g w o
d 4 L ->
The right answer is: 4 L
The model return: 4 L
right
3 k 7 -> k 7
5 3 k -> 3 k
1 4 s 0 5 -> 5 s 0 4
6 x 2 q g -> x 2 q g
m 9 4 -> 4 9
r 5 0 -> 0 5
5 t e 9 -> t e 9
b 8 7 0 -> 0 7 8
g g d n 6 -> g d n 6
7 e 8 -> e 8
9 8 w -> 8 w
9 7 8 i -> 8 7 i
2 p 4 2 -> p 2 4
5 l 0 -> l 0
7 n l -> n l
r f 4 a w -> f 4 a w
d 5 1 8 g -> 8 1 5 g
u r 0 -> r 0
k 3 c -> 3 c
0 3 n -> 3 n
g 9 1 i r -> 1 9 i r
g l 5 -> l 5
m 5 5 9 -> 9 5 5
2 1 v 1 -> 1 v 1
9 b 2 1 3 -> b 3 1 2
9 7 c m -> 7 c m
0 g 0 -> g 0
9 1 6 z 6 -> 6 6 z 1
1 2 t -> 2 t
p 8 z -> 8 z
8 e 1 8 v -> e 8 1 v
7 i t 1 1 -> i t 1 1
8 m g 1 ->
The right answer is: m g 1
The model return: g 1 m
false
l X 5 0 -> X 0 5
F u 4 -> u 4
E Y E z 7 -> Y E z 7
Q 3 c -> 3 c
V s f 0 -> s f 0
V t 9 O Q -> t 9 O Q
D v 9 l v -> v 9 l v
9 W c -> W c
6 5 Q g 7 -> 7 Q g 5
D 0 y -> 0 y
2 d B -> d B
v L 4 Z -> L 4 Z
9 P u i -> P u i
S Q x 6 X -> Q x 6 X
q 3 N -> 3 N
m 9 D a 1 -> 1 D a 9
D 1 T l -> 1 T l
2 V s g -> V s g
v 3 Q -> 3 Q
0 Z I q B -> Z I q B
5 D 5 w 8 -> D 8 w 5
S 0 v z i -> 0 v z i
T l s 9 -> l s 9
t 7 t R -> 7 t R
L 1 s -> 1 s
F 2 0 q -> 0 2 q
K v 8 -> v 8
c Y 5 a -> Y 5 a
1 d Z h 8 -> d Z h 8
3 y U -> y U
s 1 G n -> 1 G n
E z 5 o X -> z 5 o X
k W 9 ->
The right answer is: W 9
The model return: W 9
right
0 4 E -> 4 E
4 G Z 7 1 -> G Z 1 7
T H 9 -> H 9
4 7 P 8 3 -> 3 P 8 7
X 0 9 -> 9 0
I 9 8 5 G -> 5 8 9 G
D 4 0 7 G -> 7 0 4 G
B E 3 H -> E 3 H
8 L L 0 -> L L 0
9 1 9 L 1 -> 1 9 L 1
1 O 0 -> O 0
4 4 4 C -> 4 4 C
P V S 7 X -> V S 7 X
P 1 F O -> 1 F O
L E 9 -> E 9
0 F 1 4 5 -> F 5 4 1
E 5 D 5 -> 5 D 5
6 N 6 2 -> N 2 6
I W 0 -> W 0
8 3 C 3 9 -> 9 C 3 3
4 Y 3 0 -> Y 0 3
D 3 1 P -> 1 3 P
N 2 F H G -> 2 F H G
2 Y 5 B V -> Y 5 B V
X 6 7 V -> 7 6 V
3 O 0 -> O 0
I 1 O -> 1 O
A 9 F -> 9 F
2 A 8 G Y -> A 8 G Y
7 L 1 G 1 -> L 1 G 1
5 V N 5 V -> V N 5 V
8 4 A 7 -> 7 A 4
Z P 4 E ->
The right answer is: P 4 E
The model return: 4 E Z
false
@@@@@@@@@@@@ -1 @@@@@@@@@@@@
###  [[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
==========================================================================
104
**line number: 4
I K 9 -> 9
9 F P -> 
L 0 I -> 0
L P O A 8 -> 8
E 8 4 D ->
The right answer is: 8 4
The model return: 4
false
S 0 3 S A -> 0 3
F G 6 W -> 6
9 5 K -> 5
L R 6 -> 6
9 M W Y N ->
The right answer is: 
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 32]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 32]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], 16]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], 8]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 32]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1']]
210
all is ok.
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single']]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 8]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'to_uppercase']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'to_uppercase']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'to_lowercase']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'dec']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'dec']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'dec']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'reverse_data']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'sort_flag_1']]
[[['digits'], 3, 5], ['find_max', 'inc']]
[[['digits'], 3, 5], ['find_max', 'dec']]
[[['digits'], 3, 5], ['find_max', 'repeat_single']]
[[['digits'], 3, 5], ['find_max', 'get_flag_1']]
[[['digits'], 3, 5], ['find_max', 'drop_flag_1']]
[[['digits'], 3, 5], ['find_min', 'inc']]
[[['digits'], 3, 5], ['find_min', 'dec']]
[[['digits'], 3, 5], ['find_min', 'repeat_single']]
[[['digits'], 3, 5], ['find_min', 'get_flag_1']]
[[['digits'], 3, 5], ['find_min', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'reverse_data']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'get_the_count_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'inc']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'dec']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'reverse_data']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'get_the_count_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'inc']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'dec']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'reverse_data']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'get_the_count_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'dec']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'inc']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'dec']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'repeat_single']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'reverse_data']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'get_the_count_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'get_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'drop_flag_1']]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first_last', 'sort_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_letters', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_letters', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_letters', 'drop_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_letters', 'inc']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_letters', 'dec']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_letters', 'get_flag_1']]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_letters', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'inc']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'dec']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_lower', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'inc']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'dec']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last_lower', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'inc']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'dec']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_first_upper', 'drop_flag_1']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'inc']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'dec']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'repeat_single']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'get_flag_1']]
[[['lower+upper'], 3, 5], ['find_last_upper', 'drop_flag_1']]
115
all is ok.
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 2]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], 3]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], 3]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], 3]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1'], 4, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1'], -1, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1'], 16, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 32, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 16, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 8, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1'], 4, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 2]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], 3]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], 3]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], 3]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1'], 4, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1'], -1, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1'], 16, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 32, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 16, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 8, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1'], 4, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 2]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], 3]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], 3]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], 3]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1'], 4, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1'], -1, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1'], 16, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 32, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 16, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 8, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1'], 4, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'to_uppercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'to_lowercase'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'to_lowercase'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first', 'drop_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_digits', 'get_flag_1'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_letters', 'drop_flag_1'], 2]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_lower_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_middle', 'drop_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'repeat_single'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'repeat_single'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_letters', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_all', 'repeat_fragment', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'to_lowercase'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'reverse_data'], 2]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'repeat_single'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_digits', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_last_digits', 'repeat_single'], 3]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_lower_letters', 'to_uppercase', 'find_first_upper', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'inc'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_all', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_last', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'inc'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_first_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_upper_letters', 'to_lowercase', 'find_last_lower', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'inc'], 3]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last', 'get_flag_1'], 1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_all', 'get_flag_1'], 3]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'reverse_data'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_letters', 'drop_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_upper_letters', 'get_the_count_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first_upper', 'to_lowercase', 'find_last_lower', 'get_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'reverse_data'], 2]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_letters', 'drop_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_lower_letters', 'get_flag_1'], 3]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], 3]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'repeat_single', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first', 'repeat_single', 'find_last_lower', 'get_flag_1'], 2]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'inc'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'repeat_single'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_all', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_digits', 'get_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'get_the_count_flag_1'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_letters', 'drop_flag_1'], 4, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_lower_letters', 'get_flag_1'], -1, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_upper_letters', 'get_the_count_flag_1'], 16, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 8, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 32, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 16, -1]
[[['lower+upper'], 3, 5], ['find_first', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 8, -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_all', 'get_flag_1'], 4, -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'reverse_data'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_digits', 'get_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_letters', 'drop_flag_1'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_lower_letters', 'get_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'inc', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'inc', 'find_first_upper', 'get_flag_1'], 16]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_all', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'reverse_data'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_letters', 'drop_flag_1'], 8]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_lower_letters', 'get_flag_1'], -1]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_upper_letters', 'get_the_count_flag_1'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_last', 'repeat_single', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'inc'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'repeat_single'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'repeat_single'], 16]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'repeat_single'], 4]
[[['lower+upper'], 3, 5], ['find_last', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_letters', 'drop_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_lower_letters', 'get_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_middle', 'drop_flag_1'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_digits', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'repeat_single'], 16]
[[['digits+lower+upper'], 3, 5], ['find_digits', 'reverse_data', 'find_first_upper', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_middle', 'drop_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'inc'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_letters', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 4]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'repeat_single'], -1]
[[['digits', 'lower', 'upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_last', 'get_the_count_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'inc'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'repeat_single'], 32]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_digits', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'repeat_single'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_letters', 'get_flag_1'], 4]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_letters', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_last_lower', 'get_flag_1'], 32]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'repeat_single'], -1]
[[['lower+upper'], 3, 5], ['find_middle', 'drop_flag_1', 'find_first_upper', 'get_flag_1'], 16]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'inc', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_digits', 'repeat_single'], -1]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_letters', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_first_digits', 'repeat_single', 'find_last_lower', 'get_flag_1'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'repeat_single'], 8]
[[['digits+lower', 'digits+upper', 'digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_letters', 'get_flag_1'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'repeat_single'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_digits', 'repeat_single', 'find_first_upper', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_first_letters', 'repeat_single', 'find_last_lower', 'get_flag_1'], 4]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'repeat_single'], 8]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_lower', 'get_flag_1'], 32]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'repeat_single'], -1]
[[['digits+lower+upper'], 3, 5], ['find_last_letters', 'repeat_single', 'find_first_upper', 'get_flag_1'], 4]
[[['lower+upper'], 3, 5], ['find_first_lower', 'repeat_single', 'find_last_lower', 'get_flag_1'], 16]
11
